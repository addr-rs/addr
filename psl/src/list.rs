
#![allow(clippy::all)] // TODO lint this code?

// WARNING: Auto-generated code. Any changes in this file will be overwritten.

use crate::{Info, Psl, Type};
#[doc = r" Access to the compiled native list"]
#[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash, Debug, Default)]
pub struct List;
impl List {
    #[doc = r" Creates an instance of a new list"]
    #[inline]
    pub fn new() -> Self {
        Self
    }
}
impl Psl for List {
    fn find(&self, domain: &[u8]) -> Info {
        let mut info = Info { len: 0, typ: None };
        let mut labels = domain.rsplit(|x| *x == b'.');
        let fqdn = if domain.ends_with(b".") {
            labels.next();
            true
        } else {
            false
        };
        info = lookup(labels, info);
        if fqdn && info.len > 0 {
            info.len += 1;
        }
        info
    }
}
#[inline]
fn lookup<'a, T>(mut labels: T, mut info: Info) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    match labels.next() {
        Some(label) => match label {
            [104, 100, 102, 99] => lookup_0(),
            [120, 110, 45, 45, 110, 103, 98, 101, 57, 101, 48, 97] => lookup_1(),
            [120, 110, 45, 45, 116, 99, 107, 119, 101] => lookup_2(),
            [98, 117, 105, 108, 100] => lookup_3(),
            [104, 111, 117, 115, 101] => lookup_4(),
            [112, 104, 100] => lookup_5(),
            [106, 109, 112] => lookup_6(),
            [99, 97, 115, 101] => lookup_7(),
            [108, 101, 102, 114, 97, 107] => lookup_8(),
            [102, 105, 114, 101] => lookup_9(),
            [107, 105] => lookup_10(labels),
            [98, 101, 101, 114] => lookup_11(),
            [115, 109, 97, 114, 116] => lookup_12(),
            [110, 101, 120, 116] => lookup_13(),
            [112, 111, 115, 116] => lookup_14(),
            [209, 128, 209, 132] => lookup_15(),
            [98, 108, 111, 99, 107, 98, 117, 115, 116, 101, 114] => lookup_16(),
            [114, 119] => lookup_17(labels),
            [120, 110, 45, 45, 57, 48, 97, 51, 97, 99] => lookup_18(labels),
            [116, 104, 101, 97, 116, 101, 114] => lookup_19(),
            [102, 97, 109, 105, 108, 121] => lookup_20(),
            [97, 98, 108, 101] => lookup_21(),
            [230, 151, 182, 229, 176, 154] => lookup_22(),
            [110, 114] => lookup_23(labels),
            [97, 108, 115, 97, 99, 101] => lookup_24(),
            [97, 103, 97, 107, 104, 97, 110] => lookup_25(),
            [116, 109, 97, 108, 108] => lookup_26(),
            [216, 167, 217, 132, 217, 133, 216, 186, 216, 177, 216, 168] => lookup_27(),
            [120, 110, 45, 45, 109, 107, 49, 98, 117, 52, 52, 99] => lookup_28(),
            [109, 108, 115] => lookup_29(),
            [122, 117, 101, 114, 105, 99, 104] => lookup_30(),
            [98, 111, 120] => lookup_31(),
            [120, 110, 45, 45, 100, 49, 97, 99, 106, 51, 98] => lookup_32(),
            [97, 99, 99, 101, 110, 116, 117, 114, 101] => lookup_33(),
            [120, 110, 45, 45, 121, 57, 97, 51, 97, 113] => lookup_34(),
            [111, 116, 115, 117, 107, 97] => lookup_35(),
            [100, 101, 115, 105] => lookup_36(),
            [119, 105, 110, 100, 111, 119, 115] => lookup_37(),
            [120, 110, 45, 45, 99, 108, 99, 104, 99, 48, 101, 97, 48, 98, 50, 103, 50, 97, 57, 103, 99, 100] => {
                lookup_38()
            }
            [97, 118, 105, 97, 110, 99, 97] => lookup_39(),
            [103, 97, 109, 101] => lookup_40(),
            [110, 101, 120, 116, 100, 105, 114, 101, 99, 116] => lookup_41(),
            [97, 114, 97, 98] => lookup_42(),
            [217, 131, 216, 167, 216, 171, 217, 136, 217, 132, 217, 138, 217, 131] => lookup_43(),
            [100, 122] => lookup_44(labels),
            [228, 184, 173, 229, 155, 189] => lookup_45(),
            [112, 111, 108, 105, 116, 105, 101] => lookup_46(),
            [115, 97, 110, 111, 102, 105] => lookup_47(),
            [102, 117, 106, 105, 116, 115, 117] => lookup_48(),
            [100, 111, 119, 110, 108, 111, 97, 100] => lookup_49(),
            [102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_50(labels),
            [120, 110, 45, 45, 113, 99, 107, 97, 49, 112, 109, 99] => lookup_51(),
            [119, 97, 116, 99, 104, 101, 115] => lookup_52(),
            [116, 106] => lookup_53(labels),
            [103, 100, 110] => lookup_54(labels),
            [112, 107] => lookup_55(labels),
            [103, 100] => lookup_56(labels),
            [224, 185, 132, 224, 184, 151, 224, 184, 162] => lookup_57(labels),
            [109, 118] => lookup_58(labels),
            [233, 166, 153, 230, 160, 188, 233, 135, 140, 230, 139, 137] => lookup_59(),
            [119, 109, 101] => lookup_60(),
            [116, 114, 118] => lookup_61(),
            [107, 111, 115, 104, 101, 114] => lookup_62(),
            [108, 99] => lookup_63(labels),
            [229, 152, 137, 233, 135, 140] => lookup_64(),
            [112, 101, 116] => lookup_65(),
            [114, 101, 97, 108, 116, 121] => lookup_66(),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_67(),
            [119, 116, 99] => lookup_68(),
            [116, 117, 105] => lookup_69(),
            [121, 117, 110] => lookup_70(),
            [230, 137, 139, 230, 156, 186] => lookup_71(),
            [101, 110, 101, 114, 103, 121] => lookup_72(),
            [110, 101, 116, 98, 97, 110, 107] => lookup_73(),
            [116, 107] => lookup_74(),
            [103, 103, 101, 101] => lookup_75(),
            [102, 105, 108, 109] => lookup_76(),
            [115, 111, 99, 105, 97, 108] => lookup_77(),
            [116, 104] => lookup_78(labels),
            [115, 117, 112, 112, 111, 114, 116] => lookup_79(labels),
            [97, 105, 114, 98, 117, 115] => lookup_80(),
            [99, 117] => lookup_81(labels),
            [114, 105, 111] => lookup_82(),
            [110, 111, 114, 116, 111, 110] => lookup_83(),
            [208, 181, 209, 142] => lookup_84(),
            [114, 105, 112] => lookup_85(labels),
            [208, 188, 208, 190, 208, 189] => lookup_86(),
            [120, 110, 45, 45, 52, 53, 113, 49, 49, 99] => lookup_87(),
            [120, 110, 45, 45, 51, 111, 113, 49, 56, 118, 108, 56, 112, 110, 51, 54, 97] => {
                lookup_88()
            }
            [110, 101, 116] => lookup_89(labels),
            [115, 98, 105] => lookup_90(),
            [104, 111, 116, 101, 108, 115] => lookup_91(),
            [105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108] => lookup_92(),
            [224, 186, 165, 224, 186, 178, 224, 186, 167] => lookup_93(),
            [98, 111, 117, 116, 105, 113, 117, 101] => lookup_94(),
            [98, 98, 116] => lookup_95(),
            [111, 110, 108, 105, 110, 101] => lookup_96(labels),
            [108, 105, 110, 107] => lookup_97(labels),
            [107, 97, 117, 102, 101, 110] => lookup_98(),
            [104, 101, 97, 108, 116, 104, 99, 97, 114, 101] => lookup_99(),
            [115, 108, 105, 110, 103] => lookup_100(),
            [100, 100, 115] => lookup_101(),
            [231, 130, 185, 231, 156, 139] => lookup_102(),
            [208, 186, 208, 190, 208, 188] => lookup_103(),
            [120, 110, 45, 45, 101, 102, 118, 121, 56, 56, 104] => lookup_104(),
            [216, 168, 218, 190, 216, 167, 216, 177, 216, 170] => lookup_105(),
            [103, 101] => lookup_106(labels),
            [100, 97, 121] => lookup_107(),
            [97, 97, 114, 112] => lookup_108(),
            [98, 98] => lookup_109(labels),
            [115, 105, 110, 103, 108, 101, 115] => lookup_110(),
            [104, 97, 109, 98, 117, 114, 103] => lookup_111(),
            [119, 104, 111, 115, 119, 104, 111] => lookup_112(),
            [98, 98, 118, 97] => lookup_113(),
            [120, 110, 45, 45, 52, 50, 99, 50, 100, 57, 97] => lookup_114(),
            [99, 114, 101, 100, 105, 116, 99, 97, 114, 100] => lookup_115(),
            [114, 101, 104, 97, 98] => lookup_116(),
            [108, 105, 112, 115, 121] => lookup_117(),
            [100, 111, 116] => lookup_118(),
            [118, 101, 114, 105, 115, 105, 103, 110] => lookup_119(),
            [216, 167, 216, 170, 216, 181, 216, 167, 217, 132, 216, 167, 216, 170] => lookup_120(),
            [114, 97, 99, 105, 110, 103] => lookup_121(),
            [110, 103] => lookup_122(labels),
            [112, 97, 114, 116, 115] => lookup_123(),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_124(),
            [229, 133, 172, 231, 155, 138] => lookup_125(),
            [98, 114, 97, 100, 101, 115, 99, 111] => lookup_126(),
            [108, 105, 110, 99, 111, 108, 110] => lookup_127(),
            [101, 118, 101, 110, 116, 115] => lookup_128(labels),
            [120, 110, 45, 45, 99, 122, 114, 54, 57, 52, 98] => lookup_129(),
            [99, 104, 117, 114, 99, 104] => lookup_130(),
            [112, 111, 104, 108] => lookup_131(),
            [109, 107] => lookup_132(labels),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_133(),
            [108, 105, 102, 101] => lookup_134(),
            [109, 111, 114, 109, 111, 110] => lookup_135(),
            [99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110] => lookup_136(),
            [103, 109, 97, 105, 108] => lookup_137(),
            [217, 135, 217, 133, 216, 177, 216, 167, 217, 135] => lookup_138(),
            [104, 111, 119] => lookup_139(),
            [120, 110, 45, 45, 114, 118, 99, 49, 101, 48, 97, 109, 51, 101] => lookup_140(),
            [114, 101, 112, 111, 114, 116] => lookup_141(),
            [98, 116] => lookup_142(labels),
            [231, 189, 145, 231, 187, 156] => lookup_143(),
            [98, 101, 116] => lookup_144(),
            [120, 110, 45, 45, 56, 48, 97, 115, 101, 104, 100, 98] => lookup_145(),
            [108, 97, 110, 99, 97, 115, 116, 101, 114] => lookup_146(),
            [111, 110, 103] => lookup_147(),
            [108, 111, 108] => lookup_148(labels),
            [120, 110, 45, 45, 116, 105, 113, 52, 57, 120, 113, 121, 106] => lookup_149(),
            [115, 104, 105, 107, 115, 104, 97] => lookup_150(),
            [115, 104, 111, 119] => lookup_151(),
            [114, 105, 108] => lookup_152(),
            [114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => lookup_153(),
            [118, 101, 116] => lookup_154(),
            [105, 110, 115, 116, 105, 116, 117, 116, 101] => lookup_155(),
            [104, 111, 115, 116, 105, 110, 103] => lookup_156(labels),
            [119, 101, 97, 116, 104, 101, 114, 99, 104, 97, 110, 110, 101, 108] => lookup_157(),
            [112, 102, 105, 122, 101, 114] => lookup_158(),
            [102, 114, 101, 101] => lookup_159(),
            [115, 105, 108, 107] => lookup_160(),
            [98, 111, 109] => lookup_161(),
            [115, 117, 122, 117, 107, 105] => lookup_162(),
            [118, 99] => lookup_163(labels),
            [105, 108] => lookup_164(labels),
            [120, 110, 45, 45, 109, 103, 98, 99, 112, 113, 54, 103, 112, 97, 49, 97] => {
                lookup_165()
            }
            [229, 190, 174, 229, 141, 154] => lookup_166(),
            [97, 117, 115, 112, 111, 115, 116] => lookup_167(),
            [114, 97, 105, 100] => lookup_168(),
            [120, 110, 45, 45, 109, 103, 98, 103, 117, 56, 50, 97] => lookup_169(),
            [109, 112] => lookup_170(),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_171(labels),
            [118, 111, 100, 107, 97] => lookup_172(),
            [109, 117, 116, 117, 97, 108] => lookup_173(),
            [104, 111, 109, 101, 103, 111, 111, 100, 115] => lookup_174(),
            [108, 97, 119, 121, 101, 114] => lookup_175(),
            [120, 110, 45, 45, 109, 105, 120, 48, 56, 50, 102] => lookup_176(),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_177(),
            [103, 97] => lookup_178(),
            [102, 105, 116] => lookup_179(),
            [103, 108, 111, 98, 97, 108] => lookup_180(),
            [102, 108, 105, 99, 107, 114] => lookup_181(),
            [233, 163, 159, 229, 147, 129] => lookup_182(),
            [208, 190, 209, 128, 208, 179] => lookup_183(),
            [120, 110, 45, 45, 111, 51, 99, 119, 52, 104] => lookup_184(labels),
            [208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189] => lookup_185(),
            [103, 103] => lookup_186(labels),
            [120, 110, 45, 45, 118, 117, 113, 56, 54, 49, 98] => lookup_187(),
            [97, 102, 108] => lookup_188(),
            [106, 112, 109, 111, 114, 103, 97, 110] => lookup_189(),
            [98, 122] => lookup_190(labels),
            [112, 97, 114, 116, 110, 101, 114, 115] => lookup_191(),
            [120, 110, 45, 45, 52, 53, 98, 114, 106, 57, 99] => lookup_192(),
            [101, 120, 116, 114, 97, 115, 112, 97, 99, 101] => lookup_193(),
            [115, 116, 97, 112, 108, 101, 115] => lookup_194(),
            [114, 115, 118, 112] => lookup_195(),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_196(labels),
            [106, 101, 119, 101, 108, 114, 121] => lookup_197(),
            [97, 108, 105, 98, 97, 98, 97] => lookup_198(),
            [105, 118, 101, 99, 111] => lookup_199(),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_200(),
            [98, 122, 104] => lookup_201(),
            [110, 97, 116, 105, 111, 110, 119, 105, 100, 101] => lookup_202(),
            [98, 105, 107, 101] => lookup_203(),
            [98, 105, 110, 103] => lookup_204(),
            [101, 116, 105, 115, 97, 108, 97, 116] => lookup_205(),
            [99, 97, 109, 112] => lookup_206(),
            [97, 117, 100, 105] => lookup_207(),
            [119, 97, 108, 109, 97, 114, 116] => lookup_208(),
            [108, 115] => lookup_209(labels),
            [98, 111, 116] => lookup_210(),
            [117, 103] => lookup_211(labels),
            [105, 115, 116] => lookup_212(),
            [98, 111, 115, 116, 105, 107] => lookup_213(),
            [103, 97, 108, 108, 117, 112] => lookup_214(),
            [120, 110, 45, 45, 113, 120, 97, 54, 97] => lookup_215(),
            [105, 101] => lookup_216(labels),
            [112, 119, 99] => lookup_217(),
            [206, 181, 207, 133] => lookup_218(),
            [105, 99, 101] => lookup_219(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 51, 101, 106, 116] => lookup_220(),
            [119, 97, 110, 103] => lookup_221(),
            [101, 112, 115, 111, 110] => lookup_222(),
            [101, 100, 117] => lookup_223(labels),
            [97, 114, 116] => lookup_224(),
            [112, 105, 99, 115] => lookup_225(),
            [100, 117, 112, 111, 110, 116] => lookup_226(),
            [99, 121, 111, 117] => lookup_227(),
            [103, 108, 97, 100, 101] => lookup_228(),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_229(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224, 165, 141] => {
                lookup_230()
            }
            [110, 97, 98] => lookup_231(),
            [118, 105, 97, 106, 101, 115] => lookup_232(),
            [121, 111, 117, 116, 117, 98, 101] => lookup_233(),
            [231, 189, 145, 229, 157, 128] => lookup_234(),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_235(),
            [109, 101, 110] => lookup_236(labels),
            [116, 97, 120, 105] => lookup_237(),
            [117, 115] => lookup_238(labels),
            [97, 114, 116, 101] => lookup_239(),
            [119, 116, 102] => lookup_240(),
            [111, 110, 108] => lookup_241(),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_242(),
            [120, 110, 45, 45, 49, 113, 113, 119, 50, 51, 97] => lookup_243(),
            [109, 101, 101, 116] => lookup_244(),
            [115, 109, 105, 108, 101] => lookup_245(),
            [120, 110, 45, 45, 51, 112, 120, 117, 56, 107] => lookup_246(),
            [108, 111, 99, 107, 101, 114] => lookup_247(),
            [114, 101, 115, 116] => lookup_248(),
            [106, 105, 111] => lookup_249(),
            [98, 103] => lookup_250(labels),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169] => {
                lookup_251()
            }
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103, 45, 112, 119, 98] => {
                lookup_252()
            }
            [120, 110, 45, 45, 49, 99, 107, 50, 101, 49, 98] => lookup_253(),
            [107, 105, 119, 105] => lookup_254(),
            [97, 115] => lookup_255(labels),
            [103, 111, 118] => lookup_256(),
            [99, 97, 110, 99, 101, 114, 114, 101, 115, 101, 97, 114, 99, 104] => lookup_257(),
            [116, 114, 97, 118, 101, 108, 99, 104, 97, 110, 110, 101, 108] => lookup_258(),
            [120, 110, 45, 45, 106, 108, 113, 52, 56, 48, 110, 50, 114, 103] => lookup_259(),
            [110, 101, 117, 115, 116, 97, 114] => lookup_260(),
            [100, 117, 99, 107] => lookup_261(),
            [109, 104] => lookup_262(),
            [120, 110, 45, 45, 109, 103, 98, 116, 120, 50, 98] => lookup_263(),
            [101, 100, 101, 107, 97] => lookup_264(),
            [110, 101, 99] => lookup_265(),
            [111, 102, 102, 105, 99, 101] => lookup_266(),
            [99, 111, 117, 114, 115, 101, 115] => lookup_267(),
            [97, 100, 117, 108, 116] => lookup_268(),
            [119, 111, 111, 100, 115, 105, 100, 101] => lookup_269(),
            [112, 97] => lookup_270(labels),
            [98, 114, 105, 100, 103, 101, 115, 116, 111, 110, 101] => lookup_271(),
            [113, 118, 99] => lookup_272(),
            [110, 111, 107, 105, 97] => lookup_273(),
            [105, 115, 109, 97, 105, 108, 105] => lookup_274(),
            [108, 111, 97, 110, 115] => lookup_275(),
            [102, 117, 110, 100] => lookup_276(),
            [108, 111, 118, 101] => lookup_277(),
            [116, 105, 112, 115] => lookup_278(),
            [109, 121] => lookup_279(labels),
            [229, 143, 176, 230, 185, 190] => lookup_280(),
            [113, 117, 101, 98, 101, 99] => lookup_281(),
            [217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134] => lookup_282(),
            [227, 130, 179, 227, 131, 160] => lookup_283(),
            [115, 98] => lookup_284(labels),
            [120, 110, 45, 45, 102, 99, 116, 52, 50, 57, 107] => lookup_285(),
            [100, 105, 115, 99, 111, 118, 101, 114] => lookup_286(),
            [112, 111, 114, 110] => lookup_287(labels),
            [115, 97, 120, 111] => lookup_288(),
            [116, 106, 109, 97, 120, 120] => lookup_289(),
            [120, 110, 45, 45, 106, 118, 114, 49, 56, 57, 109] => lookup_290(),
            [224, 164, 149, 224, 165, 137, 224, 164, 174] => lookup_291(),
            [115, 97, 102, 101] => lookup_292(),
            [100, 105, 115, 104] => lookup_293(),
            [98, 97, 105, 100, 117] => lookup_294(),
            [112, 114, 111, 102] => lookup_295(),
            [228, 184, 173, 228, 191, 161] => lookup_296(),
            [216, 167, 217, 132, 217, 138, 217, 133, 217, 134] => lookup_297(),
            [97, 98, 98, 111, 116, 116] => lookup_298(),
            [104, 111, 109, 101, 115] => lookup_299(),
            [115, 104, 111, 101, 115] => lookup_300(),
            [115, 107] => lookup_301(labels),
            [118, 117, 101, 108, 111, 115] => lookup_302(),
            [108, 108, 99] => lookup_303(),
            [106, 110, 106] => lookup_304(),
            [112, 105, 99, 116, 101, 116] => lookup_305(),
            [99, 111, 108, 111, 103, 110, 101] => lookup_306(),
            [100, 97, 100] => lookup_307(),
            [115, 97, 107, 117, 114, 97] => lookup_308(),
            [108, 101, 99, 108, 101, 114, 99] => lookup_309(),
            [105, 99, 98, 99] => lookup_310(),
            [104, 105, 115, 97, 109, 105, 116, 115, 117] => lookup_311(),
            [109, 109, 97] => lookup_312(),
            [109, 111, 98, 105] => lookup_313(labels),
            [100, 105, 103, 105, 116, 97, 108] => lookup_314(labels),
            [109, 97, 100, 114, 105, 100] => lookup_315(),
            [112, 105, 110, 103] => lookup_316(),
            [99, 104, 97, 114, 105, 116, 121] => lookup_317(),
            [119, 97, 108, 101, 115] => lookup_318(),
            [101, 109, 101, 114, 99, 107] => lookup_319(),
            [119, 102] => lookup_320(),
            [115, 120] => lookup_321(labels),
            [97, 115, 105, 97] => lookup_322(labels),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_323(labels),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_324(),
            [98, 117, 103, 97, 116, 116, 105] => lookup_325(),
            [107, 101] => lookup_326(labels),
            [115, 99, 98] => lookup_327(),
            [97, 98, 99] => lookup_328(),
            [101, 115] => lookup_329(labels),
            [111, 111, 111] => lookup_330(),
            [97, 97, 97] => lookup_331(),
            [97, 105, 114, 102, 111, 114, 99, 101] => lookup_332(),
            [115, 104, 111, 112] => lookup_333(labels),
            [118, 97, 110, 97] => lookup_334(),
            [120, 110, 45, 45, 51, 48, 114, 114, 55, 121] => lookup_335(),
            [102, 111, 114, 115, 97, 108, 101] => lookup_336(),
            [105, 110, 116, 117, 105, 116] => lookup_337(),
            [109, 97, 110, 97, 103, 101, 109, 101, 110, 116] => lookup_338(labels),
            [228, 191, 161, 230, 129, 175] => lookup_339(),
            [99, 108, 117, 98, 109, 101, 100] => lookup_340(),
            [104, 111, 115, 116] => lookup_341(labels),
            [105, 110, 115, 117, 114, 101] => lookup_342(),
            [103, 101, 111, 114, 103, 101] => lookup_343(),
            [107, 117, 111, 107, 103, 114, 111, 117, 112] => lookup_344(),
            [102, 97, 110, 115] => lookup_345(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99] => lookup_346(),
            [109, 97, 115, 101, 114, 97, 116, 105] => lookup_347(),
            [97, 116] => lookup_348(labels),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_349(),
            [107, 111, 109, 97, 116, 115, 117] => lookup_350(),
            [108, 111, 116, 116, 111] => lookup_351(),
            [101, 115, 116, 97, 116, 101] => lookup_352(labels),
            [97, 108, 108, 102, 105, 110, 97, 110, 122] => lookup_353(),
            [112, 105, 122, 122, 97] => lookup_354(),
            [120, 110, 45, 45, 122, 102, 114, 49, 54, 52, 98] => lookup_355(),
            [108, 107] => lookup_356(labels),
            [118, 97] => lookup_357(),
            [104, 111, 110, 100, 97] => lookup_358(),
            [103, 97, 112] => lookup_359(),
            [109, 117, 115, 101, 117, 109] => lookup_360(labels),
            [228, 184, 173, 230, 150, 135, 231, 189, 145] => lookup_361(),
            [120, 110, 45, 45, 107, 112, 114, 119, 49, 51, 100] => lookup_362(),
            [98, 97, 114, 99, 108, 97, 121, 99, 97, 114, 100] => lookup_363(),
            [230, 136, 145, 231, 136, 177, 228, 189, 160] => lookup_364(),
            [120, 110, 45, 45, 102, 106, 113, 55, 50, 48, 97] => lookup_365(),
            [120, 110, 45, 45, 112, 103, 98, 115, 48, 100, 104] => lookup_366(),
            [120, 110, 45, 45, 56, 48, 97, 113, 101, 99, 100, 114, 49, 97] => lookup_367(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97, 55, 49, 101] => lookup_368(),
            [103, 98, 105, 122] => lookup_369(),
            [114, 101, 105, 116] => lookup_370(),
            [109, 97, 99, 121, 115] => lookup_371(),
            [108, 97] => lookup_372(labels),
            [115, 97, 115] => lookup_373(),
            [99, 97, 115, 105, 110, 111] => lookup_374(),
            [97, 102] => lookup_375(labels),
            [116, 102] => lookup_376(),
            [120, 110, 45, 45, 110, 110, 120, 51, 56, 56, 97] => lookup_377(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114] => {
                lookup_378()
            }
            [97, 98, 111, 103, 97, 100, 111] => lookup_379(),
            [112, 114, 101, 115, 115] => lookup_380(),
            [97, 108, 108, 121] => lookup_381(),
            [228, 184, 150, 231, 149, 140] => lookup_382(),
            [112, 114, 97, 109, 101, 114, 105, 99, 97] => lookup_383(),
            [103, 102] => lookup_384(),
            [99, 111, 111, 112] => lookup_385(),
            [110, 98, 97] => lookup_386(),
            [114, 101, 100] => lookup_387(),
            [101, 117] => lookup_388(labels),
            [118, 105, 108, 108, 97, 115] => lookup_389(),
            [109, 113] => lookup_390(),
            [100, 105, 101, 116] => lookup_391(),
            [97, 98, 98, 118, 105, 101] => lookup_392(),
            [115, 99, 111, 116] => lookup_393(labels),
            [98, 101] => lookup_394(labels),
            [111, 114, 97, 99, 108, 101] => lookup_395(),
            [97, 117, 100, 105, 111] => lookup_396(),
            [109, 97, 105, 115, 111, 110] => lookup_397(),
            [99, 97, 102, 101] => lookup_398(),
            [114, 101] => lookup_399(labels),
            [120, 110, 45, 45, 53, 52, 98, 55, 102, 116, 97, 48, 99, 99] => lookup_400(),
            [116, 118, 115] => lookup_401(),
            [109, 110] => lookup_402(labels),
            [120, 110, 45, 45, 57, 101, 116, 53, 50, 117] => lookup_403(),
            [224, 166, 173, 224, 166, 190, 224, 166, 176, 224, 166, 164] => lookup_404(),
            [112, 114, 111, 116, 101, 99, 116, 105, 111, 110] => lookup_405(),
            [230, 150, 176, 229, 138, 160, 229, 157, 161] => lookup_406(),
            [108, 105, 107, 101] => lookup_407(),
            [115, 119, 97, 116, 99, 104] => lookup_408(),
            [104, 97, 110, 103, 111, 117, 116] => lookup_409(),
            [97, 114, 112, 97] => lookup_410(labels),
            [114, 105, 99, 104] => lookup_411(),
            [216, 185, 216, 177, 216, 168] => lookup_412(),
            [120, 110, 45, 45, 114, 111, 118, 117, 56, 56, 98] => lookup_413(),
            [120, 102, 105, 110, 105, 116, 121] => lookup_414(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 165, 139, 224, 164, 164] => {
                lookup_415()
            }
            [99, 97, 114, 115] => lookup_416(),
            [112, 111, 107, 101, 114] => lookup_417(),
            [109, 97] => lookup_418(labels),
            [111, 115, 97, 107, 97] => lookup_419(),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_420(),
            [98, 97, 121, 101, 114, 110] => lookup_421(),
            [106, 97, 118, 97] => lookup_422(),
            [103, 119] => lookup_423(),
            [97, 98, 97, 114, 116, 104] => lookup_424(),
            [97, 117, 116, 104, 111, 114] => lookup_425(),
            [115, 97, 108, 101] => lookup_426(labels),
            [103, 109, 120] => lookup_427(),
            [115, 104, 97, 114, 112] => lookup_428(),
            [109, 97, 112] => lookup_429(),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115] => lookup_430(),
            [108, 97, 116, 105, 110, 111] => lookup_431(),
            [115, 117, 114, 102] => lookup_432(),
            [120, 110, 45, 45, 102, 108, 119, 51, 53, 49, 101] => lookup_433(),
            [103, 117, 103, 101] => lookup_434(),
            [116, 97, 111, 98, 97, 111] => lookup_435(),
            [116, 114, 97, 100, 101] => lookup_436(labels),
            [115, 97, 118, 101] => lookup_437(),
            [116, 105, 102, 102, 97, 110, 121] => lookup_438(),
            [116, 101, 118, 97] => lookup_439(),
            [102, 111, 111, 100] => lookup_440(),
            [216, 167, 217, 132, 216, 172, 216, 178, 216, 167, 216, 166, 216, 177] => lookup_441(),
            [115, 121, 100, 110, 101, 121] => lookup_442(),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_443(),
            [103, 101, 110, 116] => lookup_444(),
            [224, 176, 173, 224, 176, 190, 224, 176, 176, 224, 176, 164, 224, 177, 141] => {
                lookup_445()
            }
            [107, 101, 114, 114, 121, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => {
                lookup_446()
            }
            [103, 117, 97, 114, 100, 105, 97, 110] => lookup_447(),
            [103, 114] => lookup_448(labels),
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 53, 101, 118, 97, 48, 48, 98] => {
                lookup_449()
            }
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103] => {
                lookup_450()
            }
            [103, 108, 101] => lookup_451(),
            [104, 111, 109, 101, 100, 101, 112, 111, 116] => lookup_452(),
            [103, 114, 97, 116, 105, 115] => lookup_453(),
            [120, 110, 45, 45, 113, 55, 99, 101, 54, 97] => lookup_454(),
            [97, 114] => lookup_455(labels),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => lookup_456(),
            [97, 100, 97, 99] => lookup_457(),
            [99, 111, 110, 100, 111, 115] => lookup_458(),
            [102, 116, 114] => lookup_459(),
            [102, 108, 111, 114, 105, 115, 116] => lookup_460(),
            [115, 105] => lookup_461(labels),
            [100, 114, 105, 118, 101] => lookup_462(),
            [235, 139, 183, 236, 187, 180] => lookup_463(),
            [99, 111, 117, 112, 111, 110, 115] => lookup_464(),
            [106, 101, 101, 112] => lookup_465(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 107, 99, 55, 100, 118, 102] => lookup_466(),
            [108, 112, 108] => lookup_467(),
            [99, 105, 116, 121, 101, 97, 116, 115] => lookup_468(),
            [108, 101, 103, 111] => lookup_469(),
            [97, 112, 112] => lookup_470(labels),
            [110, 101, 116, 102, 108, 105, 120] => lookup_471(),
            [110, 111, 119, 114, 117, 122] => lookup_472(),
            [107, 103] => lookup_473(labels),
            [108, 97, 110, 120, 101, 115, 115] => lookup_474(),
            [116, 111, 117, 114, 115] => lookup_475(),
            [224, 174, 135, 224, 174, 168, 224, 175, 141, 224, 174, 164, 224, 174, 191, 224, 174, 175, 224, 174, 190] => {
                lookup_476()
            }
            [108, 97, 99, 97, 105, 120, 97] => lookup_477(),
            [97, 109] => lookup_478(labels),
            [109, 105, 116, 115, 117, 98, 105, 115, 104, 105] => lookup_479(),
            [110, 122] => lookup_480(labels),
            [236, 130, 188, 236, 132, 177] => lookup_481(),
            [120, 110, 45, 45, 109, 103, 98, 97, 55, 99, 48, 98, 98, 110, 48, 97] => lookup_482(),
            [109, 97, 114, 107, 101, 116] => lookup_483(),
            [97, 114, 97, 109, 99, 111] => lookup_484(),
            [97, 103] => lookup_485(labels),
            [111, 116, 116] => lookup_486(),
            [116, 106, 120] => lookup_487(),
            [110, 111, 119, 116, 118] => lookup_488(),
            [208, 188, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176] => lookup_489(),
            [230, 148, 191, 229, 138, 161] => lookup_490(),
            [228, 189, 155, 229, 177, 177] => lookup_491(),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_492(),
            [101, 99, 111] => lookup_493(),
            [110, 97, 103, 111, 121, 97] => lookup_494(),
            [97, 119] => lookup_495(labels),
            [100, 117, 98, 97, 105] => lookup_496(),
            [116, 111, 111, 108, 115] => lookup_497(),
            [225, 131, 146, 225, 131, 148] => lookup_498(),
            [121, 101] => lookup_499(labels),
            [106, 112, 114, 115] => lookup_500(),
            [102, 97, 105, 114, 119, 105, 110, 100, 115] => lookup_501(),
            [105, 110, 102, 105, 110, 105, 116, 105] => lookup_502(),
            [114, 111] => lookup_503(labels),
            [115, 101, 101, 107] => lookup_504(),
            [112, 114, 111, 112, 101, 114, 116, 121] => lookup_505(),
            [115, 101, 120] => lookup_506(),
            [115, 97, 110, 100, 118, 105, 107, 99, 111, 114, 111, 109, 97, 110, 116] => {
                lookup_507()
            }
            [121, 97, 109, 97, 120, 117, 110] => lookup_508(),
            [107, 114] => lookup_509(labels),
            [115, 98, 115] => lookup_510(),
            [100, 97, 116, 115, 117, 110] => lookup_511(),
            [109, 97, 107, 101, 117, 112] => lookup_512(),
            [119, 111, 108, 116, 101, 114, 115, 107, 108, 117, 119, 101, 114] => lookup_513(),
            [112, 97, 114, 105, 115] => lookup_514(),
            [112, 121] => lookup_515(labels),
            [120, 110, 45, 45, 109, 103, 98, 116, 102, 56, 102, 108] => lookup_516(),
            [115, 101] => lookup_517(labels),
            [104, 111, 108, 100, 105, 110, 103, 115] => lookup_518(),
            [115, 116, 99, 103, 114, 111, 117, 112] => lookup_519(),
            [110, 105, 107, 111, 110] => lookup_520(),
            [110, 105, 110, 106, 97] => lookup_521(),
            [105, 110, 116] => lookup_522(labels),
            [117, 110, 105, 99, 111, 109] => lookup_523(),
            [99, 111, 109, 109, 98, 97, 110, 107] => lookup_524(),
            [99, 111, 111, 107, 105, 110, 103] => lookup_525(),
            [120, 110, 45, 45, 102, 105, 113, 115, 56, 115] => lookup_526(),
            [98, 101, 114, 108, 105, 110] => lookup_527(),
            [118, 111, 108, 107, 115, 119, 97, 103, 101, 110] => lookup_528(),
            [115, 101, 97, 114, 99, 104] => lookup_529(),
            [121, 111, 117] => lookup_530(),
            [103, 104] => lookup_531(labels),
            [107, 111, 101, 108, 110] => lookup_532(),
            [115, 111, 110, 121] => lookup_533(),
            [102, 108, 105, 103, 104, 116, 115] => lookup_534(),
            [115, 116, 97, 114] => lookup_535(),
            [237, 149, 156, 234, 181, 173] => lookup_536(),
            [116, 111] => lookup_537(labels),
            [101, 117, 115] => lookup_538(labels),
            [227, 130, 176, 227, 131, 188, 227, 130, 176, 227, 131, 171] => lookup_539(),
            [115, 97, 109, 115, 117, 110, 103] => lookup_540(),
            [102, 105, 114, 109, 100, 97, 108, 101] => lookup_541(),
            [120, 110, 45, 45, 108, 103, 98, 98, 97, 116, 49, 97, 100, 56, 106] => lookup_542(),
            [98, 101, 110, 116, 108, 101, 121] => lookup_543(),
            [114, 115] => lookup_544(labels),
            [112, 114, 117] => lookup_545(),
            [115, 97, 108, 111, 110] => lookup_546(),
            [100, 97, 98, 117, 114] => lookup_547(),
            [120, 110, 45, 45, 120, 107, 99, 50, 100, 108, 51, 97, 53, 101, 101, 48, 104] => {
                lookup_548()
            }
            [120, 110, 45, 45, 114, 104, 113, 118, 57, 54, 103] => lookup_549(),
            [115, 111] => lookup_550(labels),
            [114, 101, 118, 105, 101, 119] => lookup_551(labels),
            [99, 104, 97, 115, 101] => lookup_552(),
            [102, 97, 114, 109] => lookup_553(labels),
            [107, 112] => lookup_554(labels),
            [100, 116, 118] => lookup_555(),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_556(),
            [99, 111, 110, 116, 114, 97, 99, 116, 111, 114, 115] => lookup_557(),
            [109, 111, 98, 105, 108, 101] => lookup_558(),
            [230, 155, 184, 231, 177, 141] => lookup_559(),
            [230, 183, 161, 233, 169, 172, 233, 148, 161] => lookup_560(),
            [99, 114, 115] => lookup_561(),
            [103, 105, 118, 105, 110, 103] => lookup_562(),
            [120, 110, 45, 45, 109, 103, 98, 97, 121, 104, 55, 103, 112, 97] => lookup_563(),
            [230, 190, 179, 233, 150, 128] => lookup_564(),
            [112, 110, 99] => lookup_565(),
            [116, 97, 120] => lookup_566(),
            [111, 118, 104] => lookup_567(labels),
            [104, 116] => lookup_568(labels),
            [230, 190, 179, 233, 151, 168] => lookup_569(),
            [217, 133, 217, 136, 217, 130, 216, 185] => lookup_570(),
            [109, 111, 105] => lookup_571(),
            [104, 97, 117, 115] => lookup_572(),
            [99, 105, 116, 97, 100, 101, 108] => lookup_573(),
            [114, 101, 100, 117, 109, 98, 114, 101, 108, 108, 97] => lookup_574(),
            [111, 107, 105, 110, 97, 119, 97] => lookup_575(),
            [120, 110, 45, 45, 119, 103, 98, 104, 49, 99] => lookup_576(),
            [103, 97, 114, 100, 101, 110] => lookup_577(),
            [115, 116, 117, 100, 105, 111] => lookup_578(),
            [100, 101, 110, 116, 105, 115, 116] => lookup_579(),
            [99, 97, 112, 105, 116, 97, 108] => lookup_580(),
            [118, 117] => lookup_581(labels),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110] => lookup_582(),
            [109, 101, 100, 105, 97] => lookup_583(),
            [218, 128, 216, 167, 216, 177, 216, 170] => lookup_584(),
            [120, 110, 45, 45, 102, 122, 99, 50, 99, 57, 101, 50, 99] => lookup_585(),
            [120, 110, 45, 45, 113, 120, 97, 109] => lookup_586(),
            [98, 117, 100, 97, 112, 101, 115, 116] => lookup_587(),
            [108, 117] => lookup_588(labels),
            [100, 101, 97, 108, 115] => lookup_589(),
            [99, 108, 105, 110, 105, 99] => lookup_590(),
            [116, 122] => lookup_591(labels),
            [105, 116, 97, 117] => lookup_592(),
            [114, 101, 110, 116, 97, 108, 115] => lookup_593(),
            [119, 105, 101, 110] => lookup_594(),
            [105, 115] => lookup_595(labels),
            [120, 110, 45, 45, 120, 107, 99, 50, 97, 108, 51, 104, 121, 101, 50, 97] => {
                lookup_596()
            }
            [109, 105, 99, 114, 111, 115, 111, 102, 116] => lookup_597(),
            [104, 111, 116] => lookup_598(),
            [118, 111, 116, 101] => lookup_599(),
            [114, 111, 103, 101, 114, 115] => lookup_600(),
            [108, 100, 115] => lookup_601(),
            [97, 99, 116, 111, 114] => lookup_602(),
            [100, 101, 110, 116, 97, 108] => lookup_603(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 118, 97, 102, 114] => {
                lookup_604()
            }
            [99, 119] => lookup_605(labels),
            [99, 104, 114, 105, 115, 116, 109, 97, 115] => lookup_606(),
            [227, 129, 191, 227, 130, 147, 227, 129, 170] => lookup_607(),
            [117, 98, 97, 110, 107] => lookup_608(),
            [101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103] => lookup_609(),
            [110, 97, 109, 101] => lookup_610(labels),
            [97, 119, 115] => lookup_611(),
            [105, 99, 117] => lookup_612(),
            [102, 97, 105, 116, 104] => lookup_613(labels),
            [108, 97, 110, 99, 105, 97] => lookup_614(),
            [99, 111, 117, 110, 116, 114, 121] => lookup_615(),
            [103, 117, 99, 99, 105] => lookup_616(),
            [107, 105, 116, 99, 104, 101, 110] => lookup_617(),
            [98, 99, 103] => lookup_618(),
            [103, 97, 108, 108, 101, 114, 121] => lookup_619(),
            [115, 110, 99, 102] => lookup_620(),
            [122, 97, 112, 112, 111, 115] => lookup_621(),
            [120, 110, 45, 45, 109, 103, 98, 99, 97, 55, 100, 122, 100, 111] => lookup_622(),
            [104, 114] => lookup_623(labels),
            [230, 150, 176, 233, 151, 187] => lookup_624(),
            [112, 108, 97, 121] => lookup_625(),
            [97, 100, 115] => lookup_626(),
            [114, 101, 97, 108, 116, 111, 114] => lookup_627(),
            [115, 101, 115] => lookup_628(),
            [112, 104, 111, 116, 111] => lookup_629(),
            [112, 104, 111, 116, 111, 115] => lookup_630(),
            [120, 110, 45, 45, 100, 49, 97, 108, 102] => lookup_631(),
            [102, 114, 101, 115, 101, 110, 105, 117, 115] => lookup_632(),
            [103, 97, 121] => lookup_633(),
            [100, 97, 110, 99, 101] => lookup_634(),
            [98, 117, 122, 122] => lookup_635(),
            [109, 115] => lookup_636(labels),
            [112, 114, 105, 109, 101] => lookup_637(),
            [100, 101, 108, 105, 118, 101, 114, 121] => lookup_638(),
            [97, 101, 116, 110, 97] => lookup_639(),
            [120, 110, 45, 45, 51, 100, 115, 52, 52, 51, 103] => lookup_640(),
            [112, 119] => lookup_641(labels),
            [116, 105, 101, 110, 100, 97] => lookup_642(),
            [118, 105, 100, 101, 111] => lookup_643(),
            [106, 111, 121] => lookup_644(),
            [120, 110, 45, 45, 98, 52, 119, 54, 48, 53, 102, 101, 114, 100] => lookup_645(),
            [120, 110, 45, 45, 119, 52, 114, 115, 52, 48, 108] => lookup_646(),
            [109, 111, 118, 105, 101] => lookup_647(),
            [119, 105, 107, 105] => lookup_648(),
            [101, 117, 114, 111, 118, 105, 115, 105, 111, 110] => lookup_649(),
            [99, 98, 110] => lookup_650(),
            [228, 188, 129, 228, 184, 154] => lookup_651(),
            [102, 101, 100, 101, 120] => lookup_652(),
            [100, 111, 103] => lookup_653(),
            [108, 105, 118, 105, 110, 103] => lookup_654(),
            [101, 120, 112, 111, 115, 101, 100] => lookup_655(),
            [97, 108] => lookup_656(labels),
            [233, 163, 158, 229, 136, 169, 230, 181, 166] => lookup_657(),
            [101, 116] => lookup_658(labels),
            [103, 110] => lookup_659(labels),
            [114, 101, 100, 115, 116, 111, 110, 101] => lookup_660(),
            [102, 108, 111, 119, 101, 114, 115] => lookup_661(),
            [116, 97, 98] => lookup_662(),
            [116, 104, 100] => lookup_663(),
            [98, 111, 102, 97] => lookup_664(),
            [98, 108, 111, 103] => lookup_665(),
            [98, 111, 111, 107] => lookup_666(),
            [208, 186, 208, 176, 209, 130, 208, 190, 208, 187, 208, 184, 208, 186] => lookup_667(),
            [120, 110, 45, 45, 105, 49, 98, 54, 98, 49, 97, 54, 97, 50, 101] => lookup_668(),
            [102, 109] => lookup_669(labels),
            [118, 101, 114, 115, 105, 99, 104, 101, 114, 117, 110, 103] => lookup_670(),
            [120, 110, 45, 45, 110, 103, 98, 114, 120] => lookup_671(),
            [120, 110, 45, 45, 107, 112, 114, 121, 53, 55, 100] => lookup_672(),
            [99, 114, 101, 100, 105, 116] => lookup_673(),
            [116, 105, 99, 107, 101, 116, 115] => lookup_674(),
            [114, 111, 99, 104, 101, 114] => lookup_675(),
            [117, 112, 115] => lookup_676(),
            [115, 119, 105, 115, 115] => lookup_677(),
            [116, 100] => lookup_678(labels),
            [97, 122] => lookup_679(labels),
            [97, 105, 114, 116, 101, 108] => lookup_680(),
            [114, 97, 100, 105, 111] => lookup_681(),
            [100, 101, 97, 108] => lookup_682(),
            [229, 143, 176, 231, 129, 163] => lookup_683(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102] => lookup_684(),
            [110, 102] => lookup_685(labels),
            [120, 110, 45, 45, 52, 53, 98, 114, 53, 99, 121, 108] => lookup_686(),
            [115, 116, 114, 101, 97, 109] => lookup_687(),
            [107, 101, 114, 114, 121, 104, 111, 116, 101, 108, 115] => lookup_688(),
            [108, 97, 109, 98, 111, 114, 103, 104, 105, 110, 105] => lookup_689(),
            [99, 97, 115, 104] => lookup_690(),
            [97, 116, 104, 108, 101, 116, 97] => lookup_691(),
            [105, 109, 100, 98] => lookup_692(),
            [102, 105] => lookup_693(labels),
            [227, 130, 185, 227, 131, 136, 227, 130, 162] => lookup_694(),
            [114, 109, 105, 116] => lookup_695(),
            [106, 111, 98, 117, 114, 103] => lookup_696(),
            [115, 97, 112] => lookup_697(),
            [120, 110, 45, 45, 113, 57, 106, 121, 98, 52, 99] => lookup_698(),
            [97, 117, 116, 111, 115] => lookup_699(),
            [99, 101, 111] => lookup_700(),
            [103, 101, 110, 116, 105, 110, 103] => lookup_701(),
            [116, 108] => lookup_702(labels),
            [105, 110, 100, 117, 115, 116, 114, 105, 101, 115] => lookup_703(),
            [103, 111, 111, 103] => lookup_704(labels),
            [106, 117, 101, 103, 111, 115] => lookup_705(),
            [120, 110, 45, 45, 49, 49, 98, 52, 99, 51, 100] => lookup_706(),
            [109, 101, 109, 101] => lookup_707(),
            [119, 105, 110] => lookup_708(labels),
            [115, 104, 101, 108, 108] => lookup_709(),
            [118, 111, 116, 105, 110, 103] => lookup_710(),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 115] => lookup_711(),
            [112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101] => lookup_712(),
            [120, 110, 45, 45, 112, 49, 97, 105] => lookup_713(),
            [119, 101, 98, 115, 105, 116, 101] => lookup_714(),
            [102, 105, 110, 97, 108] => lookup_715(),
            [98, 97, 114, 99, 108, 97, 121, 115] => lookup_716(),
            [111, 110, 101] => lookup_717(labels),
            [116, 101, 109, 97, 115, 101, 107] => lookup_718(),
            [224, 174, 135, 224, 174, 178, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 175, 136] => {
                lookup_719()
            }
            [115, 110] => lookup_720(labels),
            [98, 102] => lookup_721(labels),
            [98, 104] => lookup_722(labels),
            [120, 110, 45, 45, 102, 122, 121, 115, 56, 100, 54, 57, 117, 118, 103, 109] => {
                lookup_723()
            }
            [102, 97, 115, 104, 105, 111, 110] => lookup_724(labels),
            [120, 110, 45, 45, 111, 103, 98, 112, 102, 56, 102, 108] => lookup_725(),
            [117, 98, 115] => lookup_726(),
            [98, 108, 97, 99, 107, 102, 114, 105, 100, 97, 121] => lookup_727(),
            [217, 131, 217, 136, 217, 133] => lookup_728(),
            [100, 111, 109, 97, 105, 110, 115] => lookup_729(),
            [120, 110, 45, 45, 50, 115, 99, 114, 106, 57, 99] => lookup_730(),
            [99, 97, 114, 101] => lookup_731(),
            [99, 111, 114, 115, 105, 99, 97] => lookup_732(),
            [210, 155, 208, 176, 208, 183] => lookup_733(),
            [99, 104, 97, 110, 110, 101, 108] => lookup_734(),
            [107, 121] => lookup_735(labels),
            [119, 101, 98, 99, 97, 109] => lookup_736(),
            [120, 110, 45, 45, 51, 104, 99, 114, 106, 57, 99] => lookup_737(),
            [109, 122] => lookup_738(labels),
            [116, 109] => lookup_739(labels),
            [99, 105, 115, 99, 111] => lookup_740(),
            [102, 117, 110] => lookup_741(),
            [232, 129, 148, 233, 128, 154] => lookup_742(),
            [103, 109, 111] => lookup_743(),
            [103, 116] => lookup_744(labels),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164] => lookup_745(),
            [120, 110, 45, 45, 56, 48, 97, 111, 50, 49, 97] => lookup_746(),
            [107, 105, 110, 100, 101, 114] => lookup_747(),
            [116, 111, 119, 110] => lookup_748(),
            [110, 111, 119] => lookup_749(),
            [98, 111, 111] => lookup_750(),
            [99, 100] => lookup_751(labels),
            [108, 116, 100] => lookup_752(),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_753(),
            [109, 111, 110, 97, 115, 104] => lookup_754(),
            [105, 110, 103] => lookup_755(),
            [108, 121] => lookup_756(labels),
            [99, 104, 97, 116] => lookup_757(),
            [112, 114, 111] => lookup_758(labels),
            [115, 117, 99, 107, 115] => lookup_759(),
            [98, 101, 115, 116] => lookup_760(),
            [208, 177, 208, 181, 208, 187] => lookup_761(),
            [108, 101, 120, 117, 115] => lookup_762(),
            [97, 98, 98] => lookup_763(),
            [115, 99, 104, 97, 101, 102, 102, 108, 101, 114] => lookup_764(),
            [99, 98, 114, 101] => lookup_765(),
            [120, 110, 45, 45, 57, 48, 97, 105, 115] => lookup_766(),
            [98, 110] => lookup_767(labels),
            [99, 114] => lookup_768(labels),
            [105, 110, 102, 111] => lookup_769(labels),
            [108, 105, 103, 104, 116, 105, 110, 103] => lookup_770(),
            [99, 114, 101, 100, 105, 116, 117, 110, 105, 111, 110] => lookup_771(),
            [107, 105, 97] => lookup_772(),
            [117, 110, 111] => lookup_773(),
            [120, 110, 45, 45, 109, 105, 120, 56, 57, 49, 102] => lookup_774(),
            [216, 168, 216, 167, 216, 178, 216, 167, 216, 177] => lookup_775(),
            [120, 110, 45, 45, 107, 99, 114, 120, 55, 55, 100, 49, 120, 52, 97] => lookup_776(),
            [120, 101, 114, 111, 120] => lookup_777(),
            [115, 111, 108, 97, 114] => lookup_778(),
            [117, 111, 108] => lookup_779(),
            [106, 109] => lookup_780(info, labels),
            [109, 97, 110] => lookup_781(),
            [119, 97, 110, 103, 103, 111, 117] => lookup_782(),
            [115, 107, 121] => lookup_783(),
            [229, 185, 191, 228, 184, 156] => lookup_784(),
            [105, 102, 109] => lookup_785(),
            [122, 105, 112] => lookup_786(),
            [115, 97, 102, 101, 116, 121] => lookup_787(),
            [97, 103, 101, 110, 99, 121] => lookup_788(),
            [120, 110, 45, 45, 115, 57, 98, 114, 106, 57, 99] => lookup_789(),
            [97, 117] => lookup_790(labels),
            [217, 190, 216, 167, 217, 131, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_791(),
            [111, 108, 100, 110, 97, 118, 121] => lookup_792(),
            [99, 97, 108, 118, 105, 110, 107, 108, 101, 105, 110] => lookup_793(),
            [108, 111, 110, 100, 111, 110] => lookup_794(labels),
            [115, 114, 108] => lookup_795(),
            [110, 105, 99, 111] => lookup_796(),
            [100, 111, 99, 115] => lookup_797(),
            [120, 121, 122] => lookup_798(labels),
            [108, 97, 109, 101, 114] => lookup_799(),
            [107, 105, 109] => lookup_800(),
            [224, 184, 132, 224, 184, 173, 224, 184, 161] => lookup_801(),
            [101, 103] => lookup_802(labels),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_803(),
            [97, 105] => lookup_804(labels),
            [120, 110, 45, 45, 116, 54, 48, 98, 53, 54, 97] => lookup_805(),
            [110, 105, 107, 101] => lookup_806(),
            [233, 166, 153, 230, 184, 175] => lookup_807(labels),
            [217, 133, 217, 132, 217, 138, 216, 179, 217, 138, 216, 167] => lookup_808(),
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 114] => {
                lookup_809()
            }
            [103, 121] => lookup_810(labels),
            [112, 114, 111, 100] => lookup_811(),
            [100, 107] => lookup_812(labels),
            [115, 114] => lookup_813(),
            [98, 118] => lookup_814(),
            [112, 105, 100] => lookup_815(),
            [112, 97, 103, 101] => lookup_816(labels),
            [99, 117, 105, 115, 105, 110, 101, 108, 108, 97] => lookup_817(),
            [120, 110, 45, 45, 102, 104, 98, 101, 105] => lookup_818(),
            [103, 111, 108, 100, 112, 111, 105, 110, 116] => lookup_819(),
            [102, 117, 116, 98, 111, 108] => lookup_820(),
            [98, 101, 97, 117, 116, 121] => lookup_821(),
            [99, 104, 97, 110, 101, 108] => lookup_822(),
            [109, 97, 114, 114, 105, 111, 116, 116] => lookup_823(),
            [103, 111, 116] => lookup_824(),
            [229, 164, 169, 228, 184, 187, 230, 149, 153] => lookup_825(),
            [109, 114] => lookup_826(labels),
            [109, 97, 114, 107, 101, 116, 115] => lookup_827(),
            [112, 103] => lookup_828(info, labels),
            [118, 105, 115, 105, 111, 110] => lookup_829(),
            [100, 109] => lookup_830(labels),
            [116, 97, 116, 97, 114] => lookup_831(),
            [106, 99, 98] => lookup_832(),
            [116, 97, 108, 107] => lookup_833(),
            [115, 117, 114, 103, 101, 114, 121] => lookup_834(),
            [114, 101, 112, 97, 105, 114] => lookup_835(),
            [99, 105, 112, 114, 105, 97, 110, 105] => lookup_836(),
            [109, 108] => lookup_837(labels),
            [110, 97] => lookup_838(labels),
            [112, 97, 114, 115] => lookup_839(),
            [216, 170, 217, 136, 217, 134, 216, 179] => lookup_840(),
            [116, 111, 115, 104, 105, 98, 97] => lookup_841(),
            [109, 97, 110, 103, 111] => lookup_842(),
            [109, 97, 114, 115, 104, 97, 108, 108, 115] => lookup_843(),
            [116, 100, 107] => lookup_844(),
            [102, 114] => lookup_845(labels),
            [100, 101] => lookup_846(labels),
            [105, 114, 105, 115, 104] => lookup_847(),
            [102, 108, 121] => lookup_848(),
            [120, 110, 45, 45, 53, 115, 117, 51, 52, 106, 57, 51, 54, 98, 103, 115, 103] => {
                lookup_849()
            }
            [100, 99, 108, 107] => lookup_850(),
            [97, 117, 99, 116, 105, 111, 110] => lookup_851(),
            [116, 97, 114, 103, 101, 116] => lookup_852(),
            [105, 109, 109, 111] => lookup_853(),
            [98, 105, 111] => lookup_854(),
            [99, 114, 111, 119, 110] => lookup_855(),
            [97, 110, 100, 114, 111, 105, 100] => lookup_856(),
            [120, 110, 45, 45, 102, 112, 99, 114, 106, 57, 99, 51, 100] => lookup_857(),
            [99, 121, 109, 114, 117] => lookup_858(),
            [104, 111, 99, 107, 101, 121] => lookup_859(),
            [97, 114, 99, 104, 105] => lookup_860(),
            [99, 97, 116] => lookup_861(),
            [115, 112, 97] => lookup_862(),
            [103, 109, 98, 104] => lookup_863(),
            [115, 101, 108, 101, 99, 116] => lookup_864(),
            [216, 180, 216, 168, 217, 131, 216, 169] => lookup_865(),
            [99, 111, 109, 115, 101, 99] => lookup_866(),
            [114, 101, 99, 105, 112, 101, 115] => lookup_867(),
            [115, 111, 108, 117, 116, 105, 111, 110, 115] => lookup_868(),
            [224, 178, 173, 224, 178, 190, 224, 178, 176, 224, 178, 164] => lookup_869(),
            [209, 129, 208, 176, 208, 185, 209, 130] => lookup_870(),
            [110, 116, 116] => lookup_871(),
            [102, 106] => lookup_872(labels),
            [111, 98, 105] => lookup_873(),
            [99, 99] => lookup_874(labels),
            [112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => lookup_875(),
            [97, 110, 122] => lookup_876(),
            [229, 133, 172, 229, 143, 184] => lookup_877(),
            [109, 100] => lookup_878(labels),
            [224, 166, 173, 224, 166, 190, 224, 167, 176, 224, 166, 164] => lookup_879(),
            [97, 114, 109, 121] => lookup_880(),
            [116, 110] => lookup_881(labels),
            [112, 110] => lookup_882(labels),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101, 115] => lookup_883(),
            [102, 105, 115, 104, 105, 110, 103] => lookup_884(),
            [112, 115] => lookup_885(labels),
            [98, 119] => lookup_886(labels),
            [103, 109] => lookup_887(),
            [120, 110, 45, 45, 121, 102, 114, 111, 52, 105, 54, 55, 111] => lookup_888(),
            [107, 101, 114, 114, 121, 108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_889(),
            [229, 164, 167, 228, 188, 151, 230, 177, 189, 232, 189, 166] => lookup_890(),
            [233, 164, 144, 229, 142, 133] => lookup_891(),
            [235, 139, 183, 235, 132, 183] => lookup_892(),
            [103, 112] => lookup_893(labels),
            [99, 97, 115, 97] => lookup_894(labels),
            [119, 111, 114, 108, 100] => lookup_895(),
            [112, 104, 121, 115, 105, 111] => lookup_896(),
            [111, 114, 103, 97, 110, 105, 99] => lookup_897(),
            [112, 105, 110] => lookup_898(),
            [120, 110, 45, 45, 109, 103, 98, 120, 52, 99, 100, 48, 97, 98] => lookup_899(),
            [103, 111, 108, 100] => lookup_900(),
            [97, 108, 102, 97, 114, 111, 109, 101, 111] => lookup_901(),
            [98, 111] => lookup_902(labels),
            [109, 111, 101] => lookup_903(),
            [114, 119, 101] => lookup_904(),
            [116, 114, 97, 105, 110, 105, 110, 103] => lookup_905(),
            [112, 116] => lookup_906(labels),
            [98, 97, 110, 97, 110, 97, 114, 101, 112, 117, 98, 108, 105, 99] => lookup_907(),
            [106, 97, 103, 117, 97, 114] => lookup_908(),
            [116, 101, 99, 104] => lookup_909(),
            [116, 114, 97, 118, 101, 108] => lookup_910(),
            [112, 109] => lookup_911(labels),
            [108, 98] => lookup_912(labels),
            [99, 98, 97] => lookup_913(),
            [97, 102, 97, 109, 105, 108, 121, 99, 111, 109, 112, 97, 110, 121] => lookup_914(),
            [97, 107, 100, 110] => lookup_915(),
            [108, 117, 110, 100, 98, 101, 99, 107] => lookup_916(),
            [114, 111, 100, 101, 111] => lookup_917(),
            [120, 110, 45, 45, 106, 108, 113, 54, 49, 117, 57, 119, 55, 98] => lookup_918(),
            [103, 97, 109, 101, 115] => lookup_919(),
            [115, 111, 110, 103] => lookup_920(),
            [97, 113, 117, 97, 114, 101, 108, 108, 101] => lookup_921(),
            [230, 148, 191, 229, 186, 156] => lookup_922(),
            [105, 109, 97, 109, 97, 116] => lookup_923(),
            [104, 101, 97, 108, 116, 104] => lookup_924(),
            [227, 131, 157, 227, 130, 164, 227, 131, 179, 227, 131, 136] => lookup_925(),
            [107, 122] => lookup_926(labels),
            [115, 97, 109, 115, 99, 108, 117, 98] => lookup_927(),
            [102, 108, 105, 114] => lookup_928(),
            [100, 101, 118] => lookup_929(labels),
            [116, 117, 110, 101, 115] => lookup_930(),
            [111, 108, 97, 121, 97, 110] => lookup_931(),
            [120, 110, 45, 45, 115, 101, 115, 53, 53, 52, 103] => lookup_932(),
            [120, 110, 45, 45, 110, 111, 100, 101] => lookup_933(),
            [99, 108, 101, 97, 110, 105, 110, 103] => lookup_934(),
            [112, 108, 97, 99, 101] => lookup_935(labels),
            [103, 113] => lookup_936(),
            [110, 114, 119] => lookup_937(),
            [227, 131, 149, 227, 130, 161, 227, 131, 131, 227, 130, 183, 227, 131, 167, 227, 131, 179] => {
                lookup_938()
            }
            [113, 112, 111, 110] => lookup_939(),
            [119, 101, 105, 114] => lookup_940(),
            [115, 97, 114, 108] => lookup_941(),
            [99, 97, 109, 101, 114, 97] => lookup_942(),
            [108, 105, 110, 100, 101] => lookup_943(),
            [98, 109] => lookup_944(labels),
            [232, 135, 186, 231, 129, 163] => lookup_945(),
            [103, 108] => lookup_946(labels),
            [102, 111, 114, 117, 109] => lookup_947(),
            [120, 110, 45, 45, 107, 112, 117, 116, 51, 105] => lookup_948(),
            [109, 105, 110, 105] => lookup_949(),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_950(),
            [98, 97, 117, 104, 97, 117, 115] => lookup_951(),
            [116, 105, 114, 101, 115] => lookup_952(),
            [118, 97, 99, 97, 116, 105, 111, 110, 115] => lookup_953(),
            [112, 97, 121] => lookup_954(),
            [99, 105, 116, 121] => lookup_955(),
            [120, 110, 45, 45, 52, 103, 98, 114, 105, 109] => lookup_956(),
            [115, 99, 104, 111, 111, 108] => lookup_957(),
            [114, 101, 108, 105, 97, 110, 99, 101] => lookup_958(),
            [97, 109, 97, 122, 111, 110] => lookup_959(),
            [104, 110] => lookup_960(labels),
            [119, 101, 98, 101, 114] => lookup_961(),
            [110, 114, 97] => lookup_962(),
            [100, 101, 109, 111, 99, 114, 97, 116] => lookup_963(),
            [119, 97, 116, 99, 104] => lookup_964(),
            [115, 107, 121, 112, 101] => lookup_965(),
            [233, 155, 134, 229, 155, 162] => lookup_966(),
            [116, 107, 109, 97, 120, 120] => lookup_967(),
            [216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134] => lookup_968(),
            [98, 105, 98, 108, 101] => lookup_969(),
            [103, 98] => lookup_970(),
            [107, 102, 104] => lookup_971(),
            [115, 105, 110, 97] => lookup_972(),
            [109, 105, 97, 109, 105] => lookup_973(),
            [120, 110, 45, 45, 109, 103, 98, 105, 52, 101, 99, 101, 120, 112] => lookup_974(),
            [105, 116] => lookup_975(labels),
            [98, 105, 100] => lookup_976(),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_977(),
            [229, 152, 137, 233, 135, 140, 229, 164, 167, 233, 133, 146, 229, 186, 151] => {
                lookup_978()
            }
            [99, 97, 114, 100, 115] => lookup_979(),
            [115, 116, 111, 114, 101] => lookup_980(labels),
            [115, 101, 99, 117, 114, 105, 116, 121] => lookup_981(),
            [111, 102, 102] => lookup_982(),
            [97, 111] => lookup_983(labels),
            [115, 116, 97, 116, 101, 98, 97, 110, 107] => lookup_984(),
            [99, 120] => lookup_985(labels),
            [102, 101, 114, 114, 101, 114, 111] => lookup_986(),
            [112, 108, 117, 109, 98, 105, 110, 103] => lookup_987(),
            [99, 97, 114] => lookup_988(),
            [98, 121] => lookup_989(labels),
            [104, 103, 116, 118] => lookup_990(),
            [107, 114, 101, 100] => lookup_991(),
            [115, 119, 105, 102, 116, 99, 111, 118, 101, 114] => lookup_992(),
            [120, 110, 45, 45, 57, 100, 98, 113, 50, 97] => lookup_993(),
            [115, 101, 97, 116] => lookup_994(),
            [104, 107, 116] => lookup_995(),
            [103, 114, 105, 112, 101] => lookup_996(),
            [116, 111, 100, 97, 121] => lookup_997(),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_998(),
            [217, 190, 216, 167, 218, 169, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_999(),
            [99, 103] => lookup_1000(),
            [110, 121, 99] => lookup_1001(),
            [229, 168, 177, 228, 185, 144] => lookup_1002(),
            [120, 110, 45, 45, 104, 50, 98, 114, 101, 103, 51, 101, 118, 101] => lookup_1003(),
            [109, 97, 105, 102] => lookup_1004(),
            [120, 110, 45, 45, 103, 50, 120, 120, 52, 56, 99] => lookup_1005(),
            [112, 97, 114, 116, 121] => lookup_1006(labels),
            [99, 108, 105, 110, 105, 113, 117, 101] => lookup_1007(),
            [107, 104] => lookup_1008(info, labels),
            [110, 117] => lookup_1009(labels),
            [115, 101, 118, 101, 110] => lookup_1010(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115] => lookup_1011(),
            [107, 112, 110] => lookup_1012(),
            [115, 116] => lookup_1013(labels),
            [120, 98, 111, 120] => lookup_1014(),
            [98, 105, 110, 103, 111] => lookup_1015(),
            [115, 99, 104, 117, 108, 101] => lookup_1016(),
            [208, 177, 208, 179] => lookup_1017(),
            [99, 97, 98] => lookup_1018(),
            [119, 105, 110, 101] => lookup_1019(),
            [108, 101, 97, 115, 101] => lookup_1020(),
            [120, 110, 45, 45, 102, 105, 113, 122, 57, 115] => lookup_1021(),
            [108, 108, 112] => lookup_1022(),
            [229, 149, 134, 229, 186, 151] => lookup_1023(),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_1024(),
            [119, 105, 108, 108, 105, 97, 109, 104, 105, 108, 108] => lookup_1025(),
            [100, 101, 108, 116, 97] => lookup_1026(),
            [116, 103] => lookup_1027(),
            [102, 114, 111, 103, 97, 110, 115] => lookup_1028(),
            [120, 110, 45, 45, 110, 121, 113, 121, 50, 54, 97] => lookup_1029(),
            [120, 110, 45, 45, 99, 99, 107, 119, 99, 120, 101, 116, 100] => lookup_1030(),
            [120, 110, 45, 45, 112, 49, 97, 99, 102] => lookup_1031(labels),
            [120, 110, 45, 45, 119, 103, 98, 108, 54, 97] => lookup_1032(),
            [122, 119] => lookup_1033(labels),
            [108, 116] => lookup_1034(labels),
            [99, 102] => lookup_1035(labels),
            [116, 117, 98, 101] => lookup_1036(),
            [232, 175, 186, 229, 159, 186, 228, 186, 154] => lookup_1037(),
            [97, 117, 116, 111] => lookup_1038(),
            [100, 105, 121] => lookup_1039(),
            [100, 118, 97, 103] => lookup_1040(),
            [102, 111, 114, 101, 120] => lookup_1041(),
            [109, 101] => lookup_1042(labels),
            [104, 98, 111] => lookup_1043(),
            [115, 100] => lookup_1044(labels),
            [108, 97, 116, 114, 111, 98, 101] => lookup_1045(),
            [224, 170, 173, 224, 170, 190, 224, 170, 176, 224, 170, 164] => lookup_1046(),
            [120, 110, 45, 45, 57, 48, 97, 101] => lookup_1047(),
            [120, 110, 45, 45, 120, 104, 113, 53, 50, 49, 98] => lookup_1048(),
            [98, 111, 111, 107, 105, 110, 103] => lookup_1049(),
            [216, 167, 217, 133, 216, 167, 216, 177, 216, 167, 216, 170] => lookup_1050(),
            [115, 111, 104, 117] => lookup_1051(),
            [115, 106] => lookup_1052(),
            [107, 100, 100, 105] => lookup_1053(),
            [105, 109] => lookup_1054(labels),
            [101, 115, 113] => lookup_1055(),
            [112, 99, 99, 119] => lookup_1056(),
            [108, 112, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_1057(),
            [99, 104, 105, 110, 116, 97, 105] => lookup_1058(),
            [110, 101, 119] => lookup_1059(),
            [102, 111, 111, 100, 110, 101, 116, 119, 111, 114, 107] => lookup_1060(),
            [98, 100] => lookup_1061(info, labels),
            [115, 116, 121, 108, 101] => lookup_1062(),
            [114, 117, 103, 98, 121] => lookup_1063(),
            [120, 110, 45, 45, 56, 48, 97, 100, 120, 104, 107, 115] => lookup_1064(),
            [99, 122] => lookup_1065(labels),
            [97, 100] => lookup_1066(labels),
            [97, 110, 97, 108, 121, 116, 105, 99, 115] => lookup_1067(),
            [112, 114, 117, 100, 101, 110, 116, 105, 97, 108] => lookup_1068(),
            [100, 105, 114, 101, 99, 116, 111, 114, 121] => lookup_1069(),
            [97, 108, 115, 116, 111, 109] => lookup_1070(),
            [99, 111, 109, 112, 97, 110, 121] => lookup_1071(),
            [105, 110, 99] => lookup_1072(),
            [98, 108, 117, 101] => lookup_1073(),
            [98, 97, 110, 107] => lookup_1074(),
            [99, 108, 111, 116, 104, 105, 110, 103] => lookup_1075(),
            [115, 112, 111, 114, 116] => lookup_1076(),
            [103, 114, 97, 112, 104, 105, 99, 115] => lookup_1077(),
            [108, 111, 97, 110] => lookup_1078(),
            [224, 180, 173, 224, 180, 190, 224, 180, 176, 224, 180, 164, 224, 180, 130] => {
                lookup_1079()
            }
            [115, 116, 97, 100, 97] => lookup_1080(),
            [115, 97, 110, 100, 118, 105, 107] => lookup_1081(),
            [114, 101, 120, 114, 111, 116, 104] => lookup_1082(),
            [118, 105, 112] => lookup_1083(),
            [216, 167, 216, 168, 217, 136, 216, 184, 216, 168, 217, 138] => lookup_1084(),
            [98, 114, 111, 97, 100, 119, 97, 121] => lookup_1085(),
            [103, 108, 111, 98, 111] => lookup_1086(),
            [102, 114, 108] => lookup_1087(),
            [122, 111, 110, 101] => lookup_1088(labels),
            [109, 109] => lookup_1089(info, labels),
            [232, 176, 183, 230, 173, 140] => lookup_1090(),
            [112, 108] => lookup_1091(labels),
            [98, 114] => lookup_1092(labels),
            [112, 114, 111, 109, 111] => lookup_1093(),
            [120, 110, 45, 45, 101, 49, 97, 52, 99] => lookup_1094(),
            [115, 111, 99, 99, 101, 114] => lookup_1095(),
            [115, 121] => lookup_1096(labels),
            [112, 114] => lookup_1097(labels),
            [114, 105, 99, 104, 97, 114, 100, 108, 105] => lookup_1098(),
            [102, 111, 120] => lookup_1099(),
            [108, 111, 116, 116, 101] => lookup_1100(),
            [104, 101, 114, 109, 101, 115] => lookup_1101(),
            [99, 97, 110, 111, 110] => lookup_1102(),
            [217, 130, 216, 183, 216, 177] => lookup_1103(),
            [109, 117] => lookup_1104(labels),
            [98, 97, 114, 103, 97, 105, 110, 115] => lookup_1105(),
            [109, 101, 114, 99, 107, 109, 115, 100] => lookup_1106(),
            [229, 133, 171, 229, 141, 166] => lookup_1107(),
            [100, 111, 99, 116, 111, 114] => lookup_1108(),
            [103, 117, 114, 117] => lookup_1109(),
            [224, 164, 184, 224, 164, 130, 224, 164, 151, 224, 164, 160, 224, 164, 168] => {
                lookup_1110()
            }
            [99, 110] => lookup_1111(labels),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_1112(),
            [120, 110, 45, 45, 108, 49, 97, 99, 99] => lookup_1113(),
            [229, 149, 134, 230, 160, 135] => lookup_1114(),
            [122, 101, 114, 111] => lookup_1115(),
            [116, 114, 97, 100, 105, 110, 103] => lookup_1116(),
            [110, 111] => lookup_1117(labels),
            [100, 105, 97, 109, 111, 110, 100, 115] => lookup_1118(),
            [120, 110, 45, 45, 103, 99, 107, 114, 51, 102, 48, 102] => lookup_1119(),
            [97, 109, 102, 97, 109] => lookup_1120(),
            [110, 99] => lookup_1121(labels),
            [98, 111, 101, 104, 114, 105, 110, 103, 101, 114] => lookup_1122(),
            [233, 155, 187, 232, 168, 138, 231, 155, 136, 231, 167, 145] => lookup_1123(),
            [98, 111, 115, 116, 111, 110] => lookup_1124(),
            [113, 97] => lookup_1125(labels),
            [97, 101] => lookup_1126(labels),
            [119, 101, 97, 116, 104, 101, 114] => lookup_1127(),
            [228, 186, 154, 233, 169, 172, 233, 128, 138] => lookup_1128(),
            [103, 111, 100, 97, 100, 100, 121] => lookup_1129(),
            [99, 108] => lookup_1130(labels),
            [97, 102, 114, 105, 99, 97] => lookup_1131(),
            [110, 102, 108] => lookup_1132(),
            [107, 121, 111, 116, 111] => lookup_1133(),
            [98, 108, 97, 99, 107] => lookup_1134(),
            [116, 116] => lookup_1135(labels),
            [104, 117] => lookup_1136(labels),
            [116, 118] => lookup_1137(labels),
            [98, 110, 112, 112, 97, 114, 105, 98, 97, 115] => lookup_1138(),
            [97, 109, 105, 99, 97] => lookup_1139(),
            [105, 116, 118] => lookup_1140(),
            [110, 105, 115, 115, 97, 110] => lookup_1141(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 216, 169] => {
                lookup_1142()
            }
            [100, 101, 97, 108, 101, 114] => lookup_1143(),
            [122, 97] => lookup_1144(info, labels),
            [100, 105, 115, 99, 111, 117, 110, 116] => lookup_1145(),
            [101, 114, 105, 99, 115, 115, 111, 110] => lookup_1146(),
            [115, 118] => lookup_1147(labels),
            [209, 129, 209, 128, 208, 177] => lookup_1148(labels),
            [115, 117, 112, 112, 108, 121] => lookup_1149(),
            [104, 105, 118] => lookup_1150(),
            [99, 121] => lookup_1151(labels),
            [120, 110, 45, 45, 56, 121, 48, 97, 48, 54, 51, 97] => lookup_1152(),
            [114, 111, 99, 107, 115] => lookup_1153(labels),
            [119, 105, 110, 110, 101, 114, 115] => lookup_1154(),
            [99, 111, 110, 116, 97, 99, 116] => lookup_1155(),
            [118, 101, 103, 97, 115] => lookup_1156(),
            [114, 101, 105, 115, 101] => lookup_1157(),
            [120, 110, 45, 45, 99, 122, 114, 115, 48, 116] => lookup_1158(),
            [108, 105] => lookup_1159(labels),
            [115, 112, 111, 116] => lookup_1160(),
            [106, 108, 108] => lookup_1161(),
            [216, 179, 217, 136, 216, 175, 216, 167, 217, 134] => lookup_1162(),
            [102, 121, 105] => lookup_1163(),
            [115, 107, 105, 110] => lookup_1164(),
            [104, 111, 116, 101, 108, 101, 115] => lookup_1165(),
            [115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 115] => lookup_1166(),
            [110, 112] => lookup_1167(info, labels),
            [99, 118] => lookup_1168(labels),
            [99, 105, 116, 105] => lookup_1169(),
            [100, 101, 108, 108] => lookup_1170(),
            [104, 115, 98, 99] => lookup_1171(),
            [99, 111, 108, 108, 101, 103, 101] => lookup_1172(),
            [104, 111, 109, 101, 115, 101, 110, 115, 101] => lookup_1173(),
            [99, 97, 112, 105, 116, 97, 108, 111, 110, 101] => lookup_1174(),
            [114, 101, 105, 115, 101, 110] => lookup_1175(),
            [109, 101, 100] => lookup_1176(),
            [111, 112, 101, 110] => lookup_1177(),
            [111, 114, 103] => lookup_1178(labels),
            [227, 130, 187, 227, 131, 188, 227, 131, 171] => lookup_1179(),
            [111, 110, 105, 111, 110] => lookup_1180(),
            [121, 116] => lookup_1181(labels),
            [102, 111, 111] => lookup_1182(),
            [209, 128, 209, 131, 209, 129] => lookup_1183(labels),
            [103, 114, 111, 99, 101, 114, 121] => lookup_1184(),
            [98, 115] => lookup_1185(labels),
            [104, 109] => lookup_1186(),
            [116, 97, 116, 116, 111, 111] => lookup_1187(),
            [104, 101, 114, 101] => lookup_1188(),
            [112, 114, 97, 120, 105] => lookup_1189(),
            [108, 116, 100, 97] => lookup_1190(),
            [120, 110, 45, 45, 56, 48, 97, 115, 119, 103] => lookup_1191(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_1192()
            }
            [99, 111, 109] => lookup_1193(labels),
            [97, 112, 97, 114, 116, 109, 101, 110, 116, 115] => lookup_1194(),
            [120, 120, 120] => lookup_1195(),
            [98, 114, 111, 107, 101, 114] => lookup_1196(),
            [98, 108, 111, 111, 109, 98, 101, 114, 103] => lookup_1197(),
            [118, 105, 115, 97] => lookup_1198(),
            [103, 114, 97, 105, 110, 103, 101, 114] => lookup_1199(),
            [103, 111, 111] => lookup_1200(),
            [100, 117, 114, 98, 97, 110] => lookup_1201(),
            [110, 101, 116, 119, 111, 114, 107] => lookup_1202(labels),
            [115, 99, 97] => lookup_1203(),
            [113, 117, 101, 115, 116] => lookup_1204(),
            [97, 113] => lookup_1205(),
            [115, 117, 112, 112, 108, 105, 101, 115] => lookup_1206(),
            [108, 105, 109, 111] => lookup_1207(),
            [116, 111, 121, 115] => lookup_1208(),
            [115, 116, 111, 114, 97, 103, 101] => lookup_1209(),
            [116, 117, 115, 104, 117] => lookup_1210(),
            [115, 111, 121] => lookup_1211(),
            [103, 111, 108, 102] => lookup_1212(),
            [102, 97, 114, 109, 101, 114, 115] => lookup_1213(),
            [102, 105, 97, 116] => lookup_1214(),
            [99, 111, 111, 108] => lookup_1215(labels),
            [102, 97, 115, 116] => lookup_1216(),
            [104, 105, 116, 97, 99, 104, 105] => lookup_1217(),
            [100, 106] => lookup_1218(),
            [111, 110, 121, 111, 117, 114, 115, 105, 100, 101] => lookup_1219(),
            [120, 110, 45, 45, 101, 99, 107, 118, 100, 116, 99, 57, 100] => lookup_1220(),
            [115, 104, 97, 110, 103, 114, 105, 108, 97] => lookup_1221(),
            [116, 97, 105, 112, 101, 105] => lookup_1222(),
            [224, 166, 172, 224, 166, 190, 224, 166, 130, 224, 166, 178, 224, 166, 190] => {
                lookup_1223()
            }
            [99, 111, 109, 112, 97, 114, 101] => lookup_1224(),
            [109, 111, 110, 101, 121] => lookup_1225(),
            [99, 104, 101, 97, 112] => lookup_1226(),
            [98, 97, 115, 107, 101, 116, 98, 97, 108, 108] => lookup_1227(labels),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_1228(),
            [120, 110, 45, 45, 106, 49, 97, 109, 104] => lookup_1229(),
            [224, 182, 189, 224, 182, 130, 224, 182, 154, 224, 183, 143] => lookup_1230(),
            [104, 111, 114, 115, 101] => lookup_1231(),
            [97, 99] => lookup_1232(labels),
            [118, 105, 103] => lookup_1233(),
            [98, 111, 115, 99, 104] => lookup_1234(),
            [98, 117, 121] => lookup_1235(),
            [107, 110] => lookup_1236(labels),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_1237(),
            [217, 133, 216, 181, 216, 177] => lookup_1238(),
            [109, 97, 114, 107, 101, 116, 105, 110, 103] => lookup_1239(labels),
            [117, 97] => lookup_1240(labels),
            [115, 104, 111, 112, 112, 105, 110, 103] => lookup_1241(),
            [98, 105, 122] => lookup_1242(labels),
            [120, 110, 45, 45, 106, 54, 119, 49, 57, 51, 103] => lookup_1243(labels),
            [116, 105, 97, 97] => lookup_1244(),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_1245(),
            [216, 168, 216, 167, 216, 177, 216, 170] => lookup_1246(),
            [118, 105, 107, 105, 110, 103] => lookup_1247(),
            [114, 117, 104, 114] => lookup_1248(),
            [206, 181, 206, 187] => lookup_1249(),
            [106, 111] => lookup_1250(labels),
            [115, 104, 97, 119] => lookup_1251(),
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 56, 55, 103] => {
                lookup_1252()
            }
            [99, 115, 99] => lookup_1253(),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_1254(),
            [109, 116, 110] => lookup_1255(),
            [99, 111, 97, 99, 104] => lookup_1256(),
            [116, 114, 117, 115, 116] => lookup_1257(),
            [112, 105, 111, 110, 101, 101, 114] => lookup_1258(),
            [109, 111, 109] => lookup_1259(labels),
            [224, 172, 173, 224, 172, 190, 224, 172, 176, 224, 172, 164] => lookup_1260(),
            [98, 109, 115] => lookup_1261(),
            [100, 104, 108] => lookup_1262(),
            [119, 111, 114, 107] => lookup_1263(labels),
            [230, 156, 186, 230, 158, 132] => lookup_1264(),
            [100, 118, 114] => lookup_1265(),
            [99, 108, 97, 105, 109, 115] => lookup_1266(),
            [216, 167, 216, 177, 216, 167, 217, 133, 217, 131, 217, 136] => lookup_1267(),
            [110, 111, 114, 116, 104, 119, 101, 115, 116, 101, 114, 110, 109, 117, 116, 117, 97, 108] => {
                lookup_1268()
            }
            [101, 97, 116] => lookup_1269(),
            [115, 107, 105] => lookup_1270(),
            [115, 116, 99] => lookup_1271(),
            [111, 114, 97, 110, 103, 101] => lookup_1272(),
            [115, 117] => lookup_1273(labels),
            [99, 102, 100] => lookup_1274(),
            [109, 101, 110, 117] => lookup_1275(labels),
            [106, 111, 98, 115] => lookup_1276(),
            [101, 114] => lookup_1277(info, labels),
            [99, 111, 100, 101, 115] => lookup_1278(labels),
            [99, 111, 109, 99, 97, 115, 116] => lookup_1279(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 217, 135] => {
                lookup_1280()
            }
            [105, 110] => lookup_1281(labels),
            [108, 97, 116] => lookup_1282(),
            [115, 99] => lookup_1283(labels),
            [100, 101, 103, 114, 101, 101] => lookup_1284(),
            [109, 103] => lookup_1285(labels),
            [112, 104, 105, 108, 105, 112, 115] => lookup_1286(),
            [103, 111, 111, 100, 121, 101, 97, 114] => lookup_1287(),
            [120, 110, 45, 45, 109, 103, 98, 50, 100, 100, 101, 115] => lookup_1288(),
            [102, 111] => lookup_1289(),
            [121, 97, 104, 111, 111] => lookup_1290(),
            [115, 101, 99, 117, 114, 101] => lookup_1291(),
            [105, 114] => lookup_1292(labels),
            [99, 105] => lookup_1293(labels),
            [99, 105, 114, 99, 108, 101] => lookup_1294(),
            [120, 110, 45, 45, 99, 99, 107, 50, 98, 51, 98] => lookup_1295(),
            [107, 119] => lookup_1296(labels),
            [120, 110, 45, 45, 54, 102, 114, 122, 56, 50, 103] => lookup_1297(),
            [114, 101, 118, 105, 101, 119, 115] => lookup_1298(),
            [120, 110, 45, 45, 102, 105, 113, 54, 52, 98] => lookup_1299(),
            [105, 107, 97, 110, 111] => lookup_1300(),
            [100, 111] => lookup_1301(labels),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116, 115] => lookup_1302(),
            [209, 131, 208, 186, 209, 128] => lookup_1303(),
            [99, 97, 114, 101, 101, 114, 115] => lookup_1304(),
            [102, 97, 110] => lookup_1305(),
            [108, 118] => lookup_1306(labels),
            [97, 120] => lookup_1307(labels),
            [109, 97, 116, 116, 101, 108] => lookup_1308(),
            [120, 110, 45, 45, 110, 103, 98, 99, 53, 97, 122, 100] => lookup_1309(),
            [98, 111, 110, 100] => lookup_1310(),
            [230, 139, 155, 232, 129, 152] => lookup_1311(),
            [116, 111, 112] => lookup_1312(labels),
            [120, 110, 45, 45, 109, 103, 98, 112, 108, 50, 102, 104] => lookup_1313(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102, 115, 48, 48, 101, 109, 97] => lookup_1314(),
            [120, 110, 45, 45, 102, 105, 113, 50, 50, 56, 99, 53, 104, 115] => lookup_1315(),
            [101, 99] => lookup_1316(labels),
            [116, 99] => lookup_1317(labels),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_1318(labels),
            [118, 105, 118, 111] => lookup_1319(),
            [99, 102, 97] => lookup_1320(),
            [99, 111, 102, 102, 101, 101] => lookup_1321(),
            [115, 115] => lookup_1322(labels),
            [115, 109] => lookup_1323(),
            [105, 115, 116, 97, 110, 98, 117, 108] => lookup_1324(),
            [103, 97, 108] => lookup_1325(),
            [120, 110, 45, 45, 111, 116, 117, 55, 57, 54, 100] => lookup_1326(),
            [119, 97, 108, 116, 101, 114] => lookup_1327(),
            [112, 108, 117, 115] => lookup_1328(),
            [213, 176, 213, 161, 213, 181] => lookup_1329(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 48, 97, 54, 55, 102, 98, 99] => {
                lookup_1330()
            }
            [231, 189, 145, 229, 186, 151] => lookup_1331(),
            [110, 104, 107] => lookup_1332(),
            [99, 97, 114, 97, 118, 97, 110] => lookup_1333(),
            [118, 103] => lookup_1334(labels),
            [122, 109] => lookup_1335(labels),
            [97, 99, 97, 100, 101, 109, 121] => lookup_1336(labels),
            [118, 105, 114, 103, 105, 110] => lookup_1337(),
            [99, 111, 111, 107, 105, 110, 103, 99, 104, 97, 110, 110, 101, 108] => lookup_1338(),
            [99, 107] => lookup_1339(info, labels),
            [97, 115, 100, 97] => lookup_1340(),
            [104, 111, 108, 105, 100, 97, 121] => lookup_1341(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99, 56, 99] => lookup_1342(),
            [103, 97, 108, 108, 111] => lookup_1343(),
            [114, 101, 97, 100] => lookup_1344(),
            [99, 97, 109] => lookup_1345(),
            [97, 109, 101, 114, 105, 99, 97, 110, 102, 97, 109, 105, 108, 121] => lookup_1346(),
            [231, 167, 187, 229, 138, 168] => lookup_1347(),
            [110, 101, 120, 117, 115] => lookup_1348(),
            [115, 122] => lookup_1349(labels),
            [115, 105, 116, 101] => lookup_1350(labels),
            [98, 97] => lookup_1351(labels),
            [98, 111, 97, 116, 115] => lookup_1352(),
            [227, 130, 175, 227, 131, 169, 227, 130, 166, 227, 131, 137] => lookup_1353(),
            [116, 111, 121, 111, 116, 97] => lookup_1354(),
            [98, 106] => lookup_1355(labels),
            [118, 111, 116, 111] => lookup_1356(),
            [109, 111, 118] => lookup_1357(),
            [231, 189, 145, 231, 171, 153] => lookup_1358(),
            [98, 97, 98, 121] => lookup_1359(),
            [115, 99, 105, 101, 110, 99, 101] => lookup_1360(labels),
            [109, 119] => lookup_1361(labels),
            [105, 113] => lookup_1362(labels),
            [115, 99, 104, 109, 105, 100, 116] => lookup_1363(),
            [97, 99, 111] => lookup_1364(),
            [108, 97, 110, 100] => lookup_1365(labels),
            [103, 105, 118, 101, 115] => lookup_1366(),
            [112, 117, 98] => lookup_1367(labels),
            [99, 97, 108] => lookup_1368(),
            [104, 105, 112, 104, 111, 112] => lookup_1369(),
            [229, 174, 182, 233, 155, 187] => lookup_1370(),
            [229, 156, 168, 231, 186, 191] => lookup_1371(),
            [97, 110, 113, 117, 97, 110] => lookup_1372(),
            [99, 108, 111, 117, 100] => lookup_1373(labels),
            [116, 111, 116, 97, 108] => lookup_1374(),
            [120, 110, 45, 45, 53, 116, 122, 109, 53, 103] => lookup_1375(),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_1376(),
            [110, 101, 119, 115] => lookup_1377(labels),
            [116, 97, 116, 97, 109, 111, 116, 111, 114, 115] => lookup_1378(),
            [120, 110, 45, 45, 118, 104, 113, 117, 118] => lookup_1379(),
            [99, 109] => lookup_1380(labels),
            [103, 105] => lookup_1381(labels),
            [111, 114, 105, 103, 105, 110, 115] => lookup_1382(),
            [101, 101] => lookup_1383(labels),
            [97, 108, 108, 115, 116, 97, 116, 101] => lookup_1384(),
            [229, 164, 167, 230, 139, 191] => lookup_1385(),
            [102, 114, 111, 110, 116, 100, 111, 111, 114] => lookup_1386(),
            [119, 111, 119] => lookup_1387(),
            [117, 107] => lookup_1388(labels),
            [120, 110, 45, 45, 117, 110, 117, 112, 52, 121] => lookup_1389(),
            [97, 116, 116, 111, 114, 110, 101, 121] => lookup_1390(),
            [111, 108, 108, 111] => lookup_1391(),
            [107, 105, 110, 100, 108, 101] => lookup_1392(),
            [104, 121, 97, 116, 116] => lookup_1393(),
            [122, 97, 114, 97] => lookup_1394(),
            [105, 101, 101, 101] => lookup_1395(),
            [99, 111, 117, 112, 111, 110] => lookup_1396(),
            [118, 101] => lookup_1397(labels),
            [109, 105, 108] => lookup_1398(),
            [120, 110, 45, 45, 99, 122, 114, 117, 50, 100] => lookup_1399(),
            [120, 110, 45, 45, 109, 103, 98, 57, 97, 119, 98, 102] => lookup_1400(),
            [99, 114, 117, 105, 115, 101] => lookup_1401(),
            [101, 120, 112, 101, 114, 116] => lookup_1402(),
            [116, 101, 110, 110, 105, 115] => lookup_1403(),
            [110, 97, 118, 121] => lookup_1404(),
            [117, 122] => lookup_1405(labels),
            [112, 104] => lookup_1406(labels),
            [101, 120, 112, 114, 101, 115, 115] => lookup_1407(),
            [104, 117, 103, 104, 101, 115] => lookup_1408(),
            [97, 101, 103] => lookup_1409(),
            [99, 104] => lookup_1410(labels),
            [110, 103, 111] => lookup_1411(),
            [110, 105, 115, 115, 97, 121] => lookup_1412(),
            [114, 121, 117, 107, 121, 117] => lookup_1413(),
            [118, 101, 110, 116, 117, 114, 101, 115] => lookup_1414(),
            [108, 97, 110, 100, 114, 111, 118, 101, 114] => lookup_1415(),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_1416(),
            [111, 108, 97, 121, 97, 110, 103, 114, 111, 117, 112] => lookup_1417(),
            [109, 111, 114, 116, 103, 97, 103, 101] => lookup_1418(),
            [99, 97, 108, 108] => lookup_1419(),
            [121, 111, 100, 111, 98, 97, 115, 104, 105] => lookup_1420(),
            [109, 101, 108, 98, 111, 117, 114, 110, 101] => lookup_1421(),
            [120, 110, 45, 45, 109, 103, 98, 97, 104, 49, 97, 51, 104, 106, 107, 114, 100] => {
                lookup_1422()
            }
            [105, 109, 109, 111, 98, 105, 108, 105, 101, 110] => lookup_1423(),
            [98, 98, 99] => lookup_1424(),
            [99, 108, 105, 99, 107] => lookup_1425(),
            [109, 111, 116, 111] => lookup_1426(),
            [97, 109, 101, 120] => lookup_1427(),
            [97, 98, 117, 100, 104, 97, 98, 105] => lookup_1428(),
            [108, 97, 119] => lookup_1429(),
            [116, 104, 101, 97, 116, 114, 101] => lookup_1430(),
            [105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 115] => lookup_1431(),
            [115, 101, 120, 121] => lookup_1432(),
            [106, 112] => lookup_1433(labels),
            [100, 101, 115, 105, 103, 110] => lookup_1434(labels),
            [108, 105, 108, 108, 121] => lookup_1435(),
            [109, 120] => lookup_1436(labels),
            [106, 111, 116] => lookup_1437(),
            [107, 112, 109, 103] => lookup_1438(),
            [103, 111, 111, 103, 108, 101] => lookup_1439(),
            [97, 120, 97] => lookup_1440(),
            [120, 110, 45, 45, 51, 101, 48, 98, 55, 48, 55, 101] => lookup_1441(),
            [108, 105, 120, 105, 108] => lookup_1442(),
            [116, 111, 114, 97, 121] => lookup_1443(),
            [101, 109, 97, 105, 108] => lookup_1444(),
            [208, 180, 208, 181, 209, 130, 208, 184] => lookup_1445(),
            [120, 110, 45, 45, 103, 107, 51, 97, 116, 49, 101] => lookup_1446(),
            [232, 180, 173, 231, 137, 169] => lookup_1447(),
            [112, 105, 110, 107] => lookup_1448(),
            [109, 99, 107, 105, 110, 115, 101, 121] => lookup_1449(),
            [121, 97, 99, 104, 116, 115] => lookup_1450(),
            [104, 101, 108, 112] => lookup_1451(),
            [120, 110, 45, 45, 104, 120, 116, 56, 49, 52, 101] => lookup_1452(),
            [108, 105, 102, 101, 115, 116, 121, 108, 101] => lookup_1453(),
            [102, 105, 100, 111] => lookup_1454(),
            [112, 97, 115, 115, 97, 103, 101, 110, 115] => lookup_1455(),
            [105, 100] => lookup_1456(labels),
            [106, 101] => lookup_1457(labels),
            [115, 112, 97, 99, 101] => lookup_1458(labels),
            [109, 105, 116] => lookup_1459(),
            [108, 117, 120, 117, 114, 121] => lookup_1460(),
            [105, 98, 109] => lookup_1461(),
            [111, 109] => lookup_1462(labels),
            [103, 114, 111, 117, 112] => lookup_1463(labels),
            [115, 116, 97, 116, 101, 102, 97, 114, 109] => lookup_1464(),
            [106, 117, 110, 105, 112, 101, 114] => lookup_1465(),
            [121, 111, 103, 97] => lookup_1466(),
            [114, 101, 110, 116] => lookup_1467(),
            [101, 114, 110, 105] => lookup_1468(),
            [99, 114, 105, 99, 107, 101, 116] => lookup_1469(),
            [120, 110, 45, 45, 57, 107, 114, 116, 48, 48, 97] => lookup_1470(),
            [120, 110, 45, 45, 109, 103, 98, 97, 98, 50, 98, 100] => lookup_1471(),
            [98, 101, 115, 116, 98, 117, 121] => lookup_1472(),
            [115, 102, 114] => lookup_1473(),
            [103, 105, 102, 116] => lookup_1474(),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_1475(),
            [120, 110, 45, 45, 119, 52, 114, 56, 53, 101, 108, 56, 102, 104, 117, 53, 100, 110, 114, 97] => {
                lookup_1476()
            }
            [109, 111, 100, 97] => lookup_1477(),
            [97, 117, 100, 105, 98, 108, 101] => lookup_1478(),
            [99, 97, 114, 101, 101, 114] => lookup_1479(),
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 122, 103, 113, 112, 54, 106] => {
                lookup_1480()
            }
            [98, 117, 105, 108, 100, 101, 114, 115] => lookup_1481(),
            [102, 97, 103, 101] => lookup_1482(),
            [121, 97, 110, 100, 101, 120] => lookup_1483(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97] => lookup_1484(),
            [116, 101, 97, 109] => lookup_1485(labels),
            [115, 103] => lookup_1486(labels),
            [119, 101, 100, 100, 105, 110, 103] => lookup_1487(),
            [115, 112, 114, 101, 97, 100, 98, 101, 116, 116, 105, 110, 103] => lookup_1488(),
            [97, 101, 114, 111] => lookup_1489(labels),
            [98, 105] => lookup_1490(labels),
            [110, 101] => lookup_1491(),
            [115, 104, 111, 119, 116, 105, 109, 101] => lookup_1492(),
            [100, 97, 116, 105, 110, 103] => lookup_1493(),
            [99, 98, 115] => lookup_1494(),
            [115, 97] => lookup_1495(labels),
            [120, 110, 45, 45, 51, 98, 115, 116, 48, 48, 109] => lookup_1496(),
            [97, 122, 117, 114, 101] => lookup_1497(),
            [118, 97, 110, 103, 117, 97, 114, 100] => lookup_1498(),
            [109, 111, 115, 99, 111, 119] => lookup_1499(),
            [114, 117, 110] => lookup_1500(labels),
            [116, 119] => lookup_1501(labels),
            [119, 101, 105, 98, 111] => lookup_1502(),
            [119, 115] => lookup_1503(labels),
            [108, 103, 98, 116] => lookup_1504(),
            [109, 116] => lookup_1505(labels),
            [98, 114, 111, 116, 104, 101, 114] => lookup_1506(),
            [118, 111, 121, 97, 103, 101] => lookup_1507(),
            [112, 101] => lookup_1508(labels),
            [229, 149, 134, 229, 159, 142] => lookup_1509(),
            [115, 99, 104, 119, 97, 114, 122] => lookup_1510(),
            [103, 101, 97] => lookup_1511(),
            [105, 110, 107] => lookup_1512(),
            [114, 111, 111, 109] => lookup_1513(),
            [99, 114, 117, 105, 115, 101, 115] => lookup_1514(),
            [108, 114] => lookup_1515(labels),
            [115, 101, 110, 101, 114] => lookup_1516(),
            [208, 188, 208, 186, 208, 180] => lookup_1517(),
            [216, 168, 217, 138, 216, 170, 217, 131] => lookup_1518(),
            [224, 168, 173, 224, 168, 190, 224, 168, 176, 224, 168, 164] => lookup_1519(),
            [120, 110, 45, 45, 112, 115, 115, 121, 50, 117] => lookup_1520(),
            [229, 129, 165, 229, 186, 183] => lookup_1521(),
            [98, 97, 110, 100] => lookup_1522(),
            [101, 97, 114, 116, 104] => lookup_1523(labels),
            [102, 105, 114, 101, 115, 116, 111, 110, 101] => lookup_1524(),
            [112, 105, 99, 116, 117, 114, 101, 115] => lookup_1525(labels),
            [99, 101, 114, 110] => lookup_1526(),
            [99, 105, 116, 105, 99] => lookup_1527(),
            [117, 121] => lookup_1528(labels),
            [99, 112, 97] => lookup_1529(),
            [103, 115] => lookup_1530(),
            [108, 117, 120, 101] => lookup_1531(),
            [97, 112, 112, 108, 101] => lookup_1532(),
            [103, 111, 112] => lookup_1533(),
            [228, 184, 173, 229, 156, 139] => lookup_1534(),
            [233, 128, 154, 232, 178, 169] => lookup_1535(),
            [120, 105, 110] => lookup_1536(),
            [103, 117, 105, 100, 101] => lookup_1537(),
            [103, 108, 97, 115, 115] => lookup_1538(),
            [102, 114, 111, 110, 116, 105, 101, 114] => lookup_1539(),
            [109, 98, 97] => lookup_1540(),
            [115, 101, 119] => lookup_1541(),
            [103, 114, 101, 101, 110] => lookup_1542(),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_1543(labels),
            [102, 111, 114, 100] => lookup_1544(),
            [115, 111, 102, 116, 98, 97, 110, 107] => lookup_1545(),
            [118, 105, 110] => lookup_1546(),
            [107, 109] => lookup_1547(labels),
            [97, 105, 103] => lookup_1548(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_1549(),
            [103, 117] => lookup_1550(labels),
            [99, 108, 117, 98] => lookup_1551(labels),
            [230, 184, 184, 230, 136, 143] => lookup_1552(),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_1553(),
            [115, 121, 115, 116, 101, 109, 115] => lookup_1554(labels),
            [112, 102] => lookup_1555(labels),
            [224, 174, 154, 224, 174, 191, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 174, 170, 224, 175, 141, 224, 174, 170, 224, 175, 130, 224, 174, 176, 224, 175, 141] => {
                lookup_1556()
            }
            [102, 105, 110, 97, 110, 99, 101] => lookup_1557(),
            [116, 101, 108] => lookup_1558(),
            [108, 97, 115, 97, 108, 108, 101] => lookup_1559(),
            [115, 97, 97, 114, 108, 97, 110, 100] => lookup_1560(),
            [102, 97, 105, 108] => lookup_1561(),
            [120, 110, 45, 45, 121, 103, 98, 105, 50, 97, 109, 109, 120] => lookup_1562(),
            [102, 105, 115, 104] => lookup_1563(),
            [100, 101, 108, 111, 105, 116, 116, 101] => lookup_1564(),
            [108, 105, 100, 108] => lookup_1565(),
            [120, 110, 45, 45, 53, 53, 113, 119, 52, 50, 103] => lookup_1566(),
            [104, 111, 115, 112, 105, 116, 97, 108] => lookup_1567(),
            [100, 110, 112] => lookup_1568(),
            [104, 100, 102, 99, 98, 97, 110, 107] => lookup_1569(),
            [231, 187, 132, 231, 187, 135, 230, 156, 186, 230, 158, 132] => lookup_1570(),
            [102, 107] => lookup_1571(info, labels),
            [120, 110, 45, 45, 103, 101, 99, 114, 106, 57, 99] => lookup_1572(),
            [114, 101, 110] => lookup_1573(),
            [100, 97, 116, 101] => lookup_1574(),
            [98, 97, 114, 101, 102, 111, 111, 116] => lookup_1575(),
            [108, 111, 102, 116] => lookup_1576(),
            [216, 167, 217, 132, 216, 167, 216, 177, 216, 175, 217, 134] => lookup_1577(),
            [97, 115, 115, 111, 99, 105, 97, 116, 101, 115] => lookup_1578(),
            [118, 110] => lookup_1579(labels),
            [98, 97, 114] => lookup_1580(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 167] => lookup_1581(),
            [108, 111, 99, 117, 115] => lookup_1582(),
            [100, 117, 110, 108, 111, 112] => lookup_1583(),
            [105, 112, 105, 114, 97, 110, 103, 97] => lookup_1584(),
            [108, 101, 103, 97, 108] => lookup_1585(),
            [102, 105, 100, 101, 108, 105, 116, 121] => lookup_1586(),
            [115, 116, 117, 100, 121] => lookup_1587(),
            [115, 104, 111, 117, 106, 105] => lookup_1588(),
            [100, 97, 116, 97] => lookup_1589(),
            [120, 110, 45, 45, 99, 103, 52, 98, 107, 105] => lookup_1590(),
            [109, 116, 114] => lookup_1591(),
            [120, 110, 45, 45, 98, 99, 107, 49, 98, 57, 97, 53, 100, 114, 101, 52, 99] => {
                lookup_1592()
            }
            [109, 99] => lookup_1593(labels),
            [230, 133, 136, 229, 150, 132] => lookup_1594(),
            [100, 105, 114, 101, 99, 116] => lookup_1595(),
            [115, 108] => lookup_1596(labels),
            [109, 108, 98] => lookup_1597(),
            [97, 109, 101, 114, 105, 99, 97, 110, 101, 120, 112, 114, 101, 115, 115] => {
                lookup_1598()
            }
            [120, 110, 45, 45, 99, 50, 98, 114, 55, 103] => lookup_1599(),
            [118, 105, 118, 97] => lookup_1600(),
            [115, 99, 106, 111, 104, 110, 115, 111, 110] => lookup_1601(),
            [110, 105] => lookup_1602(labels),
            [104, 121, 117, 110, 100, 97, 105] => lookup_1603(),
            [118, 111, 108, 118, 111] => lookup_1604(),
            [108, 105, 109, 105, 116, 101, 100] => lookup_1605(),
            [98, 97, 110, 97, 109, 101, 120] => lookup_1606(),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_1607(),
            [114, 105, 99, 111, 104] => lookup_1608(),
            [104, 97, 105, 114] => lookup_1609(),
            [103, 117, 105, 116, 97, 114, 115] => lookup_1610(),
            [108, 105, 118, 101] => lookup_1611(),
            [115, 104] => lookup_1612(labels),
            [120, 105, 104, 117, 97, 110] => lookup_1613(),
            [111, 98, 115, 101, 114, 118, 101, 114] => lookup_1614(),
            [120, 110, 45, 45, 54, 113, 113, 57, 56, 54, 98, 51, 120, 108] => lookup_1615(),
            [116, 111, 107, 121, 111] => lookup_1616(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 109, 55, 97, 56, 104] => lookup_1617(),
            [104, 111, 116, 109, 97, 105, 108] => lookup_1618(),
            [216, 167, 217, 132, 216, 168, 216, 173, 216, 177, 217, 138, 217, 134] => lookup_1619(),
            [108, 105, 102, 101, 105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_1620(),
            [110, 97, 116, 117, 114, 97] => lookup_1621(),
            [120, 110, 45, 45, 109, 103, 98, 99, 48, 97, 57, 97, 122, 99, 103] => lookup_1622(),
            [97, 111, 108] => lookup_1623(),
            [110, 108] => lookup_1624(labels),
            [120, 110, 45, 45, 109, 103, 98, 116, 51, 100, 104, 100] => lookup_1625(),
            [98, 104, 97, 114, 116, 105] => lookup_1626(),
            [102, 117, 106, 105, 120, 101, 114, 111, 120] => lookup_1627(),
            [99, 111] => lookup_1628(labels),
            [116, 105, 114, 111, 108] => lookup_1629(),
            [224, 164, 168, 224, 165, 135, 224, 164, 159] => lookup_1630(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1631(),
            [98, 99, 110] => lookup_1632(),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1633(),
            [112, 97, 110, 97, 115, 111, 110, 105, 99] => lookup_1634(),
            [104, 107] => lookup_1635(labels),
            [105, 111] => lookup_1636(labels),
            [109, 111] => lookup_1637(labels),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_1638(),
            [102, 105, 116, 110, 101, 115, 115] => lookup_1639(),
            [118, 105] => lookup_1640(labels),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114, 45, 99, 116, 98] => {
                lookup_1641()
            }
            [109, 105, 110, 116] => lookup_1642(),
            [217, 133, 217, 136, 216, 177, 217, 138, 216, 170, 216, 167, 217, 134, 217, 138, 216, 167] => {
                lookup_1643()
            }
            [106, 101, 116, 122, 116] => lookup_1644(),
            [116, 114] => lookup_1645(labels),
            [103, 105, 102, 116, 115] => lookup_1646(),
            [216, 185, 216, 177, 216, 167, 217, 130] => lookup_1647(),
            [215, 167, 215, 149, 215, 157] => lookup_1648(),
            [115, 104, 105, 97] => lookup_1649(),
            [112, 104, 111, 110, 101] => lookup_1650(),
            [99, 101, 110, 116, 101, 114] => lookup_1651(),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_1652(),
            [227, 130, 162, 227, 131, 158, 227, 130, 190, 227, 131, 179] => lookup_1653(),
            [102, 111, 111, 116, 98, 97, 108, 108] => lookup_1654(),
            [111, 109, 101, 103, 97] => lookup_1655(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 169] => lookup_1656(),
            [102, 101, 114, 114, 97, 114, 105] => lookup_1657(),
            [99, 97] => lookup_1658(labels),
            [109, 115, 100] => lookup_1659(),
            [98, 109, 119] => lookup_1660(),
            [98, 101, 97, 116, 115] => lookup_1661(),
            [99, 104, 114, 111, 109, 101] => lookup_1662(),
            [107, 114, 100] => lookup_1663(labels),
            [119, 111, 114, 107, 115] => lookup_1664(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 219, 131] => {
                lookup_1665()
            }
            [114, 117] => lookup_1666(labels),
            [97, 108, 105, 112, 97, 121] => lookup_1667(),
            [109, 111, 110, 115, 116, 101, 114] => lookup_1668(),
            [99, 97, 112, 101, 116, 111, 119, 110] => lookup_1669(),
            [116, 99, 105] => lookup_1670(),
            [216, 185, 217, 133, 216, 167, 217, 134] => lookup_1671(),
            [120, 110, 45, 45, 105, 109, 114, 53, 49, 51, 110] => lookup_1672(),
            wild => {
                info.len = wild.len();
                info
            }
        },
        None => info,
    }
}
#[inline]
fn lookup_0() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_2() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_3() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_6() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_7() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_8() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_10_0(acc),
            [111, 114, 103] => lookup_10_1(acc),
            [101, 100, 117] => lookup_10_2(acc),
            [98, 105, 122] => lookup_10_3(acc),
            [105, 110, 102, 111] => lookup_10_4(acc),
            [110, 101, 116] => lookup_10_5(acc),
            [103, 111, 118] => lookup_10_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_11() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_12() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_14() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_17_0(acc),
            [110, 101, 116] => lookup_17_1(acc),
            [99, 111] => lookup_17_2(acc),
            [109, 105, 108] => lookup_17_3(acc),
            [111, 114, 103] => lookup_17_4(acc),
            [99, 111, 111, 112] => lookup_17_5(acc),
            [103, 111, 118] => lookup_17_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 57, 48, 97, 122, 104] => lookup_18_0(acc),
            [120, 110, 45, 45, 56, 48, 97, 117] => lookup_18_1(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_18_2(acc),
            [120, 110, 45, 45, 111, 49, 97, 99] => lookup_18_3(acc),
            [120, 110, 45, 45, 100, 49, 97, 116] => lookup_18_4(acc),
            [120, 110, 45, 45, 111, 49, 97, 99, 104] => lookup_18_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_19() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_23_0(acc),
            [111, 114, 103] => lookup_23_1(acc),
            [101, 100, 117] => lookup_23_2(acc),
            [98, 105, 122] => lookup_23_3(acc),
            [105, 110, 102, 111] => lookup_23_4(acc),
            [103, 111, 118] => lookup_23_5(acc),
            [110, 101, 116] => lookup_23_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_24() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_32() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_34() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38() -> Info {
    Info {
        len: 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_39() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_40() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_41() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_42() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_44_0(acc),
            [97, 114, 116] => lookup_44_1(acc),
            [101, 100, 117] => lookup_44_2(acc),
            [115, 111, 99] => lookup_44_3(acc),
            [116, 109] => lookup_44_4(acc),
            [111, 114, 103] => lookup_44_5(acc),
            [99, 111, 109] => lookup_44_6(acc),
            [112, 111, 108] => lookup_44_7(acc),
            [110, 101, 116] => lookup_44_8(acc),
            [97, 115, 115, 111] => lookup_44_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_45() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_49() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_50<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_50_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_51() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_53_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_53_0(acc),
            [101, 100, 117] => lookup_53_1(acc),
            [105, 110, 116] => lookup_53_2(acc),
            [103, 111] => lookup_53_3(acc),
            [110, 97, 109, 101] => lookup_53_4(acc),
            [110, 111, 109] => lookup_53_5(acc),
            [99, 111] => lookup_53_6(acc),
            [99, 111, 109] => lookup_53_7(acc),
            [98, 105, 122] => lookup_53_8(acc),
            [103, 111, 118] => lookup_53_9(acc),
            [110, 105, 99] => lookup_53_10(acc),
            [109, 105, 108] => lookup_53_11(acc),
            [111, 114, 103] => lookup_53_12(acc),
            [116, 101, 115, 116] => lookup_53_13(acc),
            [119, 101, 98] => lookup_53_14(acc),
            [110, 101, 116] => lookup_53_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_54<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110, 112, 121] => lookup_54_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 110] => lookup_55_0(acc),
            [103, 111, 112] => lookup_55_1(acc),
            [103, 111, 107] => lookup_55_2(acc),
            [101, 100, 117] => lookup_55_3(acc),
            [103, 111, 98] => lookup_55_4(acc),
            [102, 97, 109] => lookup_55_5(acc),
            [103, 111, 115] => lookup_55_6(acc),
            [105, 110, 102, 111] => lookup_55_7(acc),
            [111, 114, 103] => lookup_55_8(acc),
            [99, 111, 109] => lookup_55_9(acc),
            [98, 105, 122] => lookup_55_10(acc),
            [119, 101, 98] => lookup_55_11(acc),
            [110, 101, 116] => lookup_55_12(acc),
            [103, 111, 118] => lookup_55_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_56_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_56_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_56<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_56_0(acc),
            [103, 111, 118] => lookup_56_1(acc),
            [101, 100, 117] => lookup_56_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [224, 184, 152, 224, 184, 184, 224, 184, 163, 224, 184, 129, 224, 184, 180, 224, 184, 136] => {
                lookup_57_0(acc)
            }
            [224, 184, 168, 224, 184, 182, 224, 184, 129, 224, 184, 169, 224, 184, 178] => {
                lookup_57_1(acc)
            }
            [224, 184, 151, 224, 184, 171, 224, 184, 178, 224, 184, 163] => lookup_57_2(acc),
            [224, 185, 128, 224, 184, 153, 224, 185, 135, 224, 184, 149] => lookup_57_3(acc),
            [224, 184, 173, 224, 184, 135, 224, 184, 132, 224, 185, 140, 224, 184, 129, 224, 184, 163] => {
                lookup_57_4(acc)
            }
            [224, 184, 163, 224, 184, 177, 224, 184, 144, 224, 184, 154, 224, 184, 178, 224, 184, 165] => {
                lookup_57_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_58_0(acc),
            [109, 105, 108] => lookup_58_1(acc),
            [101, 100, 117] => lookup_58_2(acc),
            [105, 110, 116] => lookup_58_3(acc),
            [105, 110, 102, 111] => lookup_58_4(acc),
            [99, 111, 111, 112] => lookup_58_5(acc),
            [109, 117, 115, 101, 117, 109] => lookup_58_6(acc),
            [110, 97, 109, 101] => lookup_58_7(acc),
            [97, 101, 114, 111] => lookup_58_8(acc),
            [99, 111, 109] => lookup_58_9(acc),
            [98, 105, 122] => lookup_58_10(acc),
            [111, 114, 103] => lookup_58_11(acc),
            [103, 111, 118] => lookup_58_12(acc),
            [110, 101, 116] => lookup_58_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_59() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_60() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_61() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_63_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_63_0(acc),
            [110, 121, 109] => lookup_63_1(acc),
            [111, 121] => lookup_63_2(acc),
            [99, 111] => lookup_63_3(acc),
            [99, 111, 109] => lookup_63_4(acc),
            [111, 114, 103] => lookup_63_5(acc),
            [110, 101, 116] => lookup_63_6(acc),
            [103, 111, 118] => lookup_63_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_64() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_66() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_68() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_72() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_73() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_75() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_78_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_78_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_78_0(acc),
            [111, 114] => lookup_78_1(acc),
            [105, 110] => lookup_78_2(acc),
            [115, 104, 111, 112] => lookup_78_3(acc),
            [103, 111] => lookup_78_4(acc),
            [109, 105] => lookup_78_5(acc),
            [111, 110, 108, 105, 110, 101] => lookup_78_6(acc),
            [99, 111] => lookup_78_7(acc),
            [110, 101, 116] => lookup_78_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_79<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_79_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_80() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_81_0(acc),
            [101, 100, 117] => lookup_81_1(acc),
            [99, 111, 109] => lookup_81_2(acc),
            [105, 110, 102] => lookup_81_3(acc),
            [110, 101, 116] => lookup_81_4(acc),
            [103, 111, 118] => lookup_81_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_82() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_83() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_84() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_85<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 97, 110] => lookup_85_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_86() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_87() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_88() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_89_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 111, 99] => lookup_89_15_0(acc),
            [117, 115, 101, 114] => lookup_89_15_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_16_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_16_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_16_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [103, 108, 111, 98, 97, 108] => lookup_89_16_1_0(acc),
            [97] => lookup_89_16_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_16_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_16_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_16_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_16_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [98] => lookup_89_16_3_0(acc),
            [103, 108, 111, 98, 97, 108] => lookup_89_16_3_1(acc),
            [97] => lookup_89_16_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 101, 101, 116, 108, 115] => lookup_89_16_0(acc),
            [112, 114, 111, 100] => lookup_89_16_1(info, labels, acc),
            [109, 97, 112] => lookup_89_16_2(acc),
            [115, 115, 108] => lookup_89_16_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_89_27_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_33_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_33_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_33_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [97, 116, 108] => lookup_89_33_0_0(acc),
            [110, 106, 115] => lookup_89_33_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_89_33_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_46<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_89_46_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 49, 45, 100, 101] => lookup_89_53_0(acc),
            [119, 101, 115, 116, 49, 45, 117, 115] => lookup_89_53_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115, 45, 115, 116, 111, 50] => lookup_89_54_0(acc),
            [106, 108, 115, 45, 115, 116, 111, 51] => lookup_89_54_1(acc),
            [106, 108, 115, 45, 115, 116, 111, 49] => lookup_89_54_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_56_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_56_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_56_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_56_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_56_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_56_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_56_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [110, 121, 45, 50] => lookup_89_56_0_0(acc),
            [108, 111, 110, 45, 49] => lookup_89_56_0_1(acc),
            [110, 121, 45, 49] => lookup_89_56_0_2(acc),
            [115, 103, 45, 49] => lookup_89_56_0_3(acc),
            [102, 114, 45, 49] => lookup_89_56_0_4(acc),
            [108, 111, 110, 45, 50] => lookup_89_56_0_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_56<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_89_56_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_62_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_62<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 115, 105, 116, 101] => lookup_89_62_0(acc),
            [115, 116, 111, 114, 97, 103, 101] => lookup_89_62_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_69<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_89_69_0(acc),
            [110, 111, 114, 100, 101, 115, 116, 101, 45, 105, 100, 99] => lookup_89_69_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_88_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_88<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117] => lookup_89_88_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_92_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_92_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_92_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_92_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_92_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_92<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 97, 115, 116, 97, 115, 105, 97] => lookup_89_92_0(acc),
            [101, 97, 115, 116, 117, 115, 50] => lookup_89_92_1(acc),
            [119, 101, 115, 116, 117, 115, 50] => lookup_89_92_2(acc),
            [119, 101, 115, 116, 101, 117, 114, 111, 112, 101] => lookup_89_92_3(acc),
            [99, 101, 110, 116, 114, 97, 108, 117, 115] => lookup_89_92_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_95_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_95_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_89_95_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_89_95_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_95_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_89_95_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_89_95<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 112, 97, 97, 115] => lookup_89_95_0(info, labels, acc),
            [104, 111, 115, 116, 105, 110, 103] => lookup_89_95_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_111_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_111<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_89_111_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_89_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_113_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_113<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 112] => lookup_89_113_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_119_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_119<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_89_119_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_121_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_121<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_89_121_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_124_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_124_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97, 109, 115, 49] => lookup_89_124_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_124<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115] => lookup_89_124_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_89_0(acc),
            [97, 122, 117, 114, 101, 45, 109, 111, 98, 105, 108, 101] => lookup_89_1(acc),
            [109, 121, 101, 102, 102, 101, 99, 116] => lookup_89_2(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_89_3(acc),
            [116, 119, 109, 97, 105, 108] => lookup_89_4(acc),
            [105, 110, 45, 100, 115, 108] => lookup_89_5(acc),
            [99, 108, 111, 117, 100, 102, 114, 111, 110, 116] => lookup_89_6(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_89_7(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_89_8(acc),
            [105, 110] => lookup_89_9(acc),
            [104, 105, 99, 97, 109] => lookup_89_10(acc),
            [98, 111, 117, 110, 99, 101, 109, 101] => lookup_89_11(acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_89_12(acc),
            [98, 97, 114, 48] => lookup_89_13(acc),
            [115, 101, 110, 115, 101, 101, 114, 105, 110, 103] => lookup_89_14(acc),
            [115, 114, 99, 102] => lookup_89_15(info, labels, acc),
            [102, 97, 115, 116, 108, 121] => lookup_89_16(info, labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_89_17(acc),
            [117, 110, 105, 53] => lookup_89_18(acc),
            [98, 111, 111, 109, 108, 97] => lookup_89_19(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_89_20(acc),
            [119, 101, 98, 104, 111, 112] => lookup_89_21(acc),
            [100, 121, 110, 117] => lookup_89_22(acc),
            [115, 101, 114, 118, 101, 98, 108, 111, 103] => lookup_89_23(acc),
            [100, 100, 110, 115] => lookup_89_24(acc),
            [103, 101, 116, 115, 45, 105, 116] => lookup_89_25(acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_89_26(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_89_27(info, labels, acc),
            [101, 100, 103, 101, 97, 112, 112] => lookup_89_28(acc),
            [105, 110, 45, 116, 104, 101, 45, 98, 97, 110, 100] => lookup_89_29(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_89_30(acc),
            [118, 112, 110, 100, 110, 115] => lookup_89_31(acc),
            [115, 121, 116, 101, 115] => lookup_89_32(acc),
            [118, 112, 115, 45, 104, 111, 115, 116] => lookup_89_33(info, labels, acc),
            [109, 121, 109, 101, 100, 105, 97, 112, 99] => lookup_89_34(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_89_35(acc),
            [102, 114, 111, 109, 45, 110, 121] => lookup_89_36(acc),
            [107, 110, 120, 45, 115, 101, 114, 118, 101, 114] => lookup_89_37(acc),
            [102, 114, 111, 109, 45, 99, 111] => lookup_89_38(acc),
            [98, 97, 114, 115, 121] => lookup_89_39(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_89_40(acc),
            [102, 108, 121, 110, 110, 104, 111, 115, 116, 105, 110, 103] => lookup_89_41(acc),
            [100, 121, 110, 118, 54] => lookup_89_42(acc),
            [105, 111, 98, 98] => lookup_89_43(acc),
            [115, 101, 105, 100, 97, 116] => lookup_89_44(acc),
            [112, 114, 105, 118, 97, 116, 105, 122, 101, 104, 101, 97, 108, 116, 104, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_89_45(acc)
            }
            [99, 100, 110, 55, 55] => lookup_89_46(info, labels, acc),
            [100, 121, 110, 97, 116, 104, 111, 109, 101] => lookup_89_47(acc),
            [98, 97, 114, 50] => lookup_89_48(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => lookup_89_49(acc),
            [99, 100, 110, 55, 55, 45, 115, 115, 108] => lookup_89_50(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_89_51(acc),
            [115, 101, 108, 102, 105, 112] => lookup_89_52(acc),
            [99, 108, 111, 117, 100, 106, 105, 102, 102, 121] => lookup_89_53(labels, acc),
            [101, 108, 97, 115, 116, 120] => lookup_89_54(info, labels, acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_89_55(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_89_56(info, labels, acc)
            }
            [104, 117] => lookup_89_57(acc),
            [115, 101, 108, 108, 115, 45, 105, 116] => lookup_89_58(acc),
            [97, 116, 45, 98, 97, 110, 100, 45, 99, 97, 109, 112] => lookup_89_59(acc),
            [122, 97] => lookup_89_60(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_89_61(acc),
            [121, 97, 110, 100, 101, 120, 99, 108, 111, 117, 100] => lookup_89_62(labels, acc),
            [99, 100, 110, 45, 101, 100, 103, 101, 115] => lookup_89_63(acc),
            [105, 112, 105, 102, 111, 110, 121] => lookup_89_64(acc),
            [99, 108, 105, 99, 50, 48, 48, 48] => lookup_89_65(acc),
            [102, 97, 115, 116, 98, 108, 111, 103] => lookup_89_66(acc),
            [115, 101] => lookup_89_67(acc),
            [107, 114, 101, 108, 108, 105, 97, 110] => lookup_89_68(acc),
            [115, 97, 118, 101, 105, 110, 99, 108, 111, 117, 100] => {
                lookup_89_69(info, labels, acc)
            }
            [104, 111, 109, 101, 102, 116, 112] => lookup_89_70(acc),
            [99, 108, 105, 99, 107, 114, 105, 115, 105, 110, 103] => lookup_89_71(acc),
            [100, 101, 98, 105, 97, 110] => lookup_89_72(acc),
            [98, 108, 97, 99, 107, 98, 97, 117, 100, 99, 100, 110] => lookup_89_73(acc),
            [109, 101, 109, 115, 101, 116] => lookup_89_74(acc),
            [103, 98] => lookup_89_75(acc),
            [100, 110, 115, 117, 112] => lookup_89_76(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_89_77(acc),
            [116, 51, 108, 51, 112, 48, 114, 116] => lookup_89_78(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_89_79(acc),
            [110, 104, 108, 102, 97, 110] => lookup_89_80(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_89_81(acc),
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_89_82(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_89_83(acc)
            }
            [101, 97, 116, 105, 110, 103, 45, 111, 114, 103, 97, 110, 105, 99] => lookup_89_84(acc),
            [117, 107] => lookup_89_85(acc),
            [97, 108, 119, 97, 121, 115, 100, 97, 116, 97] => lookup_89_86(acc),
            [102, 114, 111, 109, 45, 97, 122] => lookup_89_87(acc),
            [99, 104, 97, 110, 110, 101, 108, 115, 100, 118, 114] => lookup_89_88(labels, acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_89_89(acc),
            [98, 114, 111, 107, 101, 45, 105, 116] => lookup_89_90(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_89_91(acc),
            [97, 122, 117, 114, 101, 115, 116, 97, 116, 105, 99, 97, 112, 112, 115] => {
                lookup_89_92(labels, acc)
            }
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_89_93(acc),
            [111, 102, 102, 105, 99, 101, 45, 111, 110, 45, 116, 104, 101] => lookup_89_94(acc),
            [111, 118, 104] => lookup_89_95(info, labels, acc),
            [102, 114, 111, 109, 45, 108, 97] => lookup_89_96(acc),
            [99, 108, 111, 117, 100, 121, 99, 108, 117, 115, 116, 101, 114] => lookup_89_97(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_89_98(acc),
            [111, 119, 110, 105, 112] => lookup_89_99(acc),
            [98, 117, 121, 115, 104, 111, 117, 115, 101, 115] => lookup_89_100(acc),
            [107, 105, 110, 103, 104, 111, 115, 116] => lookup_89_101(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_89_102(acc),
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_89_103(acc),
            [104, 111, 109, 101, 105, 112] => lookup_89_104(acc),
            [105, 110, 45, 118, 112, 110] => lookup_89_105(acc),
            [115, 99, 104, 111, 107, 111, 107, 101, 107, 115] => lookup_89_106(acc),
            [99, 108, 111, 117, 100, 102, 117, 110, 99, 116, 105, 111, 110, 115] => {
                lookup_89_107(acc)
            }
            [115, 101, 114, 118, 101, 109, 105, 110, 101, 99, 114, 97, 102, 116] => {
                lookup_89_108(acc)
            }
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_89_109(acc),
            [99, 97, 115, 97, 99, 97, 109] => lookup_89_110(acc),
            [99, 114, 121, 112, 116, 111, 110, 111, 109, 105, 99] => {
                lookup_89_111(info, labels, acc)
            }
            [116, 104, 114, 117, 104, 101, 114, 101] => lookup_89_112(acc),
            [102, 97, 115, 116, 108, 121, 108, 98] => lookup_89_113(labels, acc),
            [106, 112] => lookup_89_114(acc),
            [109, 121, 112, 115, 120] => lookup_89_115(acc),
            [110, 111, 45, 105, 112] => lookup_89_116(acc),
            [98, 97, 114, 49] => lookup_89_117(acc),
            [115, 105, 116, 101, 108, 101, 97, 102] => lookup_89_118(acc),
            [116, 111, 114, 112, 114, 111, 106, 101, 99, 116] => lookup_89_119(labels, acc),
            [109, 101, 105, 110, 102, 111, 114, 117, 109] => lookup_89_120(acc),
            [116, 115, 117, 107, 97, 101, 114, 117] => lookup_89_121(info, labels, acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_89_122(acc),
            [109, 121, 100, 105, 115, 115, 101, 110, 116] => lookup_89_123(acc),
            [100, 111, 99, 107, 116, 101, 114, 97] => lookup_89_124(info, labels, acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_89_125(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_89_126(acc),
            [115, 116, 97, 116, 105, 99, 45, 97, 99, 99, 101, 115, 115] => lookup_89_127(acc),
            [98, 105, 116, 98, 114, 105, 100, 103, 101] => lookup_89_128(acc),
            [112, 103, 97, 102, 97, 110] => lookup_89_129(acc),
            [104, 97, 109, 45, 114, 97, 100, 105, 111, 45, 111, 112] => lookup_89_130(acc),
            [102, 101, 115, 116, 101, 45, 105, 112] => lookup_89_131(acc),
            [100, 111, 101, 115, 45, 105, 116] => lookup_89_132(acc),
            [97, 122, 117, 114, 101, 119, 101, 98, 115, 105, 116, 101, 115] => lookup_89_133(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_89_134(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_89_135(acc)
            }
            [114, 101, 100, 105, 114, 101, 99, 116, 109, 101] => lookup_89_136(acc),
            [114, 117] => lookup_89_137(acc),
            [115, 99, 114, 97, 112, 112, 101, 114, 45, 115, 105, 116, 101] => lookup_89_138(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_90() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_96<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_96_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_97_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_97_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_97_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_97_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_97_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_97<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 121, 111, 110] => lookup_97_0(acc),
            [100, 119, 101, 98] => lookup_97_1(info, labels, acc),
            [109, 121, 112, 101, 112] => lookup_97_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_98() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_99() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_100() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_101() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_102() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_103() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_104() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_106_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_106_0(acc),
            [109, 105, 108] => lookup_106_1(acc),
            [101, 100, 117] => lookup_106_2(acc),
            [110, 111, 109] => lookup_106_3(acc),
            [111, 114, 103] => lookup_106_4(acc),
            [99, 111, 109] => lookup_106_5(acc),
            [112, 118, 116] => lookup_106_6(acc),
            [103, 111, 118] => lookup_106_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_107() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 101] => lookup_109_0(acc),
            [116, 118] => lookup_109_1(acc),
            [101, 100, 117] => lookup_109_2(acc),
            [105, 110, 102, 111] => lookup_109_3(acc),
            [99, 111] => lookup_109_4(acc),
            [99, 111, 109] => lookup_109_5(acc),
            [98, 105, 122] => lookup_109_6(acc),
            [111, 114, 103] => lookup_109_7(acc),
            [110, 101, 116] => lookup_109_8(acc),
            [103, 111, 118] => lookup_109_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_110() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_111() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_114() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_115() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_116() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_117() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_118() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_120() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_121() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_122_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_122_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_122_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_122_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_122_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_122_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_122_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_122_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 103, 111] => lookup_122_0(acc),
            [103, 101, 110] => lookup_122_1(acc),
            [101, 100, 117] => lookup_122_2(acc),
            [105] => lookup_122_3(acc),
            [110, 97, 109, 101] => lookup_122_4(acc),
            [102, 105, 114, 109] => lookup_122_5(acc),
            [108, 116, 100] => lookup_122_6(acc),
            [99, 111, 109] => lookup_122_7(labels, acc),
            [109, 111, 98, 105] => lookup_122_8(acc),
            [103, 111, 118] => lookup_122_9(acc),
            [109, 105, 108] => lookup_122_10(acc),
            [99, 111, 108] => lookup_122_11(acc),
            [111, 114, 103] => lookup_122_12(acc),
            [115, 99, 104] => lookup_122_13(acc),
            [110, 101, 116] => lookup_122_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_123() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_128<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_128_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_129() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_132_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_132_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_132_0(acc),
            [105, 110, 102] => lookup_132_1(acc),
            [110, 111, 109] => lookup_132_2(acc),
            [110, 97, 109, 101] => lookup_132_3(acc),
            [111, 114, 103] => lookup_132_4(acc),
            [99, 111, 109] => lookup_132_5(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_132_6(acc),
            [110, 101, 116] => lookup_132_7(acc),
            [103, 111, 118] => lookup_132_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_133() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_134() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_135() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_138() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_141() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_142_0(acc),
            [101, 100, 117] => lookup_142_1(acc),
            [99, 111, 109] => lookup_142_2(acc),
            [103, 111, 118] => lookup_142_3(acc),
            [110, 101, 116] => lookup_142_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_143() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_145() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_148<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 103] => lookup_148_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_149() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_154() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_155() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_156_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110, 99, 114, 97, 102, 116] => lookup_156_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_157() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_161() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_162() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_163_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_163_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_163_0(acc),
            [101, 100, 117] => lookup_163_1(acc),
            [110, 111, 109] => lookup_163_2(acc),
            [103, 118] => lookup_163_3(labels, acc),
            [48, 101] => lookup_163_4(acc),
            [111, 114, 103] => lookup_163_5(acc),
            [99, 111, 109] => lookup_163_6(acc),
            [110, 101, 116] => lookup_163_7(acc),
            [103, 111, 118] => lookup_163_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_164_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_164_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_164_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_164_0(acc),
            [105, 100, 102] => lookup_164_1(acc),
            [99, 111] => lookup_164_2(labels, acc),
            [107, 49, 50] => lookup_164_3(acc),
            [109, 117, 110, 105] => lookup_164_4(acc),
            [111, 114, 103] => lookup_164_5(acc),
            [103, 111, 118] => lookup_164_6(acc),
            [110, 101, 116] => lookup_164_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_165() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_166() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_169() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_171<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_171_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_172() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 49, 50, 99, 102, 105, 56, 105, 120, 98, 56, 108] => {
                lookup_184_0(acc)
            }
            [120, 110, 45, 45, 109, 51, 99, 104, 48, 106, 51, 97] => lookup_184_1(acc),
            [120, 110, 45, 45, 111, 51, 99, 121, 120, 50, 97] => lookup_184_2(acc),
            [120, 110, 45, 45, 104, 51, 99, 117, 122, 107, 49, 100, 105] => lookup_184_3(acc),
            [120, 110, 45, 45, 49, 50, 99, 49, 102, 101, 48, 98, 114] => lookup_184_4(acc),
            [120, 110, 45, 45, 49, 50, 99, 111, 48, 99, 51, 98, 52, 101, 118, 97] => {
                lookup_184_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_185() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 109, 111, 110] => lookup_186_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_186_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 121, 97] => lookup_186_0(acc),
            [111, 114, 103] => lookup_186_1(acc),
            [99, 111] => lookup_186_2(acc),
            [112, 97, 110, 101, 108] => lookup_186_3(labels, acc),
            [107, 97, 97, 115] => lookup_186_4(acc),
            [110, 101, 116] => lookup_186_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_187() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_188() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_190_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_190_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_190_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_190_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_190_0(acc),
            [110, 111, 109] => lookup_190_1(acc),
            [110, 121, 109] => lookup_190_2(acc),
            [122, 97] => lookup_190_3(acc),
            [111, 114, 103] => lookup_190_4(acc),
            [99, 111, 109] => lookup_190_5(acc),
            [103, 115, 106] => lookup_190_6(acc),
            [110, 101, 116] => lookup_190_7(acc),
            [103, 111, 118] => lookup_190_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_193() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_194() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_196_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_196<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_196_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_197() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_198() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_199() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_201() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_202() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_203() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_204() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_206() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_207() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_208() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_209_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_209_0(acc),
            [100, 101] => lookup_209_1(acc),
            [101, 100, 117] => lookup_209_2(acc),
            [115, 99] => lookup_209_3(acc),
            [105, 110, 102, 111] => lookup_209_4(acc),
            [99, 111] => lookup_209_5(acc),
            [111, 114, 103] => lookup_209_6(acc),
            [98, 105, 122] => lookup_209_7(acc),
            [103, 111, 118] => lookup_209_8(acc),
            [110, 101, 116] => lookup_209_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_210() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_211_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_211<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_211_0(acc),
            [111, 114] => lookup_211_1(acc),
            [110, 111, 109] => lookup_211_2(acc),
            [115, 99] => lookup_211_3(acc),
            [103, 111] => lookup_211_4(acc),
            [99, 111] => lookup_211_5(acc),
            [99, 111, 109] => lookup_211_6(acc),
            [111, 114, 103] => lookup_211_7(acc),
            [110, 101] => lookup_211_8(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_211_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_212() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_213() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_214() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_215() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_216_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_216<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_216_0(acc),
            [103, 111, 118] => lookup_216_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_216_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_217() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_219() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_221() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_223_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_223_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 45, 112, 97, 103, 101, 115] => lookup_223_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_223<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 116] => lookup_223_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_224() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_225() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_227() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_231() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_234() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_235() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 112, 97, 105, 114] => lookup_236_0(acc),
            [102, 111, 114] => lookup_236_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_237() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_0_0(acc),
            [107, 49, 50] => lookup_238_0_1(acc),
            [99, 99] => lookup_238_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_1_0(acc),
            [107, 49, 50] => lookup_238_1_1(acc),
            [99, 99] => lookup_238_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 117, 115] => lookup_238_2_0(acc),
            [103, 101, 110] => lookup_238_2_1(acc),
            [99, 111, 103] => lookup_238_2_2(acc),
            [100, 115, 116] => lookup_238_2_3(acc),
            [97, 110, 110, 45, 97, 114, 98, 111, 114] => lookup_238_2_4(acc),
            [107, 49, 50] => lookup_238_2_5(acc),
            [99, 99] => lookup_238_2_6(acc),
            [116, 101, 99] => lookup_238_2_7(acc),
            [119, 97, 115, 104, 116, 101, 110, 97, 119] => lookup_238_2_8(acc),
            [101, 97, 116, 111, 110] => lookup_238_2_9(acc),
            [108, 105, 98] => lookup_238_2_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_4_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_4_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_4_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_4_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 111, 99, 104] => lookup_238_4_1_0(acc),
            [112, 118, 116] => lookup_238_4_1_1(acc),
            [99, 104, 116, 114] => lookup_238_4_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_4_0(acc),
            [107, 49, 50] => lookup_238_4_1(labels, acc),
            [99, 99] => lookup_238_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_6_0(acc),
            [107, 49, 50] => lookup_238_6_1(acc),
            [99, 99] => lookup_238_6_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_7_0(acc),
            [107, 49, 50] => lookup_238_7_1(acc),
            [99, 99] => lookup_238_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_8_0(acc),
            [107, 49, 50] => lookup_238_8_1(acc),
            [99, 99] => lookup_238_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_9_0(acc),
            [107, 49, 50] => lookup_238_9_1(acc),
            [99, 99] => lookup_238_9_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_11_0(acc),
            [107, 49, 50] => lookup_238_11_1(acc),
            [99, 99] => lookup_238_11_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_12_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_12_0(acc),
            [107, 49, 50] => lookup_238_12_1(acc),
            [99, 99] => lookup_238_12_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_13_0(acc),
            [107, 49, 50] => lookup_238_13_1(acc),
            [99, 99] => lookup_238_13_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_14_0(acc),
            [107, 49, 50] => lookup_238_14_1(acc),
            [99, 99] => lookup_238_14_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_15_0(acc),
            [107, 49, 50] => lookup_238_15_1(acc),
            [99, 99] => lookup_238_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_16_0(acc),
            [107, 49, 50] => lookup_238_16_1(acc),
            [99, 99] => lookup_238_16_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_17_0(acc),
            [107, 49, 50] => lookup_238_17_1(acc),
            [99, 99] => lookup_238_17_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_18_0(acc),
            [107, 49, 50] => lookup_238_18_1(acc),
            [99, 99] => lookup_238_18_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_19_0(acc),
            [107, 49, 50] => lookup_238_19_1(acc),
            [99, 99] => lookup_238_19_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_20_0(acc),
            [107, 49, 50] => lookup_238_20_1(acc),
            [99, 99] => lookup_238_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_21_0(acc),
            [107, 49, 50] => lookup_238_21_1(acc),
            [99, 99] => lookup_238_21_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_22_0(acc),
            [107, 49, 50] => lookup_238_22_1(acc),
            [99, 99] => lookup_238_22_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_23_0(acc),
            [107, 49, 50] => lookup_238_23_1(acc),
            [99, 99] => lookup_238_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_24_0(acc),
            [107, 49, 50] => lookup_238_24_1(acc),
            [99, 99] => lookup_238_24_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_27<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_27_0(acc),
            [107, 49, 50] => lookup_238_27_1(acc),
            [99, 99] => lookup_238_27_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_238_28_0(acc),
            [108, 105, 98] => lookup_238_28_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_29_0(acc),
            [107, 49, 50] => lookup_238_29_1(acc),
            [99, 99] => lookup_238_29_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_32_0(acc),
            [107, 49, 50] => lookup_238_32_1(acc),
            [99, 99] => lookup_238_32_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_34_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_34<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_34_0(acc),
            [107, 49, 50] => lookup_238_34_1(acc),
            [99, 99] => lookup_238_34_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_238_35_0(acc),
            [108, 105, 98] => lookup_238_35_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_36_0(acc),
            [107, 49, 50] => lookup_238_36_1(acc),
            [99, 99] => lookup_238_36_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_38_0(acc),
            [107, 49, 50] => lookup_238_38_1(acc),
            [99, 99] => lookup_238_38_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_39_0(acc),
            [107, 49, 50] => lookup_238_39_1(acc),
            [99, 99] => lookup_238_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_40_0(acc),
            [107, 49, 50] => lookup_238_40_1(acc),
            [99, 99] => lookup_238_40_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_41_0(acc),
            [107, 49, 50] => lookup_238_41_1(acc),
            [99, 99] => lookup_238_41_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_42_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_42_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_42_0(acc),
            [107, 49, 50] => lookup_238_42_1(acc),
            [99, 99] => lookup_238_42_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_44_0(acc),
            [107, 49, 50] => lookup_238_44_1(acc),
            [99, 99] => lookup_238_44_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_47_0(acc),
            [107, 49, 50] => lookup_238_47_1(acc),
            [99, 99] => lookup_238_47_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_48_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_48_0(acc),
            [107, 49, 50] => lookup_238_48_1(acc),
            [99, 99] => lookup_238_48_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_49_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_49_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_49_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_49<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_49_0(acc),
            [107, 49, 50] => lookup_238_49_1(acc),
            [99, 99] => lookup_238_49_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_50_0(acc),
            [107, 49, 50] => lookup_238_50_1(acc),
            [99, 99] => lookup_238_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_51_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_51_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_51<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_51_0(acc),
            [107, 49, 50] => lookup_238_51_1(acc),
            [99, 99] => lookup_238_51_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_52_0(acc),
            [107, 49, 50] => lookup_238_52_1(acc),
            [99, 99] => lookup_238_52_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_53_0(acc),
            [107, 49, 50] => lookup_238_53_1(acc),
            [99, 99] => lookup_238_53_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_238_54_0(acc),
            [108, 105, 98] => lookup_238_54_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_55_0(acc),
            [107, 49, 50] => lookup_238_55_1(acc),
            [99, 99] => lookup_238_55_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_56_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_238_56_0(acc),
            [108, 105, 98] => lookup_238_56_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_57<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 104, 120] => lookup_238_57_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_59_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_59_0(acc),
            [107, 49, 50] => lookup_238_59_1(acc),
            [99, 99] => lookup_238_59_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_61_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_61_0(acc),
            [107, 49, 50] => lookup_238_61_1(acc),
            [99, 99] => lookup_238_61_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_62_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_62_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_62<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_62_0(acc),
            [107, 49, 50] => lookup_238_62_1(acc),
            [99, 99] => lookup_238_62_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_63_0(acc),
            [107, 49, 50] => lookup_238_63_1(acc),
            [99, 99] => lookup_238_63_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_64_0(acc),
            [107, 49, 50] => lookup_238_64_1(acc),
            [99, 99] => lookup_238_64_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_65_0(acc),
            [107, 49, 50] => lookup_238_65_1(acc),
            [99, 99] => lookup_238_65_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_67_0(acc),
            [107, 49, 50] => lookup_238_67_1(acc),
            [99, 99] => lookup_238_67_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_69_0(acc),
            [107, 49, 50] => lookup_238_69_1(acc),
            [99, 99] => lookup_238_69_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_70<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_238_70_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_238_72_0(acc),
            [107, 49, 50] => lookup_238_72_1(acc),
            [99, 99] => lookup_238_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 104] => lookup_238_0(labels, acc),
            [110, 118] => lookup_238_1(labels, acc),
            [109, 105] => lookup_238_2(labels, acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_238_3(acc),
            [109, 97] => lookup_238_4(labels, acc),
            [107, 105, 100, 115] => lookup_238_5(acc),
            [97, 107] => lookup_238_6(labels, acc),
            [105, 97] => lookup_238_7(labels, acc),
            [105, 110] => lookup_238_8(labels, acc),
            [115, 99] => lookup_238_9(labels, acc),
            [112, 108, 97, 116, 116, 101, 114, 112] => lookup_238_10(acc),
            [110, 109] => lookup_238_11(labels, acc),
            [111, 104] => lookup_238_12(labels, acc),
            [110, 101] => lookup_238_13(labels, acc),
            [109, 100] => lookup_238_14(labels, acc),
            [97, 108] => lookup_238_15(labels, acc),
            [116, 110] => lookup_238_16(labels, acc),
            [119, 97] => lookup_238_17(labels, acc),
            [119, 105] => lookup_238_18(labels, acc),
            [97, 122] => lookup_238_19(labels, acc),
            [111, 107] => lookup_238_20(labels, acc),
            [112, 114] => lookup_238_21(labels, acc),
            [118, 116] => lookup_238_22(labels, acc),
            [97, 114] => lookup_238_23(labels, acc),
            [109, 116] => lookup_238_24(labels, acc),
            [102, 101, 100] => lookup_238_25(acc),
            [100, 114, 117, 100] => lookup_238_26(acc),
            [118, 97] => lookup_238_27(labels, acc),
            [110, 100] => lookup_238_28(labels, acc),
            [110, 121] => lookup_238_29(labels, acc),
            [105, 115, 45, 98, 121] => lookup_238_30(acc),
            [108, 97, 110, 100, 45, 52, 45, 115, 97, 108, 101] => lookup_238_31(acc),
            [99, 111] => lookup_238_32(labels, acc),
            [112, 111, 105, 110, 116, 116, 111] => lookup_238_33(acc),
            [97, 115] => lookup_238_34(labels, acc),
            [104, 105] => lookup_238_35(labels, acc),
            [110, 99] => lookup_238_36(labels, acc),
            [110, 111, 105, 112] => lookup_238_37(acc),
            [105, 108] => lookup_238_38(labels, acc),
            [109, 111] => lookup_238_39(labels, acc),
            [108, 97] => lookup_238_40(labels, acc),
            [99, 116] => lookup_238_41(labels, acc),
            [118, 105] => lookup_238_42(labels, acc),
            [100, 110, 105] => lookup_238_43(acc),
            [107, 115] => lookup_238_44(labels, acc),
            [105, 115, 97] => lookup_238_45(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_238_46(acc),
            [100, 101] => lookup_238_47(labels, acc),
            [112, 97] => lookup_238_48(labels, acc),
            [117, 116] => lookup_238_49(labels, acc),
            [111, 114] => lookup_238_50(labels, acc),
            [103, 97] => lookup_238_51(labels, acc),
            [116, 120] => lookup_238_52(labels, acc),
            [109, 101] => lookup_238_53(labels, acc),
            [115, 100] => lookup_238_54(labels, acc),
            [119, 121] => lookup_238_55(labels, acc),
            [114, 105] => lookup_238_56(labels, acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_238_57(info, labels, acc),
            [110, 115, 110] => lookup_238_58(acc),
            [99, 97] => lookup_238_59(labels, acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_238_60(acc),
            [109, 110] => lookup_238_61(labels, acc),
            [103, 117] => lookup_238_62(labels, acc),
            [100, 99] => lookup_238_63(labels, acc),
            [105, 100] => lookup_238_64(labels, acc),
            [107, 121] => lookup_238_65(labels, acc),
            [103, 114, 97, 112, 104, 111, 120] => lookup_238_66(acc),
            [102, 108] => lookup_238_67(labels, acc),
            [103, 111, 108, 102, 102, 97, 110] => lookup_238_68(acc),
            [110, 106] => lookup_238_69(labels, acc),
            [119, 118] => lookup_238_70(labels, acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_238_71(acc),
            [109, 115] => lookup_238_72(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_239() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_242() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_243() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_245() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_248() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_249() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_250_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_250_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48] => lookup_250_0(acc),
            [98, 97, 114, 115, 121] => lookup_250_1(acc),
            [106] => lookup_250_2(acc),
            [51] => lookup_250_3(acc),
            [109] => lookup_250_4(acc),
            [113] => lookup_250_5(acc),
            [56] => lookup_250_6(acc),
            [57] => lookup_250_7(acc),
            [115] => lookup_250_8(acc),
            [112] => lookup_250_9(acc),
            [111] => lookup_250_10(acc),
            [54] => lookup_250_11(acc),
            [99] => lookup_250_12(acc),
            [53] => lookup_250_13(acc),
            [100] => lookup_250_14(acc),
            [50] => lookup_250_15(acc),
            [55] => lookup_250_16(acc),
            [110] => lookup_250_17(acc),
            [103] => lookup_250_18(acc),
            [97] => lookup_250_19(acc),
            [105] => lookup_250_20(acc),
            [101] => lookup_250_21(acc),
            [104] => lookup_250_22(acc),
            [107] => lookup_250_23(acc),
            [116] => lookup_250_24(acc),
            [122] => lookup_250_25(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_250_26(acc),
            [98] => lookup_250_27(acc),
            [49] => lookup_250_28(acc),
            [121] => lookup_250_29(acc),
            [118] => lookup_250_30(acc),
            [102] => lookup_250_31(acc),
            [120] => lookup_250_32(acc),
            [108] => lookup_250_33(acc),
            [114] => lookup_250_34(acc),
            [117] => lookup_250_35(acc),
            [52] => lookup_250_36(acc),
            [119] => lookup_250_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_251() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252() -> Info {
    Info {
        len: 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_255_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_256() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_260() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_265() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_266() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_267() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_269() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_270_0(acc),
            [103, 111, 98] => lookup_270_1(acc),
            [101, 100, 117] => lookup_270_2(acc),
            [109, 101, 100] => lookup_270_3(acc),
            [115, 108, 100] => lookup_270_4(acc),
            [110, 111, 109] => lookup_270_5(acc),
            [111, 114, 103] => lookup_270_6(acc),
            [99, 111, 109] => lookup_270_7(acc),
            [105, 110, 103] => lookup_270_8(acc),
            [97, 98, 111] => lookup_270_9(acc),
            [110, 101, 116] => lookup_270_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_271() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_273() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_274() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_275() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_276() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_278() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_279_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_279_0(acc),
            [101, 100, 117] => lookup_279_1(acc),
            [110, 97, 109, 101] => lookup_279_2(acc),
            [111, 114, 103] => lookup_279_3(acc),
            [99, 111, 109] => lookup_279_4(acc),
            [98, 105, 122] => lookup_279_5(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_279_6(acc),
            [110, 101, 116] => lookup_279_7(acc),
            [103, 111, 118] => lookup_279_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_280() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_283() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_284_0(acc),
            [101, 100, 117] => lookup_284_1(acc),
            [99, 111, 109] => lookup_284_2(acc),
            [103, 111, 118] => lookup_284_3(acc),
            [110, 101, 116] => lookup_284_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_285() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_286() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_287<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100, 105, 101] => lookup_287_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_288() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_290() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_298() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_301_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_301_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_301<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_301_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_301_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_302() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_308() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_310() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_313_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_313<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_313_0(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_313_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_314_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_314_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 100, 111, 110] => lookup_314_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_314<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112, 115] => lookup_314_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_315() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_316() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_317() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_318() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_320() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_321_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_321<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_321_0(acc),
            [103, 111, 118] => lookup_321_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_322_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_322<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_322_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_323_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_323<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_323_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_324() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_325() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_326_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_326_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_326_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_326_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_326_0(acc),
            [111, 114] => lookup_326_1(acc),
            [110, 111, 109] => lookup_326_2(acc),
            [115, 99] => lookup_326_3(acc),
            [103, 111] => lookup_326_4(acc),
            [105, 110, 102, 111] => lookup_326_5(acc),
            [109, 101] => lookup_326_6(acc),
            [99, 111] => lookup_326_7(labels, acc),
            [109, 111, 98, 105] => lookup_326_8(acc),
            [110, 101] => lookup_326_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_327() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_329_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_329_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_329_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_329_0(acc),
            [110, 111, 109] => lookup_329_1(acc),
            [99, 111, 109] => lookup_329_2(labels, acc),
            [103, 111, 98] => lookup_329_3(acc),
            [101, 100, 117] => lookup_329_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_330() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_331() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_332() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_333_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_333<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_333_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_334() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_338<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 117, 116, 101, 114] => lookup_338_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_339() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_340() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_341_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_341<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 97, 115, 116, 118, 112, 115] => lookup_341_0(acc),
            [112, 99, 108, 111, 117, 100] => lookup_341_1(acc),
            [106, 101, 108, 101] => lookup_341_2(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_341_3(acc),
            [116, 101, 109, 112, 117, 114, 108] => lookup_341_4(acc),
            [119, 112, 109, 117, 100, 101, 118] => lookup_341_5(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_341_6(acc),
            [102, 114, 101, 101, 115, 105, 116, 101] => lookup_341_7(acc),
            [104, 97, 108, 102] => lookup_341_8(acc),
            [109, 121, 102, 97, 115, 116] => lookup_341_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_342() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_344() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_347() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 104] => lookup_348_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_348_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_348_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_348_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_5_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_348_5_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_348_5_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_348_5_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_348_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [107, 117, 110, 100, 101, 110] => lookup_348_5_0(info, labels, acc),
            [101, 120] => lookup_348_5_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_348_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [119, 105, 101, 110] => lookup_348_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_348_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_12_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_12_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_348_12_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_348_12_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_12_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_348_12_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_348_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_348_12_1(info, labels, acc),
            [105, 110] => lookup_348_12_2(info, labels, acc),
            wild => lookup_348_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_348_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_348_0(labels, acc),
            [111, 114] => lookup_348_1(acc),
            [99, 111] => lookup_348_2(labels, acc),
            [98, 105, 122] => lookup_348_3(acc),
            [52, 108, 105, 109, 97] => lookup_348_4(acc),
            [111, 114, 116, 115, 105, 110, 102, 111] => lookup_348_5(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 109, 97, 105, 108, 105, 110, 103] => lookup_348_6(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_348_7(acc),
            [50, 105, 120] => lookup_348_8(acc),
            [102, 117, 110, 107, 102, 101, 117, 101, 114] => lookup_348_9(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 104, 111, 115, 116, 105, 110, 103] => lookup_348_10(acc),
            [103, 118] => lookup_348_11(acc),
            [102, 117, 116, 117, 114, 101, 99, 109, 115] => lookup_348_12(info, labels, acc),
            [105, 110, 102, 111] => lookup_348_13(acc),
            [112, 114, 105, 118] => lookup_348_14(acc),
            [49, 50, 104, 112] => lookup_348_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_349() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_352_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_352_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_352_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_352<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 112, 117, 116, 101] => lookup_352_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_353() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_355() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_356_0(acc),
            [110, 103, 111] => lookup_356_1(acc),
            [101, 100, 117] => lookup_356_2(acc),
            [105, 110, 116] => lookup_356_3(acc),
            [115, 111, 99] => lookup_356_4(acc),
            [108, 116, 100] => lookup_356_5(acc),
            [104, 111, 116, 101, 108] => lookup_356_6(acc),
            [99, 111, 109] => lookup_356_7(acc),
            [103, 111, 118] => lookup_356_8(acc),
            [103, 114, 112] => lookup_356_9(acc),
            [111, 114, 103] => lookup_356_10(acc),
            [97, 115, 115, 110] => lookup_356_11(acc),
            [119, 101, 98] => lookup_356_12(acc),
            [115, 99, 104] => lookup_356_13(acc),
            [110, 101, 116] => lookup_356_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_357() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_358() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 29usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 28usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 36usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 119, 105, 115, 104] => lookup_360_0(acc),
            [116, 101, 120, 116, 105, 108, 101] => lookup_360_1(acc),
            [99, 121, 109, 114, 117] => lookup_360_2(acc),
            [104, 111, 117, 115, 101] => lookup_360_3(acc),
            [107, 117, 110, 115, 116] => lookup_360_4(acc),
            [115, 117, 114, 103, 101, 111, 110, 115, 104, 97, 108, 108] => lookup_360_5(acc),
            [97, 115, 116, 114, 111, 110, 111, 109, 121] => lookup_360_6(acc),
            [106, 97, 109, 105, 115, 111, 110] => lookup_360_7(acc),
            [102, 114, 105, 98, 111, 117, 114, 103] => lookup_360_8(acc),
            [105, 114, 111, 110] => lookup_360_9(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_360_10(acc)
            }
            [102, 97, 109, 105, 108, 121] => lookup_360_11(acc),
            [109, 105, 99, 104, 105, 103, 97, 110] => lookup_360_12(acc),
            [115, 99, 104, 119, 101, 105, 122] => lookup_360_13(acc),
            [116, 104, 101, 97, 116, 101, 114] => lookup_360_14(acc),
            [97, 115, 115, 105, 115, 105] => lookup_360_15(acc),
            [115, 99, 104, 111, 107, 111, 108, 97, 100, 101, 110] => lookup_360_16(acc),
            [115, 117, 114, 114, 101, 121] => lookup_360_17(acc),
            [115, 116, 97, 108, 98, 97, 110, 115] => lookup_360_18(acc),
            [115, 99, 105, 101, 110, 99, 101, 115] => lookup_360_19(acc),
            [102, 114, 97, 110, 122, 105, 115, 107, 97, 110, 101, 114] => lookup_360_20(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108] => lookup_360_21(acc),
            [98, 101, 101, 108, 100, 101, 110, 103, 101, 108, 117, 105, 100] => lookup_360_22(acc),
            [98, 117, 114, 103, 104, 111, 102] => lookup_360_23(acc),
            [109, 97, 110, 115, 105, 111, 110] => lookup_360_24(acc),
            [105, 108, 108, 117, 115, 116, 114, 97, 116, 105, 111, 110] => lookup_360_25(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110, 97, 108] => lookup_360_26(acc),
            [105, 110, 100, 105, 97, 110] => lookup_360_27(acc),
            [104, 105, 115, 116, 111, 105, 114, 101] => lookup_360_28(acc),
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 97, 108, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 111, 110] => {
                lookup_360_29(acc)
            }
            [108, 97, 114, 115, 115, 111, 110] => lookup_360_30(acc),
            [215, 153, 215, 168, 215, 149, 215, 169, 215, 156, 215, 153, 215, 157] => {
                lookup_360_31(acc)
            }
            [101, 120, 101, 116, 101, 114] => lookup_360_32(acc),
            [98, 101, 114, 103, 98, 97, 117] => lookup_360_33(acc),
            [100, 97, 108, 105] => lookup_360_34(acc),
            [108, 97, 110, 99, 97, 115, 104, 105, 114, 101] => lookup_360_35(acc),
            [102, 105, 108, 109] => lookup_360_36(acc),
            [104, 101, 97, 108, 116, 104] => lookup_360_37(acc),
            [102, 114, 97, 110, 99, 97, 105, 115, 101] => lookup_360_38(acc),
            [103, 111, 114, 103, 101] => lookup_360_39(acc),
            [119, 105, 110, 100, 109, 105, 108, 108] => lookup_360_40(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 104, 101, 114, 105, 116, 97, 103, 101] => {
                lookup_360_41(acc)
            }
            [110, 114, 119] => lookup_360_42(acc),
            [110, 97, 116, 117, 114, 101] => lookup_360_43(acc),
            [106, 101, 119, 105, 115, 104, 97, 114, 116] => lookup_360_44(acc),
            [98, 97, 115, 101, 108] => lookup_360_45(acc),
            [109, 97, 114, 98, 117, 114, 103] => lookup_360_46(acc),
            [111, 110, 108, 105, 110, 101] => lookup_360_47(acc),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_360_48(acc),
            [105, 115, 108, 101, 111, 102, 109, 97, 110] => lookup_360_49(acc),
            [112, 104, 105, 108, 97, 116, 101, 108, 121] => lookup_360_50(acc),
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_360_51(acc)
            }
            [97, 110, 110, 101, 102, 114, 97, 110, 107] => lookup_360_52(acc),
            [102, 108, 97, 110, 100, 101, 114, 115] => lookup_360_53(acc),
            [115, 99, 104, 111, 111, 108] => lookup_360_54(acc),
            [116, 101, 108, 101, 107, 111, 109, 109, 117, 110, 105, 107, 97, 116, 105, 111, 110] => {
                lookup_360_55(acc)
            }
            [117, 104, 114, 101, 110] => lookup_360_56(acc),
            [104, 101, 109, 98, 121, 103, 100, 115, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_360_57(acc)
            }
            [109, 111, 100, 101, 114, 110] => lookup_360_58(acc),
            [117, 115, 97] => lookup_360_59(acc),
            [98, 105, 98, 108, 101] => lookup_360_60(acc),
            [104, 97, 109, 98, 117, 114, 103] => lookup_360_61(acc),
            [99, 104, 105, 99, 97, 103, 111] => lookup_360_62(acc),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_360_63(acc),
            [101, 97, 115, 116, 97, 102, 114, 105, 99, 97] => lookup_360_64(acc),
            [103, 101, 101, 108, 118, 105, 110, 99, 107] => lookup_360_65(acc),
            [105, 114, 97, 113] => lookup_360_66(acc),
            [115, 99, 104, 111, 101, 110, 98, 114, 117, 110, 110] => lookup_360_67(acc),
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114, 115] => {
                lookup_360_68(acc)
            }
            [115, 107, 111, 108, 101] => lookup_360_69(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110] => lookup_360_70(acc),
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97] => lookup_360_71(acc),
            [121, 111, 115, 101, 109, 105, 116, 101] => lookup_360_72(acc),
            [99, 104, 114, 105, 115, 116, 105, 97, 110, 115, 98, 117, 114, 103] => {
                lookup_360_73(acc)
            }
            [109, 97, 100] => lookup_360_74(acc),
            [98, 105, 114, 116, 104, 112, 108, 97, 99, 101] => lookup_360_75(acc),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_360_76(acc),
            [99, 97, 110, 97, 100, 97] => lookup_360_77(acc),
            [98, 111, 110, 110] => lookup_360_78(acc),
            [108, 105, 110, 99, 111, 108, 110] => lookup_360_79(acc),
            [97, 108, 97, 115, 107, 97] => lookup_360_80(acc),
            [99, 111, 114, 118, 101, 116, 116, 101] => lookup_360_81(acc),
            [115, 105, 98, 101, 110, 105, 107] => lookup_360_82(acc),
            [110, 121, 99] => lookup_360_83(acc),
            [98, 111, 116, 97, 110, 105, 99, 103, 97, 114, 100, 101, 110] => lookup_360_84(acc),
            [102, 105, 103, 117, 101, 114, 101, 115] => lookup_360_85(acc),
            [109, 111, 109, 97] => lookup_360_86(acc),
            [102, 111, 114, 99, 101] => lookup_360_87(acc),
            [114, 97, 105, 108, 114, 111, 97, 100] => lookup_360_88(acc),
            [110, 101, 117, 101, 115] => lookup_360_89(acc),
            [115, 97, 115, 107, 97, 116, 99, 104, 101, 119, 97, 110] => lookup_360_90(acc),
            [99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_360_91(acc)
            }
            [99, 111, 108, 111, 110, 105, 97, 108, 119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => {
                lookup_360_92(acc)
            }
            [117, 118, 105, 99] => lookup_360_93(acc),
            [102, 111, 114, 116, 119, 111, 114, 116, 104] => lookup_360_94(acc),
            [101, 108, 98, 117, 114, 103] => lookup_360_95(acc),
            [99, 104, 111, 99, 111, 108, 97, 116, 101] => lookup_360_96(acc),
            [116, 111, 112, 111, 108, 111, 103, 121] => lookup_360_97(acc),
            [119, 97, 115, 104, 105, 110, 103, 116, 111, 110, 100, 99] => lookup_360_98(acc),
            [97, 110, 116, 104, 114, 111, 112, 111, 108, 111, 103, 121] => lookup_360_99(acc),
            [115, 105, 108, 107] => lookup_360_100(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108] => lookup_360_101(acc),
            [110, 121, 110, 121] => lookup_360_102(acc),
            [114, 117, 115, 115, 105, 97] => lookup_360_103(acc),
            [97, 114, 116, 115] => lookup_360_104(acc),
            [115, 101, 97, 112, 111, 114, 116] => lookup_360_105(acc),
            [115, 97, 110, 116, 97, 98, 97, 114, 98, 97, 114, 97] => lookup_360_106(acc),
            [99, 111, 108, 100, 119, 97, 114] => lookup_360_107(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 99] => lookup_360_108(acc),
            [115, 116, 97, 116, 101, 111, 102, 100, 101, 108, 97, 119, 97, 114, 101] => {
                lookup_360_109(acc)
            }
            [116, 105, 109, 101] => lookup_360_110(acc),
            [100, 101, 116, 114, 111, 105, 116] => lookup_360_111(acc),
            [115, 111, 99, 105, 101, 116, 121] => lookup_360_112(acc),
            [117, 115, 100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_360_113(acc)
            }
            [98, 97, 108, 116, 105, 109, 111, 114, 101] => lookup_360_114(acc),
            [119, 111, 114, 107, 115, 104, 111, 112] => lookup_360_115(acc),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_360_116(acc),
            [122, 111, 111, 108, 111, 103, 121] => lookup_360_117(acc),
            [99, 114, 97, 110, 98, 114, 111, 111, 107] => lookup_360_118(acc),
            [118, 97, 108, 108, 101, 121] => lookup_360_119(acc),
            [111, 112, 101, 110, 97, 105, 114] => lookup_360_120(acc),
            [109, 111, 110, 116, 114, 101, 97, 108] => lookup_360_121(acc),
            [99, 105, 110, 99, 105, 110, 110, 97, 116, 105] => lookup_360_122(acc),
            [101, 115, 115, 101, 120] => lookup_360_123(acc),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_360_124(acc),
            [108, 111, 99, 97, 108, 104, 105, 115, 116, 111, 114, 121] => lookup_360_125(acc),
            [98, 114, 105, 116, 105, 115, 104, 99, 111, 108, 117, 109, 98, 105, 97] => {
                lookup_360_126(acc)
            }
            [110, 97, 116, 117, 114, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_360_127(acc)
            }
            [114, 111, 99, 104, 101, 115, 116, 101, 114] => lookup_360_128(acc),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_360_129(acc),
            [109, 105, 100, 97, 116, 108, 97, 110, 116, 105, 99] => lookup_360_130(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 104, 111, 117, 115, 101, 115] => {
                lookup_360_131(acc)
            }
            [115, 101, 116, 116, 108, 101, 114, 115] => lookup_360_132(acc),
            [208, 184, 208, 186, 208, 190, 208, 188] => lookup_360_133(acc),
            [97, 114, 116, 103, 97, 108, 108, 101, 114, 121] => lookup_360_134(acc),
            [100, 101, 108, 97, 119, 97, 114, 101] => lookup_360_135(acc),
            [99, 111, 108, 117, 109, 98, 105, 97] => lookup_360_136(acc),
            [98, 97, 103, 104, 100, 97, 100] => lookup_360_137(acc),
            [99, 111, 112, 101, 110, 104, 97, 103, 101, 110] => lookup_360_138(acc),
            [100, 100, 114] => lookup_360_139(acc),
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114] => lookup_360_140(acc),
            [101, 120, 104, 105, 98, 105, 116, 105, 111, 110] => lookup_360_141(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_360_142(acc),
            [115, 104, 101, 114, 98, 114, 111, 111, 107, 101] => lookup_360_143(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_360_144(acc),
            [97, 114, 116, 99, 101, 110, 116, 101, 114] => lookup_360_145(acc),
            [106, 101, 119, 101, 108, 114, 121] => lookup_360_146(acc),
            [109, 111, 110, 109, 111, 117, 116, 104] => lookup_360_147(acc),
            [100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_360_148(acc)
            }
            [101, 112, 105, 108, 101, 112, 115, 121] => lookup_360_149(acc),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_360_150(acc),
            [109, 111, 110, 116, 105, 99, 101, 108, 108, 111] => lookup_360_151(acc),
            [109, 117, 110, 99, 105, 101] => lookup_360_152(acc),
            [97, 120, 105, 115] => lookup_360_153(acc),
            [98, 114, 117, 120, 101, 108, 108, 101, 115] => lookup_360_154(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97] => lookup_360_155(acc),
            [109, 101, 100, 105, 99, 97, 108] => lookup_360_156(acc),
            [98, 97, 116, 104, 115] => lookup_360_157(acc),
            [100, 105, 115, 99, 111, 118, 101, 114, 121] => lookup_360_158(acc),
            [100, 97, 116, 97, 98, 97, 115, 101] => lookup_360_159(acc),
            [99, 114, 97, 102, 116, 115] => lookup_360_160(acc),
            [99, 111, 97, 115, 116, 97, 108, 100, 101, 102, 101, 110, 99, 101] => {
                lookup_360_161(acc)
            }
            [98, 114, 97, 110, 100, 121, 119, 105, 110, 101, 118, 97, 108, 108, 101, 121] => {
                lookup_360_162(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_360_163(acc)
            }
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 105, 99, 97, 108] => {
                lookup_360_164(acc)
            }
            [102, 105, 101, 108, 100] => lookup_360_165(acc),
            [117, 116, 97, 104] => lookup_360_166(acc),
            [118, 105, 114, 116, 117, 101, 108] => lookup_360_167(acc),
            [97, 114, 116] => lookup_360_168(acc),
            [98, 97, 108, 101] => lookup_360_169(acc),
            [112, 97, 108, 101, 111] => lookup_360_170(acc),
            [115, 99, 105, 101, 110, 99, 101, 115, 110, 97, 116, 117, 114, 101, 108, 108, 101, 115] => {
                lookup_360_171(acc)
            }
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_360_172(acc),
            [97, 110, 116, 104, 114, 111] => lookup_360_173(acc),
            [112, 117, 98, 111, 108] => lookup_360_174(acc),
            [106, 101, 114, 117, 115, 97, 108, 101, 109] => lookup_360_175(acc),
            [116, 101, 108, 101, 118, 105, 115, 105, 111, 110] => lookup_360_176(acc),
            [112, 117, 98, 108, 105, 99] => lookup_360_177(acc),
            [114, 97, 105, 108, 119, 97, 121] => lookup_360_178(acc),
            [118, 105, 108, 108, 97, 103, 101] => lookup_360_179(acc),
            [112, 105, 116, 116, 115, 98, 117, 114, 103, 104] => lookup_360_180(acc),
            [115, 97, 108, 101, 109] => lookup_360_181(acc),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_360_182(acc),
            [115, 97, 110, 116, 97, 102, 101] => lookup_360_183(acc),
            [102, 114, 101, 105, 98, 117, 114, 103] => lookup_360_184(acc),
            [98, 111, 115, 116, 111, 110] => lookup_360_185(acc),
            [112, 111, 115, 116, 115, 45, 97, 110, 100, 45, 116, 101, 108, 101, 99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_360_186(acc)
            }
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 115, 111, 99, 105, 101, 116, 121] => {
                lookup_360_187(acc)
            }
            [109, 97, 110, 115, 105, 111, 110, 115] => lookup_360_188(acc),
            [97, 114, 116, 115, 97, 110, 100, 99, 114, 97, 102, 116, 115] => lookup_360_189(acc),
            [98, 114, 117, 110, 101, 108] => lookup_360_190(acc),
            [115, 117, 105, 115, 115, 101] => lookup_360_191(acc),
            [115, 118, 105, 122, 122, 101, 114, 97] => lookup_360_192(acc),
            [117, 115, 104, 105, 115, 116, 111, 114, 121] => lookup_360_193(acc),
            [112, 97, 99, 105, 102, 105, 99] => lookup_360_194(acc),
            [112, 114, 111, 106, 101, 99, 116] => lookup_360_195(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115] => lookup_360_196(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115, 103, 97, 114, 100, 101, 110] => {
                lookup_360_197(acc)
            }
            [115, 97, 110, 100, 105, 101, 103, 111] => lookup_360_198(acc),
            [116, 105, 109, 101, 107, 101, 101, 112, 105, 110, 103] => lookup_360_199(acc),
            [113, 117, 101, 98, 101, 99] => lookup_360_200(acc),
            [115, 101, 116, 116, 108, 101, 109, 101, 110, 116] => lookup_360_201(acc),
            [121, 111, 114, 107] => lookup_360_202(acc),
            [103, 114, 97, 110, 100, 114, 97, 112, 105, 100, 115] => lookup_360_203(acc),
            [117, 115, 104, 117, 97, 105, 97] => lookup_360_204(acc),
            [111, 120, 102, 111, 114, 100] => lookup_360_205(acc),
            [104, 101, 105, 109, 97, 116, 117, 110, 100, 117, 104, 114, 101, 110] => {
                lookup_360_206(acc)
            }
            [98, 105, 108, 98, 97, 111] => lookup_360_207(acc),
            [102, 97, 114, 109, 101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_360_208(acc),
            [101, 110, 116, 111, 109, 111, 108, 111, 103, 121] => lookup_360_209(acc),
            [102, 97, 114, 109, 115, 116, 101, 97, 100] => lookup_360_210(acc),
            [105, 109, 97, 103, 101, 97, 110, 100, 115, 111, 117, 110, 100] => lookup_360_211(acc),
            [108, 111, 115, 97, 110, 103, 101, 108, 101, 115] => lookup_360_212(acc),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101] => lookup_360_213(acc),
            [109, 117, 108, 104, 111, 117, 115, 101] => lookup_360_214(acc),
            [110, 111, 114, 102, 111, 108, 107] => lookup_360_215(acc),
            [115, 99, 111, 116, 108, 97, 110, 100] => lookup_360_216(acc),
            [108, 111, 121, 97, 108, 105, 115, 116] => lookup_360_217(acc),
            [116, 97, 110, 107] => lookup_360_218(acc),
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116] => lookup_360_219(acc),
            [109, 97, 100, 114, 105, 100] => lookup_360_220(acc),
            [119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => lookup_360_221(acc),
            [119, 97, 108, 101, 115] => lookup_360_222(acc),
            [99, 108, 105, 110, 116, 111, 110] => lookup_360_223(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 110, 116, 105, 113, 117, 101, 115] => {
                lookup_360_224(acc)
            }
            [97, 117, 115, 116, 105, 110] => lookup_360_225(acc),
            [99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => lookup_360_226(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 114, 116] => lookup_360_227(acc),
            [97, 115, 115, 97, 115, 115, 105, 110, 97, 116, 105, 111, 110] => lookup_360_228(acc),
            [98, 97, 117, 101, 114, 110] => lookup_360_229(acc),
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121, 97, 114, 116] => {
                lookup_360_230(acc)
            }
            [120, 110, 45, 45, 99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 103, 104, 99, 50, 57, 97] => {
                lookup_360_231(acc)
            }
            [110, 101, 119, 112, 111, 114, 116] => lookup_360_232(acc),
            [116, 111, 117, 99, 104] => lookup_360_233(acc),
            [109, 117, 115, 101, 117, 109, 99, 101, 110, 116, 101, 114] => lookup_360_234(acc),
            [105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101] => lookup_360_235(acc),
            [109, 105, 115, 115, 111, 117, 108, 97] => lookup_360_236(acc),
            [117, 108, 109] => lookup_360_237(acc),
            [109, 105, 108, 105, 116, 97, 114, 121] => lookup_360_238(acc),
            [119, 104, 97, 108, 105, 110, 103] => lookup_360_239(acc),
            [116, 99, 109] => lookup_360_240(acc),
            [98, 117, 115] => lookup_360_241(acc),
            [99, 105, 118, 105, 108, 105, 122, 97, 116, 105, 111, 110] => lookup_360_242(acc),
            [119, 105, 108, 100, 108, 105, 102, 101] => lookup_360_243(acc),
            [98, 101, 114, 107, 101, 108, 101, 121] => lookup_360_244(acc),
            [99, 117, 108, 116, 117, 114, 97, 108] => lookup_360_245(acc),
            [97, 114, 116, 101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_360_246(acc),
            [99, 101, 108, 116, 105, 99] => lookup_360_247(acc),
            [98, 114, 97, 115, 105, 108] => lookup_360_248(acc),
            [101, 110, 99, 121, 99, 108, 111, 112, 101, 100, 105, 99] => lookup_360_249(acc),
            [114, 111, 99, 107, 97, 114, 116] => lookup_360_250(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108, 103, 97, 114, 100, 101, 110] => {
                lookup_360_251(acc)
            }
            [115, 116, 106, 111, 104, 110] => lookup_360_252(acc),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_360_253(acc),
            [119, 101, 115, 116, 101, 114, 110] => lookup_360_254(acc),
            [101, 115, 116, 97, 116, 101] => lookup_360_255(acc),
            [107, 117, 110, 115, 116, 117, 110, 100, 100, 101, 115, 105, 103, 110] => {
                lookup_360_256(acc)
            }
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104] => lookup_360_257(acc),
            [109, 117, 115, 101, 117, 109, 118, 101, 114, 101, 110, 105, 103, 105, 110, 103] => {
                lookup_360_258(acc)
            }
            [112, 97, 108, 109, 115, 112, 114, 105, 110, 103, 115] => lookup_360_259(acc),
            [107, 117, 110, 115, 116, 115, 97, 109, 109, 108, 117, 110, 103] => lookup_360_260(acc),
            [102, 97, 114, 109, 101, 114, 115] => lookup_360_261(acc),
            [108, 97, 110, 115] => lookup_360_262(acc),
            [115, 116, 97, 100, 116] => lookup_360_263(acc),
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_360_264(acc)
            }
            [103, 101, 111, 108, 111, 103, 121] => lookup_360_265(acc),
            [109, 101, 101, 114, 101, 115] => lookup_360_266(acc),
            [115, 97, 105, 110, 116, 108, 111, 117, 105, 115] => lookup_360_267(acc),
            [109, 111, 110, 101, 121] => lookup_360_268(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 113, 117, 101] => {
                lookup_360_269(acc)
            }
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_360_270(acc),
            [104, 105, 115, 116, 111, 114, 121] => lookup_360_271(acc),
            [103, 105, 101, 115, 115, 101, 110] => lookup_360_272(acc),
            [97, 103, 114, 105, 99, 117, 108, 116, 117, 114, 101] => lookup_360_273(acc),
            [99, 97, 115, 116, 114, 101, 115] => lookup_360_274(acc),
            [112, 114, 101, 115, 115] => lookup_360_275(acc),
            [98, 105, 114, 100, 97, 114, 116] => lookup_360_276(acc),
            [110, 101, 119, 115, 112, 97, 112, 101, 114] => lookup_360_277(acc),
            [97, 114, 116, 100, 101, 99, 111] => lookup_360_278(acc),
            [112, 111, 114, 116, 97, 108] => lookup_360_279(acc),
            [101, 109, 98, 114, 111, 105, 100, 101, 114, 121] => lookup_360_280(acc),
            [102, 105, 108, 97, 116, 101, 108, 105, 97] => lookup_360_281(acc),
            [118, 105, 107, 105, 110, 103] => lookup_360_282(acc),
            [103, 108, 97, 115] => lookup_360_283(acc),
            [111, 109, 97, 104, 97] => lookup_360_284(acc),
            [109, 97, 114, 105, 116, 105, 109, 101] => lookup_360_285(acc),
            [99, 111, 108, 108, 101, 99, 116, 105, 111, 110] => lookup_360_286(acc),
            [116, 114, 117, 115, 116] => lookup_360_287(acc),
            [105, 110, 100, 105, 97, 110, 97, 112, 111, 108, 105, 115] => lookup_360_288(acc),
            [117, 115, 108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_360_289(acc)
            }
            [106, 117, 100, 121, 103, 97, 114, 108, 97, 110, 100] => lookup_360_290(acc),
            [115, 107, 105] => lookup_360_291(acc),
            [119, 97, 114] => lookup_360_292(acc),
            [108, 101, 119, 105, 115, 109, 105, 108, 108, 101, 114] => lookup_360_293(acc),
            [99, 111, 100, 121] => lookup_360_294(acc),
            [104, 117, 109, 97, 110, 105, 116, 105, 101, 115] => lookup_360_295(acc),
            [99, 97, 114, 114, 105, 101, 114] => lookup_360_296(acc),
            [110, 97, 116, 117, 114, 97, 108, 115, 99, 105, 101, 110, 99, 101, 115] => {
                lookup_360_297(acc)
            }
            [98, 114, 105, 116, 105, 115, 104] => lookup_360_298(acc),
            [115, 111, 117, 116, 104, 119, 101, 115, 116] => lookup_360_299(acc),
            [115, 97, 108, 118, 97, 100, 111, 114, 100, 97, 108, 105] => lookup_360_300(acc),
            [97, 110, 116, 105, 113, 117, 101, 115] => lookup_360_301(acc),
            [102, 108, 111, 114, 105, 100, 97] => lookup_360_302(acc),
            [108, 97, 98, 111, 117, 114] => lookup_360_303(acc),
            [110, 101, 119, 104, 97, 109, 112, 115, 104, 105, 114, 101] => lookup_360_304(acc),
            [100, 111, 108, 108, 115] => lookup_360_305(acc),
            [112, 114, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110] => lookup_360_306(acc),
            [110, 97, 118, 97, 108] => lookup_360_307(acc),
            [115, 121, 100, 110, 101, 121] => lookup_360_308(acc),
            [99, 121, 98, 101, 114] => lookup_360_309(acc),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_360_310(acc),
            [102, 114, 111, 103] => lookup_360_311(acc),
            [109, 97, 114, 105, 116, 105, 109, 111] => lookup_360_312(acc),
            [112, 97, 100, 101, 114, 98, 111, 114, 110] => lookup_360_313(acc),
            [106, 117, 105, 102] => lookup_360_314(acc),
            [109, 117, 115, 101, 101, 116] => lookup_360_315(acc),
            [112, 111, 114, 116, 108, 108, 105, 103, 97, 116] => lookup_360_316(acc),
            [115, 111, 117, 110, 100, 97, 110, 100, 118, 105, 115, 105, 111, 110] => {
                lookup_360_317(acc)
            }
            [110, 97, 116, 105, 111, 110, 97, 108] => lookup_360_318(acc),
            [122, 111, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_360_319(acc),
            [119, 101, 115, 116, 102, 97, 108, 101, 110] => lookup_360_320(acc),
            [99, 97, 112, 101, 98, 114, 101, 116, 111, 110] => lookup_360_321(acc),
            [99, 97, 110] => lookup_360_322(acc),
            [97, 109, 98, 101, 114] => lookup_360_323(acc),
            [120, 110, 45, 45, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 118, 54, 97, 50, 111] => {
                lookup_360_324(acc)
            }
            [104, 101, 114, 105, 116, 97, 103, 101] => lookup_360_325(acc),
            [109, 105, 110, 105, 110, 103] => lookup_360_326(acc),
            [121, 111, 117, 116, 104] => lookup_360_327(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_360_328(acc),
            [115, 116, 101, 97, 109] => lookup_360_329(acc),
            [114, 101, 115, 105, 115, 116, 97, 110, 99, 101] => lookup_360_330(acc),
            [97, 117, 115, 116, 114, 97, 108, 105, 97] => lookup_360_331(acc),
            [110, 97, 116, 117, 117, 114, 119, 101, 116, 101, 110, 115, 99, 104, 97, 112, 112, 101, 110] => {
                lookup_360_332(acc)
            }
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => lookup_360_333(acc),
            [99, 97, 115, 116, 108, 101] => lookup_360_334(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116] => lookup_360_335(acc),
            [108, 117, 122, 101, 114, 110] => lookup_360_336(acc),
            [97, 99, 97, 100, 101, 109, 121] => lookup_360_337(acc),
            [102, 105, 110, 108, 97, 110, 100] => lookup_360_338(acc),
            [115, 97, 118, 97, 110, 110, 97, 104, 103, 97] => lookup_360_339(acc),
            [110, 111, 114, 116, 104] => lookup_360_340(acc),
            [99, 97, 109, 98, 114, 105, 100, 103, 101] => lookup_360_341(acc),
            [99, 111, 114, 112, 111, 114, 97, 116, 105, 111, 110] => lookup_360_342(acc),
            [109, 117, 101, 110, 115, 116, 101, 114] => lookup_360_343(acc),
            [98, 101, 97, 117, 120, 97, 114, 116, 115] => lookup_360_344(acc),
            [106, 101, 102, 102, 101, 114, 115, 111, 110] => lookup_360_345(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_360_346(acc),
            [98, 114, 105, 115, 116, 111, 108] => lookup_360_347(acc),
            [115, 112, 121] => lookup_360_348(acc),
            [99, 111, 110, 118, 101, 110, 116] => lookup_360_349(acc),
            [112, 97, 114, 105, 115] => lookup_360_350(acc),
            [116, 114, 111, 108, 108, 101, 121] => lookup_360_351(acc),
            [101, 105, 115, 101, 110, 98, 97, 104, 110] => lookup_360_352(acc),
            [99, 97, 114, 116, 111, 111, 110, 97, 114, 116] => lookup_360_353(acc),
            [117, 115, 97, 114, 116, 115] => lookup_360_354(acc),
            [118, 97, 110, 116, 97, 97] => lookup_360_355(acc),
            [109, 97, 110, 120] => lookup_360_356(acc),
            [109, 101, 100, 105, 122, 105, 110, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_360_357(acc)
            }
            [115, 99, 105, 101, 110, 99, 101] => lookup_360_358(acc),
            [103, 101, 109, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_360_359(acc),
            [98, 117, 105, 108, 100, 105, 110, 103] => lookup_360_360(acc),
            [98, 101, 114, 110] => lookup_360_361(acc),
            [98, 101, 114, 108, 105, 110] => lookup_360_362(acc),
            [107, 111, 101, 108, 110] => lookup_360_363(acc),
            [97, 113, 117, 97, 114, 105, 117, 109] => lookup_360_364(acc),
            [99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_360_365(acc)
            }
            [120, 110, 45, 45, 104, 49, 97, 101, 103, 104] => lookup_360_366(acc),
            [107, 111, 101, 98, 101, 110, 104, 97, 118, 110] => lookup_360_367(acc),
            [104, 101, 108, 108, 97, 115] => lookup_360_368(acc),
            [99, 104, 97, 116, 116, 97, 110, 111, 111, 103, 97] => lookup_360_369(acc),
            [109, 105, 115, 115, 105, 108, 101] => lookup_360_370(acc),
            [109, 101, 115, 97, 118, 101, 114, 100, 101] => lookup_360_371(acc),
            [102, 97, 114, 109] => lookup_360_372(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 102, 105, 114, 101, 97, 114, 109, 115] => {
                lookup_360_373(acc)
            }
            [118, 105, 114, 103, 105, 110, 105, 97] => lookup_360_374(acc),
            [115, 97, 110, 116, 97, 99, 114, 117, 122] => lookup_360_375(acc),
            [102, 105, 110, 101, 97, 114, 116, 115] => lookup_360_376(acc),
            [111, 116, 97, 103, 111] => lookup_360_377(acc),
            [110, 101, 119, 121, 111, 114, 107] => lookup_360_378(acc),
            [100, 101, 112, 111, 116] => lookup_360_379(acc),
            [97, 108, 97, 98, 97, 109, 97] => lookup_360_380(acc),
            [109, 105, 108, 108] => lookup_360_381(acc),
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 105, 110, 100, 117, 115, 116, 114, 121] => {
                lookup_360_382(acc)
            }
            [115, 116, 97, 116, 105, 111, 110] => lookup_360_383(acc),
            [108, 111, 110, 100, 111, 110] => lookup_360_384(acc),
            [109, 101, 100, 105, 97] => lookup_360_385(acc),
            [103, 97, 114, 100, 101, 110] => lookup_360_386(acc),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_360_387(acc),
            [108, 105, 110, 122] => lookup_360_388(acc),
            [97, 114, 99, 104, 105, 116, 101, 99, 116, 117, 114, 101] => lookup_360_389(acc),
            [112, 111, 114, 116, 108, 97, 110, 100] => lookup_360_390(acc),
            [104, 97, 110, 100, 115, 111, 110] => lookup_360_391(acc),
            [117, 115, 99, 117, 108, 116, 117, 114, 101] => lookup_360_392(acc),
            [109, 97, 114, 121, 108, 97, 110, 100] => lookup_360_393(acc),
            [97, 110, 100] => lookup_360_394(acc),
            [100, 101, 115, 105, 103, 110] => lookup_360_395(acc),
            [102, 114, 101, 101, 109, 97, 115, 111, 110, 114, 121] => lookup_360_396(acc),
            [101, 97, 115, 116, 99, 111, 97, 115, 116] => lookup_360_397(acc),
            [104, 97, 108, 108, 111, 102, 102, 97, 109, 101] => lookup_360_398(acc),
            [105, 110, 100, 105, 97, 110, 97] => lookup_360_399(acc),
            [111, 114, 101, 103, 111, 110] => lookup_360_400(acc),
            [103, 97, 108, 108, 101, 114, 121] => lookup_360_401(acc),
            [119, 97, 116, 99, 104, 45, 97, 110, 100, 45, 99, 108, 111, 99, 107] => {
                lookup_360_402(acc)
            }
            [99, 111, 108, 117, 109, 98, 117, 115] => lookup_360_403(acc),
            [110, 97, 117, 109, 98, 117, 114, 103] => lookup_360_404(acc),
            [110, 105, 101, 112, 99, 101] => lookup_360_405(acc),
            [112, 108, 97, 110, 101, 116, 97, 114, 105, 117, 109] => lookup_360_406(acc),
            [97, 105, 114, 103, 117, 97, 114, 100] => lookup_360_407(acc),
            [108, 117, 99, 101, 114, 110, 101] => lookup_360_408(acc),
            [112, 97, 115, 97, 100, 101, 110, 97] => lookup_360_409(acc),
            [99, 111, 117, 110, 116, 121] => lookup_360_410(acc),
            [115, 112, 97, 99, 101] => lookup_360_411(acc),
            [110, 101, 98, 114, 97, 115, 107, 97] => lookup_360_412(acc),
            [97, 116, 108, 97, 110, 116, 97] => lookup_360_413(acc),
            [114, 111, 109, 97] => lookup_360_414(acc),
            [116, 101, 120, 97, 115] => lookup_360_415(acc),
            [111, 110, 116, 97, 114, 105, 111] => lookup_360_416(acc),
            [108, 97, 106, 111, 108, 108, 97] => lookup_360_417(acc),
            [115, 111, 108, 111, 103, 110, 101] => lookup_360_418(acc),
            [115, 113, 117, 97, 114, 101] => lookup_360_419(acc),
            [116, 114, 101, 101] => lookup_360_420(acc),
            [98, 117, 115, 104, 101, 121] => lookup_360_421(acc),
            [99, 97, 115, 97, 100, 101, 108, 97, 109, 111, 110, 101, 100, 97] => {
                lookup_360_422(acc)
            }
            [108, 97, 110, 100, 101, 115] => lookup_360_423(acc),
            [109, 117, 115, 105, 99] => lookup_360_424(acc),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_360_425(acc),
            [99, 111, 97, 108] => lookup_360_426(acc),
            [107, 105, 100, 115] => lookup_360_427(acc),
            [110, 97, 116, 105, 118, 101, 97, 109, 101, 114, 105, 99, 97, 110] => {
                lookup_360_428(acc)
            }
            [108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_360_429(acc)
            }
            [115, 116, 112, 101, 116, 101, 114, 115, 98, 117, 114, 103] => lookup_360_430(acc),
            [99, 105, 118, 105, 108, 105, 115, 97, 116, 105, 111, 110] => lookup_360_431(acc),
            [100, 105, 110, 111, 115, 97, 117, 114] => lookup_360_432(acc),
            [116, 114, 117, 115, 116, 101, 101] => lookup_360_433(acc),
            [108, 105, 118, 105, 110, 103] => lookup_360_434(acc),
            [109, 97, 114, 121, 108, 104, 117, 114, 115, 116] => lookup_360_435(acc),
            [118, 111, 108, 107, 101, 110, 107, 117, 110, 100, 101] => lookup_360_436(acc),
            [97, 105, 114] => lookup_360_437(acc),
            [109, 105, 110, 101, 114, 115] => lookup_360_438(acc),
            [115, 99, 104, 108, 101, 115, 105, 115, 99, 104, 101, 115] => lookup_360_439(acc),
            [109, 111, 115, 99, 111, 119] => lookup_360_440(acc),
            [117, 115, 99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => {
                lookup_360_441(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 45, 102, 105, 99, 116, 105, 111, 110] => {
                lookup_360_442(acc)
            }
            [104, 97, 114, 118, 101, 115, 116, 99, 101, 108, 101, 98, 114, 97, 116, 105, 111, 110] => {
                lookup_360_443(acc)
            }
            [115, 116, 97, 114, 110, 98, 101, 114, 103] => lookup_360_444(acc),
            [115, 116, 101, 105, 101, 114, 109, 97, 114, 107] => lookup_360_445(acc),
            [99, 117, 108, 116, 117, 114, 97, 108, 99, 101, 110, 116, 101, 114] => {
                lookup_360_446(acc)
            }
            [99, 111, 115, 116, 117, 109, 101] => lookup_360_447(acc),
            [99, 111, 108, 111, 114, 97, 100, 111, 112, 108, 97, 116, 101, 97, 117] => {
                lookup_360_448(acc)
            }
            [101, 116, 104, 110, 111, 108, 111, 103, 121] => lookup_360_449(acc),
            [107, 97, 114, 97, 116, 101] => lookup_360_450(acc),
            [109, 97, 110, 99, 104, 101, 115, 116, 101, 114] => lookup_360_451(acc),
            [112, 108, 97, 122, 97] => lookup_360_452(acc),
            [97, 115, 109, 97, 116, 97, 114, 116] => lookup_360_453(acc),
            [116, 111, 114, 105, 110, 111] => lookup_360_454(acc),
            [97, 118, 105, 97, 116, 105, 111, 110] => lookup_360_455(acc),
            [102, 105, 110, 101, 97, 114, 116] => lookup_360_456(acc),
            [104, 105, 115, 116, 111, 114, 121, 111, 102, 115, 99, 105, 101, 110, 99, 101] => {
                lookup_360_457(acc)
            }
            [98, 114, 111, 97, 100, 99, 97, 115, 116] => lookup_360_458(acc),
            [102, 117, 110, 100, 97, 99, 105, 111] => lookup_360_459(acc),
            [99, 104, 101, 108, 116, 101, 110, 104, 97, 109] => lookup_360_460(acc),
            [99, 105, 118, 105, 108, 119, 97, 114] => lookup_360_461(acc),
            [100, 117, 114, 104, 97, 109] => lookup_360_462(acc),
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97, 97, 114, 101, 97] => {
                lookup_360_463(acc)
            }
            [115, 116, 97, 116, 101] => lookup_360_464(acc),
            [115, 104, 101, 108, 108] => lookup_360_465(acc),
            [119, 97, 108, 108, 111, 110, 105, 101] => lookup_360_466(acc),
            [108, 111, 117, 118, 114, 101] => lookup_360_467(acc),
            [103, 108, 97, 115, 115] => lookup_360_468(acc),
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121, 109, 117, 115, 101, 117, 109] => {
                lookup_360_469(acc)
            }
            [115, 116, 117, 116, 116, 103, 97, 114, 116] => lookup_360_470(acc),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_360_471(acc),
            [105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => lookup_360_472(acc),
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 121] => lookup_360_473(acc),
            [99, 104, 105, 114, 111, 112, 114, 97, 99, 116, 105, 99] => lookup_360_474(acc),
            [98, 97, 100, 97, 106, 111, 122] => lookup_360_475(acc),
            [98, 111, 116, 97, 110, 121] => lookup_360_476(acc),
            [109, 105, 110, 110, 101, 115, 111, 116, 97] => lookup_360_477(acc),
            [115, 111, 117, 116, 104, 99, 97, 114, 111, 108, 105, 110, 97] => lookup_360_478(acc),
            [99, 111, 109, 112, 117, 116, 101, 114, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_360_479(acc)
            }
            [116, 111, 119, 110] => lookup_360_480(acc),
            [99, 114, 101, 97, 116, 105, 111, 110] => lookup_360_481(acc),
            [108, 117, 120, 101, 109, 98, 111, 117, 114, 103] => lookup_360_482(acc),
            [120, 110, 45, 45, 57, 100, 98, 104, 98, 108, 103, 54, 100, 105] => lookup_360_483(acc),
            [118, 101, 114, 115, 97, 105, 108, 108, 101, 115] => lookup_360_484(acc),
            [112, 105, 108, 111, 116, 115] => lookup_360_485(acc),
            [101, 108, 118, 101, 110, 100, 114, 101, 108, 108] => lookup_360_486(acc),
            [104, 97, 119, 97, 105, 105] => lookup_360_487(acc),
            [117, 115, 97, 110, 116, 105, 113, 117, 101, 115] => lookup_360_488(acc),
            [118, 105, 114, 116, 117, 97, 108] => lookup_360_489(acc),
            [109, 117, 101, 110, 99, 104, 101, 110] => lookup_360_490(acc),
            [103, 117, 101, 114, 110, 115, 101, 121] => lookup_360_491(acc),
            [100, 111, 110, 111, 115, 116, 105, 97] => lookup_360_492(acc),
            [112, 97, 108, 97, 99, 101] => lookup_360_493(acc),
            [121, 111, 114, 107, 115, 104, 105, 114, 101] => lookup_360_494(acc),
            [117, 115, 103, 97, 114, 100, 101, 110] => lookup_360_495(acc),
            [104, 111, 114, 111, 108, 111, 103, 121] => lookup_360_496(acc),
            [115, 97, 108, 122, 98, 117, 114, 103] => lookup_360_497(acc),
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121] => lookup_360_498(acc),
            [99, 108, 111, 99, 107] => lookup_360_499(acc),
            [101, 110, 103, 108, 97, 110, 100] => lookup_360_500(acc),
            [100, 101, 108, 109, 101, 110, 104, 111, 114, 115, 116] => lookup_360_501(acc),
            [107, 97, 114, 105, 107, 97, 116, 117, 114] => lookup_360_502(acc),
            [119, 97, 116, 99, 104, 97, 110, 100, 99, 108, 111, 99, 107] => lookup_360_503(acc),
            [97, 114, 98, 111, 114, 101, 116, 117, 109] => lookup_360_504(acc),
            [110, 101, 119, 109, 101, 120, 105, 99, 111] => lookup_360_505(acc),
            [111, 114, 101, 103, 111, 110, 116, 114, 97, 105, 108] => lookup_360_506(acc),
            [98, 105, 108, 108] => lookup_360_507(acc),
            [99, 97, 100, 97, 113, 117, 101, 115] => lookup_360_508(acc),
            [115, 97, 110, 102, 114, 97, 110, 99, 105, 115, 99, 111] => lookup_360_509(acc),
            [115, 119, 101, 100, 101, 110] => lookup_360_510(acc),
            [97, 109, 101, 114, 105, 99, 97, 110] => lookup_360_511(acc),
            [99, 105, 110, 101, 109, 97] => lookup_360_512(acc),
            [108, 195, 164, 110, 115] => lookup_360_513(acc),
            [98, 101, 108, 108, 101, 118, 117, 101] => lookup_360_514(acc),
            [101, 103, 121, 112, 116, 105, 97, 110] => lookup_360_515(acc),
            [105, 110, 100, 105, 97, 110, 109, 97, 114, 107, 101, 116] => lookup_360_516(acc),
            [115, 97, 116, 120] => lookup_360_517(acc),
            [112, 97, 110, 97, 109, 97] => lookup_360_518(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_360_519(acc),
            [99, 104, 105, 108, 100, 114, 101, 110] => lookup_360_520(acc),
            [106, 117, 101, 100, 105, 115, 99, 104, 101, 115] => lookup_360_521(acc),
            [112, 108, 97, 110, 116, 115] => lookup_360_522(acc),
            [112, 108, 97, 110, 116, 97, 116, 105, 111, 110] => lookup_360_523(acc),
            [109, 97, 108, 108, 111, 114, 99, 97] => lookup_360_524(acc),
            [97, 117, 116, 111, 109, 111, 116, 105, 118, 101] => lookup_360_525(acc),
            [100, 97, 108, 108, 97, 115] => lookup_360_526(acc),
            [106, 117, 100, 97, 105, 99, 97] => lookup_360_527(acc),
            [108, 97, 98, 111, 114] => lookup_360_528(acc),
            [99, 101, 110, 116, 101, 114] => lookup_360_529(acc),
            [102, 114, 97, 110, 107, 102, 117, 114, 116] => lookup_360_530(acc),
            [112, 104, 111, 101, 110, 105, 120] => lookup_360_531(acc),
            [99, 117, 108, 116, 117, 114, 101] => lookup_360_532(acc),
            [106, 102, 107] => lookup_360_533(acc),
            [98, 97, 104, 110] => lookup_360_534(acc),
            [110, 101, 119, 106, 101, 114, 115, 101, 121] => lookup_360_535(acc),
            [97, 114, 116, 97, 110, 100, 100, 101, 115, 105, 103, 110] => lookup_360_536(acc),
            [99, 97, 108, 105, 102, 111, 114, 110, 105, 97] => lookup_360_537(acc),
            [100, 101, 110, 109, 97, 114, 107] => lookup_360_538(acc),
            [102, 111, 114, 116, 109, 105, 115, 115, 111, 117, 108, 97] => lookup_360_539(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_360_540(acc),
            [99, 105, 114, 99, 117, 115] => lookup_360_541(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 109] => lookup_360_542(acc),
            [120, 110, 45, 45, 108, 110, 115, 45, 113, 108, 97] => lookup_360_543(acc),
            [103, 114, 97, 122] => lookup_360_544(acc),
            [117, 110, 100, 101, 114, 115, 101, 97] => lookup_360_545(acc),
            [99, 104, 101, 115, 97, 112, 101, 97, 107, 101, 98, 97, 121] => lookup_360_546(acc),
            [112, 114, 101, 115, 105, 100, 105, 111] => lookup_360_547(acc),
            [114, 105, 111, 100, 101, 106, 97, 110, 101, 105, 114, 111] => lookup_360_548(acc),
            [98, 114, 117, 115, 115, 101, 108] => lookup_360_549(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_360_550(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_361() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_364() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_366() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_367() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_370() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_371() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_372_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_372_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_372_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99] => lookup_372_0(acc),
            [112, 101, 114] => lookup_372_1(acc),
            [105, 110, 116] => lookup_372_2(acc),
            [101, 100, 117] => lookup_372_3(acc),
            [105, 110, 102, 111] => lookup_372_4(acc),
            [110, 121, 109] => lookup_372_5(acc),
            [111, 114, 103] => lookup_372_6(acc),
            [99, 111, 109] => lookup_372_7(acc),
            [98, 110, 114] => lookup_372_8(acc),
            [110, 101, 116] => lookup_372_9(acc),
            [103, 111, 118] => lookup_372_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_373() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_375_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_375_0(acc),
            [99, 111, 109] => lookup_375_1(acc),
            [101, 100, 117] => lookup_375_2(acc),
            [110, 111, 109] => lookup_375_3(acc),
            [103, 111, 118] => lookup_375_4(acc),
            [110, 101, 116] => lookup_375_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_376() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_377() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_379() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_382() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_383() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_385() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_388_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_388_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_388_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_388_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_388_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_388_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_388_0(acc),
            [100, 111, 103, 97, 100, 111] => lookup_388_1(info, labels, acc),
            [109, 121, 99, 100] => lookup_388_2(acc),
            [108, 101, 118, 105, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_388_3(info, labels, acc)
            }
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_388_4(info, labels, acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_388_5(acc),
            [115, 112, 100, 110, 115] => lookup_388_6(acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_388_7(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_388_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_389() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_391() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_393_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_393<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_393_0(acc),
            [101, 100, 117] => lookup_393_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_394_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_394_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_394_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_394_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_394_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_394_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 122, 112, 114, 111, 120, 121] => lookup_394_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_394_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_394_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_394_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_394_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_394_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_394<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_394_0(acc),
            [105, 110, 116, 101, 114, 104, 111, 115, 116, 115, 111, 108, 117, 116, 105, 111, 110, 115] => {
                lookup_394_1(info, labels, acc)
            }
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_394_2(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_394_3(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_394_4(info, labels, acc),
            [119, 101, 98, 104, 111, 115, 116, 105, 110, 103] => lookup_394_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_395() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_396() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_398() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_399_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_399_0(acc),
            [99, 111, 109] => lookup_399_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_399_2(acc),
            [97, 115, 115, 111] => lookup_399_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_400() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_402_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_402<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_402_0(acc),
            [101, 100, 117] => lookup_402_1(acc),
            [110, 121, 109] => lookup_402_2(acc),
            [103, 111, 118] => lookup_402_3(acc),
            [110, 121, 99] => lookup_402_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_403() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_404() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_405() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_407() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_408() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_409() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 49, 54, 52] => lookup_410_0(acc),
            [105, 110, 45, 97, 100, 100, 114] => lookup_410_1(acc),
            [105, 114, 105, 115] => lookup_410_2(acc),
            [117, 114, 105] => lookup_410_3(acc),
            [117, 114, 110] => lookup_410_4(acc),
            [105, 112, 54] => lookup_410_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_411() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_413() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_415() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_416() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_418_0(acc),
            [112, 114, 101, 115, 115] => lookup_418_1(acc),
            [99, 111] => lookup_418_2(acc),
            [111, 114, 103] => lookup_418_3(acc),
            [103, 111, 118] => lookup_418_4(acc),
            [110, 101, 116] => lookup_418_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_419() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_420() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_424() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_426_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_426<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_426_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_427() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_428() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_429() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_431() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_432() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_435() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_436_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_437() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_439() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_440() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_441() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_442() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_444() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_447() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_448_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_448_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_448_0(acc),
            [111, 114, 103] => lookup_448_1(acc),
            [101, 100, 117] => lookup_448_2(acc),
            [99, 111, 109] => lookup_448_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_448_4(acc),
            [110, 101, 116] => lookup_448_5(acc),
            [103, 111, 118] => lookup_448_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_449() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_452() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_453() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_455_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_455_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_455_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_455_0(acc),
            [101, 100, 117] => lookup_455_1(acc),
            [103, 111, 98] => lookup_455_2(acc),
            [105, 110, 116] => lookup_455_3(acc),
            [111, 114, 103] => lookup_455_4(acc),
            [109, 117, 115, 105, 99, 97] => lookup_455_5(acc),
            [99, 111, 109] => lookup_455_6(labels, acc),
            [116, 117, 114] => lookup_455_7(acc),
            [103, 111, 118] => lookup_455_8(acc),
            [110, 101, 116] => lookup_455_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_456() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_457() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_459() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_461_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_461_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_461_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_461<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_461_0(acc),
            [110, 111, 109] => lookup_461_1(acc),
            [103, 105, 116, 97, 112, 112] => lookup_461_2(acc),
            [103, 105, 116, 112, 97, 103, 101] => lookup_461_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_462() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_464() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_470_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_470_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_470_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_470_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_470_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_470<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 117, 110] => lookup_470_0(labels, acc),
            [110, 111, 114, 116, 104, 102, 108, 97, 110, 107] => lookup_470_1(info, labels, acc),
            [101, 100, 103, 101, 99, 111, 109, 112, 117, 116, 101] => lookup_470_2(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_470_3(acc),
            [118, 101, 114, 99, 101, 108] => lookup_470_4(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 48] => lookup_470_5(acc),
            [102, 114, 97, 109, 101, 114] => lookup_470_6(acc),
            [111, 110, 100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110] => {
                lookup_470_7(acc)
            }
            [110, 101, 116, 108, 105, 102, 121] => lookup_470_8(acc),
            [119, 110, 101, 120, 116] => lookup_470_9(acc),
            [104, 97, 115, 117, 114, 97] => lookup_470_10(acc),
            [119, 101, 98] => lookup_470_11(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_470_12(acc),
            [102, 105, 114, 101, 119, 101, 98] => lookup_470_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_471() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_473_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_473_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_473_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_473_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_473_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_473_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 118] => lookup_473_0(acc),
            [105, 111] => lookup_473_1(acc),
            [109, 105, 108] => lookup_473_2(acc),
            [101, 100, 117] => lookup_473_3(acc),
            [117, 107] => lookup_473_4(acc),
            [117, 115] => lookup_473_5(acc),
            [98, 108, 111, 103] => lookup_473_6(acc),
            [111, 114, 103] => lookup_473_7(acc),
            [99, 111, 109] => lookup_473_8(acc),
            [106, 112] => lookup_473_9(acc),
            [110, 101, 116] => lookup_473_10(acc),
            [103, 111, 118] => lookup_473_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_474() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_475() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476() -> Info {
    Info {
        len: 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_478_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_478_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_478_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_478<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 107, 111] => lookup_478_0(acc),
            [110, 121, 97, 97] => lookup_478_1(acc),
            [114, 97, 100, 105, 111] => lookup_478_2(acc),
            [99, 111] => lookup_478_3(acc),
            [99, 111, 109, 109, 117, 110, 101] => lookup_478_4(acc),
            [99, 111, 109] => lookup_478_5(acc),
            [111, 114, 103] => lookup_478_6(acc),
            [110, 101, 116] => lookup_478_7(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_478_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_479() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_480_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_480_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_480_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_480_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_480_0(acc),
            [109, 196, 129, 111, 114, 105] => lookup_480_1(acc),
            [103, 101, 101, 107] => lookup_480_2(acc),
            [103, 101, 110] => lookup_480_3(acc),
            [109, 97, 111, 114, 105] => lookup_480_4(acc),
            [120, 110, 45, 45, 109, 111, 114, 105, 45, 113, 115, 97] => lookup_480_5(acc),
            [99, 111] => lookup_480_6(labels, acc),
            [99, 114, 105] => lookup_480_7(acc),
            [105, 119, 105] => lookup_480_8(acc),
            [107, 105, 119, 105] => lookup_480_9(acc),
            [103, 111, 118, 116] => lookup_480_10(acc),
            [104, 101, 97, 108, 116, 104] => lookup_480_11(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_480_12(acc),
            [109, 105, 108] => lookup_480_13(acc),
            [110, 121, 109] => lookup_480_14(acc),
            [115, 99, 104, 111, 111, 108] => lookup_480_15(acc),
            [111, 114, 103] => lookup_480_16(acc),
            [110, 101, 116] => lookup_480_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_481() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_483() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_485_0(acc),
            [99, 111, 109] => lookup_485_1(acc),
            [99, 111] => lookup_485_2(acc),
            [110, 111, 109] => lookup_485_3(acc),
            [110, 101, 116] => lookup_485_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_486() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_488() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_489() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_490() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_491() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_493() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_495_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_495<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_495_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_496() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_499_0(acc),
            [101, 100, 117] => lookup_499_1(acc),
            [99, 111, 109] => lookup_499_2(acc),
            [111, 114, 103] => lookup_499_3(acc),
            [103, 111, 118] => lookup_499_4(acc),
            [110, 101, 116] => lookup_499_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_500() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_503_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_503_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_503_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_503_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_503_0(acc),
            [115, 104, 111, 112] => lookup_503_1(acc),
            [102, 105, 114, 109] => lookup_503_2(acc),
            [97, 114, 116, 115] => lookup_503_3(acc),
            [110, 116] => lookup_503_4(acc),
            [114, 101, 99] => lookup_503_5(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_503_6(acc),
            [99, 111, 109] => lookup_503_7(acc),
            [119, 119, 119] => lookup_503_8(acc),
            [99, 111] => lookup_503_9(acc),
            [115, 116, 111, 114, 101] => lookup_503_10(acc),
            [105, 110, 102, 111] => lookup_503_11(acc),
            [110, 121, 109] => lookup_503_12(acc),
            [116, 109] => lookup_503_13(acc),
            [111, 114, 103] => lookup_503_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_504() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_505() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_506() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_509_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 103, 117] => lookup_509_0(acc),
            [109, 115] => lookup_509_1(acc),
            [103, 119, 97, 110, 103, 106, 117] => lookup_509_2(acc),
            [104, 115] => lookup_509_3(acc),
            [115, 101, 111, 117, 108] => lookup_509_4(acc),
            [99, 111] => lookup_509_5(acc),
            [99, 104, 117, 110, 103, 98, 117, 107] => lookup_509_6(acc),
            [107, 103] => lookup_509_7(acc),
            [103, 121, 101, 111, 110, 103, 98, 117, 107] => lookup_509_8(acc),
            [115, 99] => lookup_509_9(acc),
            [106, 101, 106, 117] => lookup_509_10(acc),
            [98, 117, 115, 97, 110] => lookup_509_11(acc),
            [100, 97, 101, 106, 101, 111, 110] => lookup_509_12(acc),
            [99, 104, 117, 110, 103, 110, 97, 109] => lookup_509_13(acc),
            [110, 101] => lookup_509_14(acc),
            [105, 110, 99, 104, 101, 111, 110] => lookup_509_15(acc),
            [106, 101, 111, 110, 98, 117, 107] => lookup_509_16(acc),
            [97, 99] => lookup_509_17(acc),
            [101, 115] => lookup_509_18(acc),
            [111, 114] => lookup_509_19(acc),
            [106, 101, 111, 110, 110, 97, 109] => lookup_509_20(acc),
            [103, 97, 110, 103, 119, 111, 110] => lookup_509_21(acc),
            [103, 111] => lookup_509_22(acc),
            [103, 121, 101, 111, 110, 103, 103, 105] => lookup_509_23(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_509_24(acc),
            [109, 105, 108] => lookup_509_25(acc),
            [114, 101] => lookup_509_26(acc),
            [103, 121, 101, 111, 110, 103, 110, 97, 109] => lookup_509_27(acc),
            [117, 108, 115, 97, 110] => lookup_509_28(acc),
            [112, 101] => lookup_509_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_510() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_512() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_513() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_515_0(acc),
            [109, 105, 108] => lookup_515_1(acc),
            [101, 100, 117] => lookup_515_2(acc),
            [99, 111, 109] => lookup_515_3(acc),
            [111, 114, 103] => lookup_515_4(acc),
            [99, 111, 111, 112] => lookup_515_5(acc),
            [103, 111, 118] => lookup_515_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_516() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_517_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_517_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_517_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_517_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 116, 117, 114, 98, 114, 117, 107, 115, 103, 121, 109, 110] => {
                lookup_517_0(acc)
            }
            [119] => lookup_517_1(acc),
            [109] => lookup_517_2(acc),
            [107, 111, 109, 109, 117, 110, 97, 108, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_517_3(acc)
            }
            [108, 97, 110, 98, 105, 98] => lookup_517_4(acc),
            [115] => lookup_517_5(acc),
            [112] => lookup_517_6(acc),
            [111] => lookup_517_7(acc),
            [99] => lookup_517_8(acc),
            [102, 104] => lookup_517_9(acc),
            [112, 97, 114, 116, 105] => lookup_517_10(acc),
            [100] => lookup_517_11(acc),
            [107, 111, 109, 102, 111, 114, 98] => lookup_517_12(acc),
            [110] => lookup_517_13(acc),
            [111, 114, 103] => lookup_517_14(acc),
            [103] => lookup_517_15(acc),
            [102, 104, 118] => lookup_517_16(acc),
            [97] => lookup_517_17(acc),
            [99, 111, 110, 102] => lookup_517_18(acc),
            [97, 99] => lookup_517_19(acc),
            [98, 114, 97, 110, 100] => lookup_517_20(acc),
            [112, 114, 101, 115, 115] => lookup_517_21(acc),
            [105] => lookup_517_22(acc),
            [101] => lookup_517_23(acc),
            [102, 104, 115, 107] => lookup_517_24(acc),
            [104] => lookup_517_25(acc),
            [107] => lookup_517_26(acc),
            [116] => lookup_517_27(acc),
            [112, 112] => lookup_517_28(acc),
            [122] => lookup_517_29(acc),
            [98] => lookup_517_30(acc),
            [99, 111, 109] => lookup_517_31(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_517_32(acc),
            [105, 111, 112, 115, 121, 115] => lookup_517_33(acc),
            [121] => lookup_517_34(acc),
            [102] => lookup_517_35(acc),
            [116, 109] => lookup_517_36(acc),
            [107, 111, 109, 118, 117, 120] => lookup_517_37(acc),
            [108] => lookup_517_38(acc),
            [114] => lookup_517_39(acc),
            [117] => lookup_517_40(acc),
            [120] => lookup_517_41(acc),
            [98, 100] => lookup_517_42(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_518() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_522_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_523() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_530() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_531_0(acc),
            [101, 100, 117] => lookup_531_1(acc),
            [99, 111, 109] => lookup_531_2(acc),
            [109, 105, 108] => lookup_531_3(acc),
            [103, 111, 118] => lookup_531_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_532() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_535() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_537_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_537_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_537_0(acc),
            [101, 100, 117] => lookup_537_1(acc),
            [114, 100, 118] => lookup_537_2(acc),
            [118, 112, 110, 112, 108, 117, 115] => lookup_537_3(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_537_4(info, labels, acc)
            }
            [110, 121, 97, 110] => lookup_537_5(acc),
            [54, 49, 49] => lookup_537_6(acc),
            [111, 114, 103] => lookup_537_7(acc),
            [99, 111, 109] => lookup_537_8(acc),
            [111, 121, 97] => lookup_537_9(acc),
            [110, 101, 116] => lookup_537_10(acc),
            [103, 111, 118] => lookup_537_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_538_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_538_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_538_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_538<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 116, 121] => lookup_538_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_539() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_541() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_544_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_544_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_544_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_544_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_544_0(acc),
            [101, 100, 117] => lookup_544_1(acc),
            [105, 110] => lookup_544_2(acc),
            [110, 111, 109] => lookup_544_3(acc),
            [111, 120] => lookup_544_4(acc),
            [99, 111] => lookup_544_5(acc),
            [111, 114, 103] => lookup_544_6(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_544_7(acc),
            [117, 97] => lookup_544_8(acc),
            [103, 111, 118] => lookup_544_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_545() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_547() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_549() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_550_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_550_0(acc),
            [111, 114, 103] => lookup_550_1(acc),
            [101, 100, 117] => lookup_550_2(acc),
            [99, 111, 109] => lookup_550_3(acc),
            [115, 99, 104] => lookup_550_4(acc),
            [103, 111, 118] => lookup_550_5(acc),
            [109, 101] => lookup_550_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_551_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_551_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_552() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_553<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 106] => lookup_553_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_554_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 114, 97] => lookup_554_0(acc),
            [111, 114, 103] => lookup_554_1(acc),
            [101, 100, 117] => lookup_554_2(acc),
            [99, 111, 109] => lookup_554_3(acc),
            [103, 111, 118] => lookup_554_4(acc),
            [114, 101, 112] => lookup_554_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_555() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_559() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_562() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_563() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_566() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_567_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 100, 112, 111, 108] => lookup_567_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_568_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 117, 118] => lookup_568_0(acc),
            [97, 114, 116] => lookup_568_1(acc),
            [115, 104, 111, 112] => lookup_568_2(acc),
            [102, 105, 114, 109] => lookup_568_3(acc),
            [99, 111, 111, 112] => lookup_568_4(acc),
            [101, 100, 117] => lookup_568_5(acc),
            [112, 101, 114, 115, 111] => lookup_568_6(acc),
            [99, 111, 109] => lookup_568_7(acc),
            [112, 111, 108] => lookup_568_8(acc),
            [114, 101, 108] => lookup_568_9(acc),
            [112, 114, 111] => lookup_568_10(acc),
            [105, 110, 102, 111] => lookup_568_11(acc),
            [109, 101, 100] => lookup_568_12(acc),
            [111, 114, 103] => lookup_568_13(acc),
            [97, 100, 117, 108, 116] => lookup_568_14(acc),
            [110, 101, 116] => lookup_568_15(acc),
            [97, 115, 115, 111] => lookup_568_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_569() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_579() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110] => lookup_581_0(acc),
            [101, 100, 117] => lookup_581_1(acc),
            [100, 101, 118] => lookup_581_2(acc),
            [109, 101] => lookup_581_3(acc),
            [98, 108, 111, 103] => lookup_581_4(acc),
            [111, 114, 103] => lookup_581_5(acc),
            [99, 111, 109] => lookup_581_6(acc),
            [110, 101, 116] => lookup_581_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_582() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_585() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_588_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_588_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_588<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_588_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_588_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_589() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_591_0(acc),
            [109, 105, 108] => lookup_591_1(acc),
            [111, 114] => lookup_591_2(acc),
            [115, 99] => lookup_591_3(acc),
            [103, 111] => lookup_591_4(acc),
            [105, 110, 102, 111] => lookup_591_5(acc),
            [109, 101] => lookup_591_6(acc),
            [99, 111] => lookup_591_7(acc),
            [104, 111, 116, 101, 108] => lookup_591_8(acc),
            [109, 111, 98, 105] => lookup_591_9(acc),
            [110, 101] => lookup_591_10(acc),
            [116, 118] => lookup_591_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_592() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_594() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_595_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_595_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_595_0(acc),
            [105, 110, 116] => lookup_595_1(acc),
            [99, 117, 112, 99, 97, 107, 101] => lookup_595_2(acc),
            [111, 114, 103] => lookup_595_3(acc),
            [99, 111, 109] => lookup_595_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_595_5(acc),
            [110, 101, 116] => lookup_595_6(acc),
            [103, 111, 118] => lookup_595_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_596() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_600() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_601() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_602() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_604() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_605_0(acc),
            [101, 100, 117] => lookup_605_1(acc),
            [99, 111, 109] => lookup_605_2(acc),
            [110, 101, 116] => lookup_605_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_610_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_610_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_610_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_610_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_610_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_610_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_610<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114] => lookup_610_0(info, labels, acc),
            [104, 105, 115] => lookup_610_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_612() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_613<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_613_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_614() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_622() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 122] => lookup_623_0(acc),
            [102, 114, 111, 109] => lookup_623_1(acc),
            [99, 111, 109] => lookup_623_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_623_3(acc),
            [110, 97, 109, 101] => lookup_623_4(acc),
            [102, 114, 101, 101] => lookup_623_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_624() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_625() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_636_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98] => lookup_636_0(acc),
            [111, 114, 103] => lookup_636_1(acc),
            [101, 100, 117] => lookup_636_2(acc),
            [99, 111, 109] => lookup_636_3(acc),
            [103, 111, 118] => lookup_636_4(acc),
            [110, 101, 116] => lookup_636_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_637() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_639() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_641_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_641_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_641<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114] => lookup_641_0(acc),
            [110, 111, 109] => lookup_641_1(acc),
            [103, 111] => lookup_641_2(acc),
            [120, 52, 52, 51] => lookup_641_3(acc),
            [99, 111] => lookup_641_4(acc),
            [101, 100] => lookup_641_5(acc),
            [110, 101] => lookup_641_6(acc),
            [98, 101, 108, 97, 117] => lookup_641_7(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_641_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_642() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_643() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_650() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_651() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_656_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_656_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_656_0(acc),
            [101, 100, 117] => lookup_656_1(acc),
            [110, 111, 109] => lookup_656_2(acc),
            [111, 114, 103] => lookup_656_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_656_4(acc),
            [99, 111, 109] => lookup_656_5(acc),
            [103, 111, 118] => lookup_656_6(acc),
            [110, 101, 116] => lookup_656_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_657() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_658_0(acc),
            [105, 110, 102, 111] => lookup_658_1(acc),
            [110, 97, 109, 101] => lookup_658_2(acc),
            [111, 114, 103] => lookup_658_3(acc),
            [99, 111, 109] => lookup_658_4(acc),
            [98, 105, 122] => lookup_658_5(acc),
            [103, 111, 118] => lookup_658_6(acc),
            [110, 101, 116] => lookup_658_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_659_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_659_0(acc),
            [111, 114, 103] => lookup_659_1(acc),
            [101, 100, 117] => lookup_659_2(acc),
            [99, 111, 109] => lookup_659_3(acc),
            [103, 111, 118] => lookup_659_4(acc),
            [110, 101, 116] => lookup_659_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_660() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_661() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_664() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_666() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_668() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_669_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 97, 100, 105, 111] => lookup_669_0(acc),
            [111, 114, 103] => lookup_669_1(acc),
            [101, 100, 117] => lookup_669_2(acc),
            [99, 111, 109] => lookup_669_3(acc),
            [110, 101, 116] => lookup_669_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_670() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_676() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_678<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_678_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_679_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 112] => lookup_679_0(acc),
            [112, 114, 111] => lookup_679_1(acc),
            [109, 105, 108] => lookup_679_2(acc),
            [105, 110, 116] => lookup_679_3(acc),
            [101, 100, 117] => lookup_679_4(acc),
            [105, 110, 102, 111] => lookup_679_5(acc),
            [110, 97, 109, 101] => lookup_679_6(acc),
            [111, 114, 103] => lookup_679_7(acc),
            [99, 111, 109] => lookup_679_8(acc),
            [98, 105, 122] => lookup_679_9(acc),
            [110, 101, 116] => lookup_679_10(acc),
            [103, 111, 118] => lookup_679_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_680() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_682() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_684() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 101] => lookup_685_0(acc),
            [112, 101, 114] => lookup_685_1(acc),
            [102, 105, 114, 109] => lookup_685_2(acc),
            [105, 110, 102, 111] => lookup_685_3(acc),
            [97, 114, 116, 115] => lookup_685_4(acc),
            [114, 101, 99] => lookup_685_5(acc),
            [99, 111, 109] => lookup_685_6(acc),
            [111, 116, 104, 101, 114] => lookup_685_7(acc),
            [119, 101, 98] => lookup_685_8(acc),
            [110, 101, 116] => lookup_685_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_686() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_687() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_690() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_691() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_693_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_693_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_693_5_0(acc),
            [100, 101, 109, 111] => lookup_693_5_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_693_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 104, 107, 107, 105, 110, 101, 110, 45, 53, 119, 97] => {
                lookup_693_0(acc)
            }
            [105, 107, 105] => lookup_693_1(acc),
            [104, 195, 164, 107, 107, 105, 110, 101, 110] => lookup_693_2(acc),
            [100, 121] => lookup_693_3(acc),
            [99, 108, 111, 117, 100, 112, 108, 97, 116, 102, 111, 114, 109] => {
                lookup_693_4(info, labels, acc)
            }
            [100, 97, 116, 97, 99, 101, 110, 116, 101, 114] => lookup_693_5(info, labels, acc),
            [97, 108, 97, 110, 100] => lookup_693_6(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_693_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_694() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_696() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_697() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_698() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_700() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_701() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_702_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_703() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_704_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_704<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_704_0(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101] => lookup_704_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_705() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_706() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_707() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_708_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_708<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 104, 97, 116] => lookup_708_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_709() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_711() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_717_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_717_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_717_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 105, 110, 103] => lookup_717_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_717_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_717_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_717_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_717<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_717_0(acc),
            [111, 110, 114, 101, 100] => lookup_717_1(labels, acc),
            [117, 110, 100, 101, 114] => lookup_717_2(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_717_3(acc),
            [104, 111, 109, 101, 108, 105, 110, 107] => lookup_717_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_718() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_720<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 117, 118] => lookup_720_0(acc),
            [101, 100, 117] => lookup_720_1(acc),
            [97, 114, 116] => lookup_720_2(acc),
            [112, 101, 114, 115, 111] => lookup_720_3(acc),
            [111, 114, 103] => lookup_720_4(acc),
            [99, 111, 109] => lookup_720_5(acc),
            [117, 110, 105, 118] => lookup_720_6(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_720_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_721_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_721<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_721_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_722_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_722_0(acc),
            [101, 100, 117] => lookup_722_1(acc),
            [99, 111, 109] => lookup_722_2(acc),
            [110, 101, 116] => lookup_722_3(acc),
            [103, 111, 118] => lookup_722_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_723() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_724<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102] => lookup_724_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_725() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_726() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_729() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_730() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_731() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_733() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_735_0(acc),
            [99, 111, 109] => lookup_735_1(acc),
            [101, 100, 117] => lookup_735_2(acc),
            [103, 111, 118] => lookup_735_3(acc),
            [110, 101, 116] => lookup_735_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_736() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_738_0(acc),
            [109, 105, 108] => lookup_738_1(acc),
            [101, 100, 117] => lookup_738_2(acc),
            [97, 100, 118] => lookup_738_3(acc),
            [99, 111] => lookup_738_4(acc),
            [111, 114, 103] => lookup_738_5(acc),
            [103, 111, 118] => lookup_738_6(acc),
            [110, 101, 116] => lookup_738_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_739_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_739_0(acc),
            [110, 111, 109] => lookup_739_1(acc),
            [101, 100, 117] => lookup_739_2(acc),
            [111, 114, 103] => lookup_739_3(acc),
            [99, 111] => lookup_739_4(acc),
            [99, 111, 109] => lookup_739_5(acc),
            [110, 101, 116] => lookup_739_6(acc),
            [103, 111, 118] => lookup_739_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_740() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_744_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_744_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_744_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_744_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_744_0(acc),
            [109, 105, 108] => lookup_744_1(acc),
            [101, 100, 117] => lookup_744_2(acc),
            [103, 111, 98] => lookup_744_3(acc),
            [110, 111, 109] => lookup_744_4(acc),
            [116, 111] => lookup_744_5(acc),
            [98, 108, 111, 103] => lookup_744_6(acc),
            [111, 114, 103] => lookup_744_7(acc),
            [99, 111, 109] => lookup_744_8(acc),
            [105, 110, 100] => lookup_744_9(acc),
            [110, 101, 116] => lookup_744_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_745() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_746() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_749() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_751_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_751<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_751_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_752() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_754() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_756_0(acc),
            [109, 101, 100] => lookup_756_1(acc),
            [112, 108, 99] => lookup_756_2(acc),
            [105, 100] => lookup_756_3(acc),
            [111, 114, 103] => lookup_756_4(acc),
            [99, 111, 109] => lookup_756_5(acc),
            [115, 99, 104] => lookup_756_6(acc),
            [103, 111, 118] => lookup_756_7(acc),
            [110, 101, 116] => lookup_756_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_757() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99, 105] => lookup_758_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_758_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 97, 97] => lookup_758_0(acc),
            [101, 110, 103] => lookup_758_1(acc),
            [97, 99, 99, 116] => lookup_758_2(acc),
            [98, 97, 114] => lookup_758_3(acc),
            [97, 99, 97] => lookup_758_4(acc),
            [106, 117, 114] => lookup_758_5(acc),
            [108, 97, 119] => lookup_758_6(acc),
            [109, 101, 100] => lookup_758_7(acc),
            [100, 110, 115, 116, 114, 97, 99, 101] => lookup_758_8(info, labels, acc),
            [99, 112, 97] => lookup_758_9(acc),
            [114, 101, 99, 104, 116] => lookup_758_10(acc),
            [98, 97, 114, 115, 121] => lookup_758_11(acc),
            [97, 118, 111, 99, 97, 116] => lookup_758_12(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_758_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_759() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_761() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_767_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_767_0(acc),
            [101, 100, 117] => lookup_767_1(acc),
            [99, 111, 109] => lookup_767_2(acc),
            [99, 111] => lookup_767_3(acc),
            [103, 111, 118] => lookup_767_4(acc),
            [110, 101, 116] => lookup_767_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_768_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_768_0(acc),
            [99, 111] => lookup_768_1(acc),
            [102, 105] => lookup_768_2(acc),
            [101, 100] => lookup_768_3(acc),
            [103, 111] => lookup_768_4(acc),
            [111, 114] => lookup_768_5(acc),
            [115, 97] => lookup_768_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_769_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_769<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 118, 114, 99, 97, 109] => lookup_769_0(acc),
            [98, 97, 114, 115, 121] => lookup_769_1(acc),
            [119, 101, 98, 104, 111, 112] => lookup_769_2(acc),
            [118, 45, 105, 110, 102, 111] => lookup_769_3(acc),
            [100, 121, 110, 97, 109, 105, 99, 45, 100, 110, 115] => lookup_769_4(acc),
            [100, 121, 110, 100, 110, 115] => lookup_769_5(acc),
            [104, 101, 114, 101, 45, 102, 111, 114, 45, 109, 111, 114, 101] => lookup_769_6(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101] => lookup_769_7(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_769_8(acc),
            [115, 101, 108, 102, 105, 112] => lookup_769_9(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 105, 115] => lookup_769_10(acc),
            [102, 111, 114, 45, 111, 117, 114] => lookup_769_11(acc),
            [105, 108, 111, 118, 101, 99, 111, 108, 108, 101, 103, 101] => lookup_769_12(acc),
            [98, 97, 114, 114, 101, 108, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_769_13(acc)
            }
            [110, 111, 45, 105, 112] => lookup_769_14(acc),
            [102, 111, 114, 117, 109, 122] => lookup_769_15(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 101] => lookup_769_16(acc),
            [110, 115, 117, 112, 100, 97, 116, 101] => lookup_769_17(acc),
            [98, 97, 114, 114, 101, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_769_18(acc)
            }
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_769_19(acc),
            [107, 110, 111, 119, 115, 105, 116, 97, 108, 108] => lookup_769_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_770() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_771() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_773() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_774() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_779() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_780_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_781() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_782() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_787() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108, 115] => lookup_790_2_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_790_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97] => lookup_790_2_0(acc),
            [113, 108, 100] => lookup_790_2_1(acc),
            [110, 116] => lookup_790_2_2(acc),
            [97, 99, 116] => lookup_790_2_3(acc),
            [118, 105, 99] => lookup_790_2_4(acc),
            [116, 97, 115] => lookup_790_2_5(acc),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_790_2_6(acc),
            [110, 115, 119] => lookup_790_2_7(labels, acc),
            [119, 97] => lookup_790_2_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_790_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_6_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_790_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 108] => lookup_790_6_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_790_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_790_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 108, 101, 116, 115] => lookup_790_6_0(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_790_6_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_790_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 105, 99] => lookup_790_10_0(acc),
            [115, 97] => lookup_790_10_1(acc),
            [116, 97, 115] => lookup_790_10_2(acc),
            [119, 97] => lookup_790_10_3(acc),
            [113, 108, 100] => lookup_790_10_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_790_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_790_0(acc),
            [115, 97] => lookup_790_1(acc),
            [101, 100, 117] => lookup_790_2(labels, acc),
            [110, 116] => lookup_790_3(acc),
            [97, 99, 116] => lookup_790_4(acc),
            [118, 105, 99] => lookup_790_5(acc),
            [99, 111, 109] => lookup_790_6(labels, acc),
            [116, 97, 115] => lookup_790_7(acc),
            [119, 97] => lookup_790_8(acc),
            [110, 115, 119] => lookup_790_9(acc),
            [103, 111, 118] => lookup_790_10(labels, acc),
            [105, 110, 102, 111] => lookup_790_11(acc),
            [105, 100] => lookup_790_12(acc),
            [113, 108, 100] => lookup_790_13(acc),
            [97, 115, 110] => lookup_790_14(acc),
            [111, 114, 103] => lookup_790_15(acc),
            [111, 122] => lookup_790_16(acc),
            [99, 111, 110, 102] => lookup_790_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_791() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_794_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_794<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102] => lookup_794_0(acc),
            [105, 110] => lookup_794_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_795() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_798_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_798_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_798_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_798_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_798_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_798_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_798<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_798_0(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_798_1(info, labels, acc),
            [122, 97, 112, 116, 111] => lookup_798_2(acc),
            [108, 111, 99, 97, 108, 122, 111, 110, 101] => lookup_798_3(acc),
            [99, 114, 97, 102, 116, 105, 110, 103] => lookup_798_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_799() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_802_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_802_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_802_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_802_0(acc),
            [101, 100, 117] => lookup_802_1(acc),
            [110, 97, 109, 101] => lookup_802_2(acc),
            [101, 117, 110] => lookup_802_3(acc),
            [111, 114, 103] => lookup_802_4(acc),
            [99, 111, 109] => lookup_802_5(labels, acc),
            [115, 99, 105] => lookup_802_6(acc),
            [110, 101, 116] => lookup_802_7(acc),
            [103, 111, 118] => lookup_802_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_803() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_804_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_804_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 119, 117] => lookup_804_0(acc),
            [111, 102, 102] => lookup_804_1(acc),
            [99, 111, 109] => lookup_804_2(acc),
            [111, 114, 103] => lookup_804_3(acc),
            [110, 111, 109] => lookup_804_4(acc),
            [110, 101, 116] => lookup_804_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_805() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_806() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [230, 148, 191, 229, 186, 156] => lookup_807_0(acc),
            [231, 181, 132, 231, 185, 148] => lookup_807_1(acc),
            [231, 182, 178, 231, 181, 161] => lookup_807_2(acc),
            [229, 133, 172, 229, 143, 184] => lookup_807_3(acc),
            [229, 128, 139, 228, 186, 186] => lookup_807_4(acc),
            [230, 149, 153, 232, 130, 178] => lookup_807_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_810_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_810_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_810_0(acc),
            [110, 121, 109] => lookup_810_1(acc),
            [99, 111] => lookup_810_2(acc),
            [99, 111, 109] => lookup_810_3(acc),
            [111, 114, 103] => lookup_810_4(acc),
            [98, 101] => lookup_810_5(acc),
            [103, 111, 118] => lookup_810_6(acc),
            [110, 101, 116] => lookup_810_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_811() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 101] => lookup_812_0(acc),
            [99, 111] => lookup_812_1(acc),
            [114, 101, 103] => lookup_812_2(acc),
            [98, 105, 122] => lookup_812_3(acc),
            [102, 105, 114, 109] => lookup_812_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_812_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_813() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_816_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_816_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_816<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 101, 115, 107] => lookup_816_0(acc),
            [112, 114, 118, 99, 121] => lookup_816_1(acc),
            [112, 100, 110, 115] => lookup_816_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_817() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_826<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_826_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_826_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_828_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_828<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_828_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_829() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_830_0(acc),
            [99, 111, 109] => lookup_830_1(acc),
            [101, 100, 117] => lookup_830_2(acc),
            [110, 101, 116] => lookup_830_3(acc),
            [103, 111, 118] => lookup_830_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_834() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_836() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 101, 115, 115, 101] => lookup_837_0(acc),
            [103, 111, 117, 118] => lookup_837_1(acc),
            [111, 114, 103] => lookup_837_2(acc),
            [101, 100, 117] => lookup_837_3(acc),
            [99, 111, 109] => lookup_837_4(acc),
            [103, 111, 118] => lookup_837_5(acc),
            [110, 101, 116] => lookup_837_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_838_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114] => lookup_838_0(acc),
            [110, 97, 109, 101] => lookup_838_1(acc),
            [99, 111] => lookup_838_2(acc),
            [109, 111, 98, 105] => lookup_838_3(acc),
            [99, 111, 109] => lookup_838_4(acc),
            [99, 97] => lookup_838_5(acc),
            [112, 114, 111] => lookup_838_6(acc),
            [105, 110] => lookup_838_7(acc),
            [117, 115] => lookup_838_8(acc),
            [105, 110, 102, 111] => lookup_838_9(acc),
            [119, 115] => lookup_838_10(acc),
            [115, 99, 104, 111, 111, 108] => lookup_838_11(acc),
            [100, 114] => lookup_838_12(acc),
            [109, 120] => lookup_838_13(acc),
            [99, 99] => lookup_838_14(acc),
            [111, 114, 103] => lookup_838_15(acc),
            [116, 118] => lookup_838_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_839() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_841() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_845_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_845_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_845_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_845_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_845_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_845_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 31usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_845_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_845_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 110, 45, 119, 101, 98] => lookup_845_0(acc),
            [103, 111, 117, 118] => lookup_845_1(acc),
            [97, 118, 111, 117, 101, 115] => lookup_845_2(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_845_3(acc),
            [112, 111, 114, 116] => lookup_845_4(acc),
            [101, 110, 45, 114, 111, 111, 116] => lookup_845_5(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115] => {
                lookup_845_6(acc)
            }
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_845_7(acc),
            [103, 114, 101, 116, 97] => lookup_845_8(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_845_9(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_845_10(acc),
            [110, 111, 109] => lookup_845_11(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110] => lookup_845_12(acc),
            [99, 104, 97, 109, 98, 97, 103, 114, 105] => lookup_845_13(acc),
            [97, 101, 114, 111, 112, 111, 114, 116] => lookup_845_14(acc),
            [103, 101, 111, 109, 101, 116, 114, 101, 45, 101, 120, 112, 101, 114, 116] => {
                lookup_845_15(acc)
            }
            [99, 111, 109] => lookup_845_16(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_845_17(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_845_18(acc),
            [101, 120, 112, 101, 114, 116, 115, 45, 99, 111, 109, 112, 116, 97, 98, 108, 101, 115] => {
                lookup_845_19(acc)
            }
            [97, 118, 111, 99, 97, 116] => lookup_845_20(acc),
            [102, 98, 120, 111, 115] => lookup_845_21(acc),
            [99, 99, 105] => lookup_845_22(acc),
            [112, 114, 100] => lookup_845_23(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115, 45, 101, 110, 45, 102, 114, 97, 110, 99, 101] => {
                lookup_845_24(acc)
            }
            [104, 117, 105, 115, 115, 105, 101, 114, 45, 106, 117, 115, 116, 105, 99, 101] => {
                lookup_845_25(acc)
            }
            [116, 109] => lookup_845_26(acc),
            [102, 98, 120, 45, 111, 115] => lookup_845_27(acc),
            [97, 115, 115, 111] => lookup_845_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_846_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_846_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_846_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_846_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_846_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_846_30_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_846_30_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_846_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_61<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_846_61_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_846_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_66_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_66<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_846_66_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_846<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 115, 105, 100, 110, 115] => lookup_846_0(info, labels, acc),
            [100, 121, 110, 100, 110, 115, 49] => lookup_846_1(acc),
            [104, 111, 109, 101, 45, 119, 101, 98, 115, 101, 114, 118, 101, 114] => {
                lookup_846_2(labels, acc)
            }
            [105, 110, 45, 100, 115, 108] => lookup_846_3(acc),
            [52, 108, 105, 109, 97] => lookup_846_4(acc),
            [109, 121, 45, 103, 97, 116, 101, 119, 97, 121] => lookup_846_5(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => {
                lookup_846_6(acc)
            }
            [100, 114, 97, 121, 45, 100, 110, 115] => lookup_846_7(acc),
            [100, 114, 97, 121, 100, 110, 115] => lookup_846_8(acc),
            [100, 121, 110, 97, 109, 105, 115, 99, 104, 101, 115, 45, 100, 110, 115] => {
                lookup_846_9(acc)
            }
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110, 45, 122, 118, 98] => {
                lookup_846_10(acc)
            }
            [100, 121, 110, 118, 112, 110] => lookup_846_11(acc),
            [108, 101, 98, 116, 105, 109, 110, 101, 116, 122] => lookup_846_12(acc),
            [109, 121, 45, 118, 105, 103, 111, 114] => lookup_846_13(acc),
            [108, 111, 103, 111, 105, 112] => lookup_846_14(acc),
            [109, 121, 45, 114, 111, 117, 116, 101, 114] => lookup_846_15(acc),
            [105, 110, 116, 101, 114, 110, 101, 116, 45, 100, 110, 115] => lookup_846_16(acc),
            [99, 111, 109] => lookup_846_17(acc),
            [109, 101, 105, 110, 45, 118, 105, 103, 111, 114] => lookup_846_18(acc),
            [100, 121, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_846_19(acc),
            [102, 117, 101, 116, 116, 101, 114, 116, 100, 97, 115, 110, 101, 116, 122] => {
                lookup_846_20(acc)
            }
            [108, 45, 111, 45, 103, 45, 105, 45, 110] => lookup_846_21(acc),
            [116, 114, 97, 101, 117, 109, 116, 103, 101, 114, 97, 100, 101] => lookup_846_22(acc),
            [105, 115, 116, 109, 101, 105, 110] => lookup_846_23(acc),
            [108, 99, 117, 98, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_846_24(acc),
            [118, 105, 114, 116, 117, 97, 108, 117, 115, 101, 114] => lookup_846_25(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101, 114] => lookup_846_26(acc),
            [103, 105, 116, 45, 114, 101, 112, 111, 115] => lookup_846_27(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_846_28(acc),
            [103, 111, 105, 112] => lookup_846_29(acc),
            [100, 100, 110, 115, 115] => lookup_846_30(labels, acc),
            [116, 101, 115, 116, 45, 105, 115, 101, 114, 118] => lookup_846_31(acc),
            [100, 105, 115, 107, 117, 115, 115, 105, 111, 110, 115, 98, 101, 114, 101, 105, 99, 104] => {
                lookup_846_32(acc)
            }
            [98, 97, 114, 115, 121] => lookup_846_33(acc),
            [100, 110, 115, 104, 111, 109, 101] => lookup_846_34(acc),
            [105, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_846_35(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_846_36(acc),
            [109, 121, 45, 119, 97, 110] => lookup_846_37(acc),
            [115, 112, 100, 110, 115] => lookup_846_38(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110] => {
                lookup_846_39(acc)
            }
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110, 45, 119, 111, 98] => {
                lookup_846_40(acc)
            }
            [100, 121, 110, 45, 105, 112, 50, 52] => lookup_846_41(acc),
            [109, 121, 104, 111, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_846_42(acc),
            [118, 105, 114, 116, 117, 97, 108, 45, 117, 115, 101, 114] => lookup_846_43(acc),
            [105, 110, 45, 118, 112, 110] => lookup_846_44(acc),
            [50, 105, 120] => lookup_846_45(acc),
            [100, 100, 45, 100, 110, 115] => lookup_846_46(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110] => {
                lookup_846_47(acc)
            }
            [109, 101, 105, 110, 45, 105, 115, 101, 114, 118] => lookup_846_48(acc),
            [115, 118, 110, 45, 114, 101, 112, 111, 115] => lookup_846_49(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_846_50(acc),
            [105, 110, 45, 98, 114, 98] => lookup_846_51(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_846_52(acc),
            [100, 121, 110, 45, 118, 112, 110] => lookup_846_53(acc),
            [108, 101, 105, 116, 117, 110, 103, 115, 101, 110] => lookup_846_54(acc),
            [105, 115, 116, 101, 105, 110, 103, 101, 101, 107] => lookup_846_55(acc),
            [115, 99, 104, 117, 108, 115, 101, 114, 118, 101, 114] => lookup_846_56(acc),
            [107, 101, 121, 109, 97, 99, 104, 105, 110, 101] => lookup_846_57(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_846_58(acc)
            }
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_846_59(acc),
            [116, 97, 105, 102, 117, 110, 45, 100, 110, 115] => lookup_846_60(acc),
            [115, 112, 101, 101, 100, 112, 97, 114, 116, 110, 101, 114] => {
                lookup_846_61(info, labels, acc)
            }
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 115] => lookup_846_62(acc),
            [115, 121, 110, 111, 45, 100, 115] => lookup_846_63(acc),
            [49, 50, 104, 112] => lookup_846_64(acc),
            [105, 110, 45, 98, 117, 116, 116, 101, 114] => lookup_846_65(acc),
            [117, 98, 101, 114, 115, 112, 97, 99, 101] => lookup_846_66(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_847() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_849() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_850() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_853() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_855() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_862() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_864() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_866() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_868() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_871() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_872_0(acc),
            [112, 114, 111] => lookup_872_1(acc),
            [109, 105, 108] => lookup_872_2(acc),
            [105, 110, 102, 111] => lookup_872_3(acc),
            [110, 97, 109, 101] => lookup_872_4(acc),
            [111, 114, 103] => lookup_872_5(acc),
            [99, 111, 109] => lookup_872_6(acc),
            [98, 105, 122] => lookup_872_7(acc),
            [103, 111, 118] => lookup_872_8(acc),
            [110, 101, 116] => lookup_872_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_873() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_874_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_874_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_874_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_874_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_874_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_874_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_874_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_874<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 97, 110, 116, 97, 115, 121, 108, 101, 97, 103, 117, 101] => lookup_874_0(acc),
            [99, 115, 120] => lookup_874_1(acc),
            [115, 99, 114, 97, 112, 112, 105, 110, 103] => lookup_874_2(acc),
            [109, 121, 112, 104, 111, 116, 111, 115] => lookup_874_3(acc),
            [102, 116, 112, 97, 99, 99, 101, 115, 115] => lookup_874_4(acc),
            [116, 119, 109, 97, 105, 108] => lookup_874_5(acc),
            [103, 97, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_874_6(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_874_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_875() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_876() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_877() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_878_0(acc),
            [106, 112] => lookup_878_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_878_2(acc),
            [100, 101] => lookup_878_3(acc),
            [116, 111] => lookup_878_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_879() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 114, 105, 110, 101, 116] => lookup_881_0(acc),
            [100, 101, 102, 101, 110, 115, 101] => lookup_881_1(acc),
            [116, 117, 114, 101, 110] => lookup_881_2(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_881_3(acc),
            [114, 110, 117] => lookup_881_4(acc),
            [112, 101, 114, 115, 111] => lookup_881_5(acc),
            [114, 110, 115] => lookup_881_6(acc),
            [99, 111, 109] => lookup_881_7(acc),
            [102, 105, 110] => lookup_881_8(acc),
            [111, 114, 97, 110, 103, 101, 99, 108, 111, 117, 100] => lookup_881_9(acc),
            [114, 110, 114, 116] => lookup_881_10(acc),
            [105, 110, 100] => lookup_881_11(acc),
            [103, 111, 118] => lookup_881_12(acc),
            [110, 97, 116] => lookup_881_13(acc),
            [101, 100, 117, 110, 101, 116] => lookup_881_14(acc),
            [105, 110, 102, 111] => lookup_881_15(acc),
            [101, 110, 115] => lookup_881_16(acc),
            [109, 105, 110, 99, 111, 109] => lookup_881_17(acc),
            [111, 114, 103] => lookup_881_18(acc),
            [105, 110, 116, 108] => lookup_881_19(acc),
            [110, 101, 116] => lookup_881_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_882_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_882_0(acc),
            [99, 111] => lookup_882_1(acc),
            [101, 100, 117] => lookup_882_2(acc),
            [103, 111, 118] => lookup_882_3(acc),
            [110, 101, 116] => lookup_882_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_883() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_885_0(acc),
            [112, 108, 111] => lookup_885_1(acc),
            [101, 100, 117] => lookup_885_2(acc),
            [99, 111, 109] => lookup_885_3(acc),
            [115, 101, 99] => lookup_885_4(acc),
            [103, 111, 118] => lookup_885_5(acc),
            [111, 114, 103] => lookup_885_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_886_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_886_0(acc),
            [111, 114, 103] => lookup_886_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_887() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_888() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_890() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_893_0(acc),
            [111, 114, 103] => lookup_893_1(acc),
            [109, 111, 98, 105] => lookup_893_2(acc),
            [99, 111, 109] => lookup_893_3(acc),
            [101, 100, 117] => lookup_893_4(acc),
            [110, 101, 116] => lookup_893_5(acc),
            [97, 115, 115, 111] => lookup_893_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_894_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_894_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 105] => lookup_894_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_894<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 98, 117] => lookup_894_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_895() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_899() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_901() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 116, 114, 105, 97] => lookup_902_0(acc),
            [105, 110, 116] => lookup_902_1(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116, 101] => lookup_902_2(acc),
            [100, 101, 112, 111, 114, 116, 101] => lookup_902_3(acc),
            [101, 99, 111, 110, 111, 109, 105, 97] => lookup_902_4(acc),
            [101, 109, 112, 114, 101, 115, 97] => lookup_902_5(acc),
            [97, 99, 97, 100, 101, 109, 105, 97] => lookup_902_6(acc),
            [110, 111, 116, 105, 99, 105, 97, 115] => lookup_902_7(acc),
            [119, 105, 107, 105] => lookup_902_8(acc),
            [105, 110, 102, 111] => lookup_902_9(acc),
            [99, 105, 101, 110, 99, 105, 97] => lookup_902_10(acc),
            [116, 107, 115, 97, 116] => lookup_902_11(acc),
            [111, 114, 103] => lookup_902_12(acc),
            [109, 117, 115, 105, 99, 97] => lookup_902_13(acc),
            [110, 97, 116, 117, 114, 97, 108] => lookup_902_14(acc),
            [98, 111, 108, 105, 118, 105, 97] => lookup_902_15(acc),
            [116, 118] => lookup_902_16(acc),
            [110, 101, 116] => lookup_902_17(acc),
            [97, 103, 114, 111] => lookup_902_18(acc),
            [101, 100, 117] => lookup_902_19(acc),
            [109, 111, 118, 105, 109, 105, 101, 110, 116, 111] => lookup_902_20(acc),
            [112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108] => lookup_902_21(acc),
            [112, 108, 117, 114, 105, 110, 97, 99, 105, 111, 110, 97, 108] => lookup_902_22(acc),
            [115, 97, 108, 117, 100] => lookup_902_23(acc),
            [100, 101, 109, 111, 99, 114, 97, 99, 105, 97] => lookup_902_24(acc),
            [98, 108, 111, 103] => lookup_902_25(acc),
            [99, 111, 111, 112, 101, 114, 97, 116, 105, 118, 97] => lookup_902_26(acc),
            [99, 111, 109] => lookup_902_27(acc),
            [101, 99, 111, 108, 111, 103, 105, 97] => lookup_902_28(acc),
            [110, 111, 109, 98, 114, 101] => lookup_902_29(acc),
            [112, 111, 108, 105, 116, 105, 99, 97] => lookup_902_30(acc),
            [112, 117, 101, 98, 108, 111] => lookup_902_31(acc),
            [109, 105, 108] => lookup_902_32(acc),
            [103, 111, 98] => lookup_902_33(acc),
            [105, 110, 100, 105, 103, 101, 110, 97] => lookup_902_34(acc),
            [97, 114, 116, 101] => lookup_902_35(acc),
            [105, 110, 100, 117, 115, 116, 114, 105, 97] => lookup_902_36(acc),
            [109, 101, 100, 105, 99, 105, 110, 97] => lookup_902_37(acc),
            [116, 101, 99, 110, 111, 108, 111, 103, 105, 97] => lookup_902_38(acc),
            [119, 101, 98] => lookup_902_39(acc),
            [114, 101, 118, 105, 115, 116, 97] => lookup_902_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_903() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_906_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_906_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 117, 98, 108] => lookup_906_0(acc),
            [101, 100, 117] => lookup_906_1(acc),
            [105, 110, 116] => lookup_906_2(acc),
            [110, 121, 109] => lookup_906_3(acc),
            [111, 114, 103] => lookup_906_4(acc),
            [99, 111, 109] => lookup_906_5(acc),
            [110, 111, 109, 101] => lookup_906_6(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_906_7(acc),
            [110, 101, 116] => lookup_906_8(acc),
            [103, 111, 118] => lookup_906_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_907() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_909() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_910() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_911<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 110] => lookup_911_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_912_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_912_0(acc),
            [101, 100, 117] => lookup_912_1(acc),
            [99, 111, 109] => lookup_912_2(acc),
            [103, 111, 118] => lookup_912_3(acc),
            [110, 101, 116] => lookup_912_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_913() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_914() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_917() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_920() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_921() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_924() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_926_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [117, 112, 97, 97, 115] => lookup_926_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_926_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_926_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_926_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_926_0(acc),
            [101, 100, 117] => lookup_926_1(acc),
            [107, 97, 122, 116, 101, 108, 101, 112, 111, 114, 116] => {
                lookup_926_2(info, labels, acc)
            }
            [110, 121, 109] => lookup_926_3(acc),
            [111, 114, 103] => lookup_926_4(acc),
            [99, 111, 109] => lookup_926_5(acc),
            [106, 99, 108, 111, 117, 100] => lookup_926_6(acc),
            [110, 101, 116] => lookup_926_7(acc),
            [103, 111, 118] => lookup_926_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_927() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_928() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_929_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_929_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_929_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_929_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_929_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_929_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_929_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_929_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_929<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 110, 111, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_929_0(acc),
            [115, 116, 103] => lookup_929_1(info, labels, acc),
            [119, 111, 114, 107, 101, 114, 115] => lookup_929_2(acc),
            [100, 101, 110, 111] => lookup_929_3(acc),
            [99, 117, 114, 118] => lookup_929_4(acc),
            [102, 108, 121] => lookup_929_5(acc),
            [112, 97, 103, 101, 115] => lookup_929_6(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_929_7(info, labels, acc),
            [118, 101, 114, 99, 101, 108] => lookup_929_8(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_929_9(acc),
            [119, 101, 98, 104, 97, 114, 101] => lookup_929_10(info, labels, acc),
            [105, 115, 101, 114, 118] => lookup_929_11(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_929_12(acc),
            [108, 99, 108] => lookup_929_13(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_930() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_931() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_932() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_935_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_936() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_937() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_944_0(acc),
            [101, 100, 117] => lookup_944_1(acc),
            [99, 111, 109] => lookup_944_2(acc),
            [103, 111, 118] => lookup_944_3(acc),
            [110, 101, 116] => lookup_944_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_945() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_946_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_946_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_946<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_946_0(acc),
            [101, 100, 117] => lookup_946_1(acc),
            [99, 111] => lookup_946_2(acc),
            [99, 111, 109] => lookup_946_3(acc),
            [111, 114, 103] => lookup_946_4(acc),
            [98, 105, 122] => lookup_946_5(acc),
            [110, 101, 116] => lookup_946_6(acc),
            [120, 120] => lookup_946_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_947() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_948() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_951() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_952() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_953() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_956() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_959() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_960_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_960_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_960_0(acc),
            [110, 111, 109] => lookup_960_1(acc),
            [101, 100, 117] => lookup_960_2(acc),
            [103, 111, 98] => lookup_960_3(acc),
            [111, 114, 103] => lookup_960_4(acc),
            [99, 111, 109] => lookup_960_5(acc),
            [99, 99] => lookup_960_6(acc),
            [110, 101, 116] => lookup_960_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_961() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_964() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_967() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_972() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_973() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_974() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_975_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_260_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_975_260_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_975_260_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_975_260_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_975_260_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_975_260<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110] => lookup_975_260_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_975_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_975_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_975_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_975_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_374_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_975_374<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99] => lookup_975_374_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_975_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_975<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 101, 99, 99, 111] => lookup_975_0(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_975_1(acc)
            }
            [112, 105, 115, 97] => lookup_975_2(acc),
            [103, 101, 110, 111, 118, 97] => lookup_975_3(acc),
            [99, 111, 115, 101, 110, 122, 97] => lookup_975_4(acc),
            [99, 105] => lookup_975_5(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 97, 111, 115, 116, 101, 45, 101, 55, 97] => {
                lookup_975_6(acc)
            }
            [116, 115] => lookup_975_7(acc),
            [118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_975_8(acc),
            [110, 97, 112, 108, 101, 115] => lookup_975_9(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 109, 101, 100, 105, 111] => {
                lookup_975_10(acc)
            }
            [99, 114, 111, 116, 111, 110, 101] => lookup_975_11(acc),
            [114, 111, 118, 105, 103, 111] => lookup_975_12(acc),
            [102, 111, 114, 108, 105, 99, 101, 115, 101, 110, 97] => lookup_975_13(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 97, 100, 105, 103, 101] => {
                lookup_975_14(acc)
            }
            [118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 97] => lookup_975_15(acc),
            [118, 101, 110] => lookup_975_16(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_975_17(acc)
            }
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 195, 172] => lookup_975_18(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_975_19(acc)
            }
            [112, 122] => lookup_975_20(acc),
            [109, 111, 110, 122, 97, 101, 100, 101, 108, 108, 97, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_975_21(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_975_22(acc)
            }
            [97, 112] => lookup_975_23(acc),
            [116, 110] => lookup_975_24(acc),
            [112, 110] => lookup_975_25(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_975_26(acc)
            }
            [100, 101, 108, 108, 111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_975_27(acc),
            [118, 97, 108, 100, 45, 97, 111, 115, 116, 97] => lookup_975_28(acc),
            [118, 97, 108, 108, 101, 101, 100, 97, 111, 115, 116, 101] => lookup_975_29(acc),
            [112, 101, 115, 97, 114, 111, 45, 117, 114, 98, 105, 110, 111] => lookup_975_30(acc),
            [102, 114, 105, 117, 108, 105, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_975_31(acc)
            }
            [118, 97, 108, 108, 101, 101, 97, 111, 115, 116, 101] => lookup_975_32(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_33(acc)
            }
            [103, 114] => lookup_975_34(acc),
            [114, 101, 103, 103, 105, 111, 45, 101, 109, 105, 108, 105, 97] => lookup_975_35(acc),
            [98, 111] => lookup_975_36(acc),
            [116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_975_37(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_975_38(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_39(acc)
            }
            [110, 117, 111, 114, 111] => lookup_975_40(acc),
            [116, 114, 105, 101, 115, 116, 101] => lookup_975_41(acc),
            [97, 110] => lookup_975_42(acc),
            [97, 114] => lookup_975_43(acc),
            [112, 99] => lookup_975_44(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_975_45(acc)
            }
            [112, 116] => lookup_975_46(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97] => {
                lookup_975_47(acc)
            }
            [115, 105] => lookup_975_48(acc),
            [118, 116] => lookup_975_49(acc),
            [120, 110, 45, 45, 102, 111, 114, 108, 99, 101, 115, 101, 110, 97, 45, 99, 56, 97] => {
                lookup_975_50(acc)
            }
            [108, 99] => lookup_975_51(acc),
            [108, 111, 109] => lookup_975_52(acc),
            [109, 97, 115, 115, 97, 45, 99, 97, 114, 114, 97, 114, 97] => lookup_975_53(acc),
            [114, 101, 103, 103, 105, 111, 99, 97, 108, 97, 98, 114, 105, 97] => lookup_975_54(acc),
            [115, 115] => lookup_975_55(acc),
            [115, 121, 110, 99, 108, 111, 117, 100] => lookup_975_56(acc),
            [99, 97, 109, 112, 97, 110, 105, 97] => lookup_975_57(acc),
            [109, 97, 115, 115, 97, 99, 97, 114, 114, 97, 114, 97] => lookup_975_58(acc),
            [108, 105, 103, 117, 114, 105, 97] => lookup_975_59(acc),
            [116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_975_60(acc)
            }
            [98, 114, 101, 115, 99, 105, 97] => lookup_975_61(acc),
            [102, 111, 103, 103, 105, 97] => lookup_975_62(acc),
            [115, 97, 108, 101, 114, 110, 111] => lookup_975_63(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_975_64(acc)
            }
            [97, 115, 99, 111, 108, 105, 45, 112, 105, 99, 101, 110, 111] => lookup_975_65(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_975_66(acc)
            }
            [97, 103] => lookup_975_67(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_975_68(acc)
            }
            [102, 111, 114, 108, 105, 45, 99, 101, 115, 101, 110, 97] => lookup_975_69(acc),
            [109, 111, 110, 122, 97, 98, 114, 105, 97, 110, 122, 97] => lookup_975_70(acc),
            [98, 101, 110, 101, 118, 101, 110, 116, 111] => lookup_975_71(acc),
            [118, 97, 108, 108, 101, 45, 100, 97, 111, 115, 116, 97] => lookup_975_72(acc),
            [98, 111, 122, 101, 110] => lookup_975_73(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 116, 105, 114, 111, 108] => {
                lookup_975_74(acc)
            }
            [99, 97, 109] => lookup_975_75(acc),
            [118, 97, 108, 108, 195, 169, 101, 97, 111, 115, 116, 101] => lookup_975_76(acc),
            [98, 101, 114, 103, 97, 109, 111] => lookup_975_77(acc),
            [97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => lookup_975_78(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 45, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_975_79(acc)
            }
            [105, 115, 101, 114, 110, 105, 97] => lookup_975_80(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_975_81(acc)
            }
            [98, 97] => lookup_975_82(acc),
            [99, 97, 116, 97, 110, 105, 97] => lookup_975_83(acc),
            [112, 105, 101, 100, 109, 111, 110, 116] => lookup_975_84(acc),
            [99, 117, 110, 101, 111] => lookup_975_85(acc),
            [107, 114] => lookup_975_86(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_975_87(acc)
            }
            [114, 111] => lookup_975_88(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_89(acc)
            }
            [109, 97, 114, 99, 104, 101] => lookup_975_90(acc),
            [109, 97, 114] => lookup_975_91(acc),
            [99, 114, 101, 109, 111, 110, 97] => lookup_975_92(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_975_93(acc)
            }
            [97, 115, 99, 111, 108, 105, 112, 105, 99, 101, 110, 111] => lookup_975_94(acc),
            [102, 108, 111, 114, 101, 110, 99, 101] => lookup_975_95(acc),
            [103, 101] => lookup_975_96(acc),
            [117, 109, 98] => lookup_975_97(acc),
            [112, 117] => lookup_975_98(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_975_99(acc)
            }
            [114, 103] => lookup_975_100(acc),
            [115, 97, 115, 115, 97, 114, 105] => lookup_975_101(acc),
            [118, 101, 110, 105, 99, 101] => lookup_975_102(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_975_103(acc)
            }
            [99, 97, 108] => lookup_975_104(acc),
            [98, 97, 108, 115, 97, 110] => lookup_975_105(acc),
            [109, 111, 110, 122, 97, 101, 98, 114, 105, 97, 110, 122, 97] => lookup_975_106(acc),
            [118, 97, 114, 101, 115, 101] => lookup_975_107(acc),
            [112, 97, 100, 111, 118, 97] => lookup_975_108(acc),
            [108, 97, 122, 105, 111] => lookup_975_109(acc),
            [97, 111] => lookup_975_110(acc),
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 45, 105, 56, 97] => {
                lookup_975_111(acc)
            }
            [118, 97, 111] => lookup_975_112(acc),
            [118, 97, 108, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_975_113(acc),
            [116, 111] => lookup_975_114(acc),
            [112, 101, 115, 99, 97, 114, 97] => lookup_975_115(acc),
            [116, 114, 97, 112, 97, 110, 105] => lookup_975_116(acc),
            [115, 105, 99] => lookup_975_117(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_975_118(acc)
            }
            [97, 98, 114] => lookup_975_119(acc),
            [116, 117, 115, 99, 97, 110, 121] => lookup_975_120(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_975_121(acc)
            }
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 105] => lookup_975_122(acc),
            [117, 109, 98, 114, 105, 97] => lookup_975_123(acc),
            [102, 101, 114, 114, 97, 114, 97] => lookup_975_124(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_975_125(acc)
            }
            [117, 100] => lookup_975_126(acc),
            [103, 111] => lookup_975_127(acc),
            [118, 105, 116, 101, 114, 98, 111] => lookup_975_128(acc),
            [118, 101, 110, 101, 116, 111] => lookup_975_129(acc),
            [115, 111] => lookup_975_130(acc),
            [103, 111, 114, 105, 122, 105, 97] => lookup_975_131(acc),
            [102, 111, 114, 108, 195, 172, 45, 99, 101, 115, 101, 110, 97] => lookup_975_132(acc),
            [98, 116] => lookup_975_133(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 97, 111, 115, 116, 101] => lookup_975_134(acc),
            [109, 105, 108, 97, 110] => lookup_975_135(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 99, 51, 98] => {
                lookup_975_136(acc)
            }
            [108, 111, 109, 98, 97, 114, 100, 105, 97] => lookup_975_137(acc),
            [100, 101, 108, 108, 45, 111, 103, 108, 105, 97, 115, 116, 114, 97] => {
                lookup_975_138(acc)
            }
            [97, 118] => lookup_975_139(acc),
            [99, 111, 109, 111] => lookup_975_140(acc),
            [110, 97, 112, 111, 108, 105] => lookup_975_141(acc),
            [111, 108, 98, 105, 97, 116, 101, 109, 112, 105, 111] => lookup_975_142(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_975_143(acc)
            }
            [110, 117] => lookup_975_144(acc),
            [112, 111, 114, 100, 101, 110, 111, 110, 101] => lookup_975_145(acc),
            [114, 101, 103, 103, 105, 111, 101, 109, 105, 108, 105, 97] => lookup_975_146(acc),
            [116, 97, 114, 97, 110, 116, 111] => lookup_975_147(acc),
            [117, 114, 98, 105, 110, 111, 112, 101, 115, 97, 114, 111] => lookup_975_148(acc),
            [99, 104] => lookup_975_149(acc),
            [115, 97, 114] => lookup_975_150(acc),
            [111, 108, 98, 105, 97, 45, 116, 101, 109, 112, 105, 111] => lookup_975_151(acc),
            [114, 99] => lookup_975_152(acc),
            [97, 115, 116, 105] => lookup_975_153(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_975_154(acc)
            }
            [99, 97, 114, 114, 97, 114, 97, 45, 109, 97, 115, 115, 97] => lookup_975_155(acc),
            [109, 97, 99, 101, 114, 97, 116, 97] => lookup_975_156(acc),
            [116, 101, 109, 112, 105, 111, 45, 111, 108, 98, 105, 97] => lookup_975_157(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_975_158(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_975_159(acc)
            }
            [118, 97, 108, 108, 101, 100, 45, 97, 111, 115, 116, 97] => lookup_975_160(acc),
            [101, 110, 110, 97] => lookup_975_161(acc),
            [109, 101, 100, 105, 111, 45, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_975_162(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_975_163(acc)
            }
            [109, 111, 110, 122, 97] => lookup_975_164(acc),
            [108, 117] => lookup_975_165(acc),
            [114, 97] => lookup_975_166(acc),
            [112, 105, 101, 109, 111, 110, 116, 101] => lookup_975_167(acc),
            [118, 99] => lookup_975_168(acc),
            [118, 101, 110, 101, 122, 105, 97] => lookup_975_169(acc),
            [118, 101, 114, 98, 97, 110, 105, 97] => lookup_975_170(acc),
            [118, 118] => lookup_975_171(acc),
            [105, 115] => lookup_975_172(acc),
            [98, 111, 122, 101, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_975_173(acc)
            }
            [101, 109, 105, 108, 105, 97, 45, 114, 111, 109, 97, 103, 110, 97] => {
                lookup_975_174(acc)
            }
            [118, 97, 108, 100, 97, 111, 115, 116, 97] => lookup_975_175(acc),
            [120, 110, 45, 45, 98, 97, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_975_176(acc)
            }
            [118, 97, 108, 108, 101, 97, 111, 115, 116, 97] => lookup_975_177(acc),
            [108, 101] => lookup_975_178(acc),
            [108, 111] => lookup_975_179(acc),
            [108, 116] => lookup_975_180(acc),
            [98, 111, 108, 122, 97, 110, 111] => lookup_975_181(acc),
            [98, 108] => lookup_975_182(acc),
            [99, 98] => lookup_975_183(acc),
            [109, 97, 116, 101, 114, 97] => lookup_975_184(acc),
            [110, 111, 118, 97, 114, 97] => lookup_975_185(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_186(acc)
            }
            [98, 97, 114, 105] => lookup_975_187(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_975_188(acc)
            }
            [109, 101] => lookup_975_189(acc),
            [111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_975_190(acc),
            [111, 114, 105, 115, 116, 97, 110, 111] => lookup_975_191(acc),
            [112, 97, 100, 117, 97] => lookup_975_192(acc),
            [112, 97, 108, 101, 114, 109, 111] => lookup_975_193(acc),
            [109, 111, 108] => lookup_975_194(acc),
            [112, 101, 115, 97, 114, 111, 117, 114, 98, 105, 110, 111] => lookup_975_195(acc),
            [112, 118] => lookup_975_196(acc),
            [114, 105] => lookup_975_197(acc),
            [115, 105, 114, 97, 99, 117, 115, 97] => lookup_975_198(acc),
            [105, 109] => lookup_975_199(acc),
            [115, 97, 118, 111, 110, 97] => lookup_975_200(acc),
            [109, 101, 100, 105, 111, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_975_201(acc)
            }
            [115, 111, 110, 100, 114, 105, 111] => lookup_975_202(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_203(acc)
            }
            [98, 122] => lookup_975_204(acc),
            [116, 101, 114, 110, 105] => lookup_975_205(acc),
            [118, 105, 98, 111, 45, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_975_206(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_975_207(acc)
            }
            [101, 109, 114] => lookup_975_208(acc),
            [114, 110] => lookup_975_209(acc),
            [114, 111, 109, 97] => lookup_975_210(acc),
            [115, 105, 99, 105, 108, 105, 97] => lookup_975_211(acc),
            [109, 115] => lookup_975_212(acc),
            [115, 105, 101, 110, 97] => lookup_975_213(acc),
            [102, 114, 105, 117, 108, 105, 118, 103, 105, 117, 108, 105, 97] => lookup_975_214(acc),
            [115, 105, 99, 105, 108, 121] => lookup_975_215(acc),
            [112, 117, 103] => lookup_975_216(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_975_217(acc)
            }
            [99, 97, 116, 97, 110, 122, 97, 114, 111] => lookup_975_218(acc),
            [108, 117, 99, 99, 97] => lookup_975_219(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 101, 45, 101, 104, 98] => {
                lookup_975_220(acc)
            }
            [97, 110, 100, 114, 105, 97, 116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_975_221(acc)
            }
            [97, 108, 116, 111, 97, 100, 105, 103, 101] => lookup_975_222(acc),
            [97, 111, 115, 116, 101] => lookup_975_223(acc),
            [97, 114, 101, 122, 122, 111] => lookup_975_224(acc),
            [112, 109, 110] => lookup_975_225(acc),
            [118, 97, 108, 108, 101, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_975_226(acc)
            }
            [99, 104, 105, 101, 116, 105] => lookup_975_227(acc),
            [99, 122] => lookup_975_228(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_975_229(acc)
            }
            [102, 105, 114, 101, 110, 122, 101] => lookup_975_230(acc),
            [109, 105] => lookup_975_231(acc),
            [115, 112] => lookup_975_232(acc),
            [117, 100, 105, 110, 101] => lookup_975_233(acc),
            [98, 105] => lookup_975_234(acc),
            [118, 101] => lookup_975_235(acc),
            [118, 114] => lookup_975_236(acc),
            [98, 97, 115] => lookup_975_237(acc),
            [109, 97, 110, 116, 111, 118, 97] => lookup_975_238(acc),
            [116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97, 97, 110, 100, 114, 105, 97] => {
                lookup_975_239(acc)
            }
            [116, 114, 101, 110, 116, 111] => lookup_975_240(acc),
            [118, 105, 99, 101, 110, 122, 97] => lookup_975_241(acc),
            [118, 115] => lookup_975_242(acc),
            [97, 108] => lookup_975_243(acc),
            [102, 111, 114, 108, 195, 172, 99, 101, 115, 101, 110, 97] => lookup_975_244(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_975_245(acc)
            }
            [101, 100, 117] => lookup_975_246(acc),
            [97, 103, 114, 105, 103, 101, 110, 116, 111] => lookup_975_247(acc),
            [97, 111, 115, 116, 97, 45, 118, 97, 108, 108, 101, 121] => lookup_975_248(acc),
            [114, 111, 109, 101] => lookup_975_249(acc),
            [112, 114, 97, 116, 111] => lookup_975_250(acc),
            [108, 105, 103] => lookup_975_251(acc),
            [98, 114] => lookup_975_252(acc),
            [99, 97, 114, 114, 97, 114, 97, 109, 97, 115, 115, 97] => lookup_975_253(acc),
            [115, 97] => lookup_975_254(acc),
            [117, 114, 98, 105, 110, 111, 45, 112, 101, 115, 97, 114, 111] => lookup_975_255(acc),
            [118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 97] => lookup_975_256(acc),
            [102, 109] => lookup_975_257(acc),
            [116, 111, 115, 99, 97, 110, 97] => lookup_975_258(acc),
            [118, 98] => lookup_975_259(acc),
            [116, 105, 109] => lookup_975_260(info, labels, acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 195, 172] => lookup_975_261(acc),
            [118, 97, 108, 108, 101, 101, 45, 97, 111, 115, 116, 101] => lookup_975_262(acc),
            [112, 114] => lookup_975_263(acc),
            [108, 111, 109, 98, 97, 114, 100, 121] => lookup_975_264(acc),
            [118, 100, 97] => lookup_975_265(acc),
            [102, 101] => lookup_975_266(acc),
            [109, 116] => lookup_975_267(acc),
            [103, 101, 110, 111, 97] => lookup_975_268(acc),
            [120, 110, 45, 45, 98, 117, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_975_269(acc)
            }
            [110, 111] => lookup_975_270(acc),
            [116, 114, 101, 110, 116, 105, 110, 111] => lookup_975_271(acc),
            [108, 101, 99, 99, 101] => lookup_975_272(acc),
            [112, 101] => lookup_975_273(acc),
            [99, 110] => lookup_975_274(acc),
            [98, 103] => lookup_975_275(acc),
            [120, 110, 45, 45, 102, 111, 114, 108, 45, 99, 101, 115, 101, 110, 97, 45, 102, 99, 98] => {
                lookup_975_276(acc)
            }
            [49, 54, 45, 98] => lookup_975_277(acc),
            [102, 105] => lookup_975_278(acc),
            [99, 97, 108, 116, 97, 110, 105, 115, 115, 101, 116, 116, 97] => lookup_975_279(acc),
            [97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105] => {
                lookup_975_280(acc)
            }
            [105, 109, 112, 101, 114, 105, 97] => lookup_975_281(acc),
            [103, 111, 118] => lookup_975_282(acc),
            [101, 110] => lookup_975_283(acc),
            [112, 105, 115, 116, 111, 105, 97] => lookup_975_284(acc),
            [109, 111, 100, 101, 110, 97] => lookup_975_285(acc),
            [115, 117, 101, 100, 116, 105, 114, 111, 108] => lookup_975_286(acc),
            [102, 118, 103] => lookup_975_287(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_288(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_975_289(acc)
            }
            [108, 117, 99, 97, 110, 105, 97] => lookup_975_290(acc),
            [99, 108] => lookup_975_291(acc),
            [99, 116] => lookup_975_292(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_975_293(acc)
            }
            [118, 97, 108, 45, 100, 97, 111, 115, 116, 97] => lookup_975_294(acc),
            [109, 111, 108, 105, 115, 101] => lookup_975_295(acc),
            [102, 101, 114, 109, 111] => lookup_975_296(acc),
            [102, 114, 111, 115, 105, 110, 111, 110, 101] => lookup_975_297(acc),
            [108, 97, 113, 117, 105, 108, 97] => lookup_975_298(acc),
            [116, 101] => lookup_975_299(acc),
            [98, 111, 108, 122, 97, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_975_300(acc)
            }
            [112, 97] => lookup_975_301(acc),
            [109, 98] => lookup_975_302(acc),
            [112, 97, 114, 109, 97] => lookup_975_303(acc),
            [116, 111, 115] => lookup_975_304(acc),
            [98, 111, 108, 111, 103, 110, 97] => lookup_975_305(acc),
            [102, 103] => lookup_975_306(acc),
            [103, 114, 111, 115, 115, 101, 116, 111] => lookup_975_307(acc),
            [112, 101, 114, 117, 103, 105, 97] => lookup_975_308(acc),
            [116, 111, 114, 105, 110, 111] => lookup_975_309(acc),
            [118, 97, 108, 108, 195, 169, 101, 100, 97, 111, 115, 116, 101] => lookup_975_310(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 116, 105, 114, 111, 108] => {
                lookup_975_311(acc)
            }
            [116, 112] => lookup_975_312(acc),
            [115, 118] => lookup_975_313(acc),
            [116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_975_314(acc)
            }
            [115, 97, 114, 100, 105, 110, 105, 97] => lookup_975_315(acc),
            [112, 111] => lookup_975_316(acc),
            [114, 105, 101, 116, 105] => lookup_975_317(acc),
            [116, 118] => lookup_975_318(acc),
            [109, 101, 115, 115, 105, 110, 97] => lookup_975_319(acc),
            [114, 97, 103, 117, 115, 97] => lookup_975_320(acc),
            [98, 97, 115, 105, 108, 105, 99, 97, 116, 97] => lookup_975_321(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_975_322(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_975_323(acc)
            }
            [108, 105] => lookup_975_324(acc),
            [108, 105, 118, 111, 114, 110, 111] => lookup_975_325(acc),
            [98, 105, 101, 108, 108, 97] => lookup_975_326(acc),
            [112, 105] => lookup_975_327(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_975_328(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_975_329(acc)
            }
            [97, 111, 115, 116, 97] => lookup_975_330(acc),
            [99, 97, 109, 112, 111, 98, 97, 115, 115, 111] => lookup_975_331(acc),
            [118, 101, 114, 111, 110, 97] => lookup_975_332(acc),
            [118, 105, 98, 111, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_975_333(acc),
            [51, 50, 45, 98] => lookup_975_334(acc),
            [114, 105, 109, 105, 110, 105] => lookup_975_335(acc),
            [97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105] => {
                lookup_975_336(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_975_337(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 45, 116, 105, 114, 111, 108, 45, 54, 118, 98] => {
                lookup_975_338(acc)
            }
            [116, 101, 114, 97, 109, 111] => lookup_975_339(acc),
            [101, 109, 105, 108, 105, 97, 114, 111, 109, 97, 103, 110, 97] => lookup_975_340(acc),
            [115, 97, 114, 100, 101, 103, 110, 97] => lookup_975_341(acc),
            [108, 97, 122] => lookup_975_342(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_975_343(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 45, 109, 99, 98] => {
                lookup_975_344(acc)
            }
            [98, 110] => lookup_975_345(acc),
            [99, 114] => lookup_975_346(acc),
            [98, 101, 108, 108, 117, 110, 111] => lookup_975_347(acc),
            [99, 97, 103, 108, 105, 97, 114, 105] => lookup_975_348(acc),
            [114, 101, 103, 103, 105, 111, 45, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_975_349(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 97, 100, 105, 103, 101] => {
                lookup_975_350(acc)
            }
            [116, 97] => lookup_975_351(acc),
            [109, 105, 108, 97, 110, 111] => lookup_975_352(acc),
            [116, 101, 109, 112, 105, 111, 111, 108, 98, 105, 97] => lookup_975_353(acc),
            [109, 99] => lookup_975_354(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_975_355(acc)
            }
            [98, 115] => lookup_975_356(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 116, 105, 114, 111, 108, 45, 115, 122, 98] => {
                lookup_975_357(acc)
            }
            [115, 195, 188, 100, 116, 105, 114, 111, 108] => lookup_975_358(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_975_359(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_975_360(acc)
            }
            [54, 52, 45, 98] => lookup_975_361(acc),
            [108, 97, 45, 115, 112, 101, 122, 105, 97] => lookup_975_362(acc),
            [97, 110, 99, 111, 110, 97] => lookup_975_363(acc),
            [97, 118, 101, 108, 108, 105, 110, 111] => lookup_975_364(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_975_365(acc)
            }
            [99, 97, 108, 97, 98, 114, 105, 97] => lookup_975_366(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_975_367(acc)
            }
            [112, 105, 97, 99, 101, 110, 122, 97] => lookup_975_368(acc),
            [112, 111, 116, 101, 110, 122, 97] => lookup_975_369(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_975_370(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_975_371(acc)
            }
            [114, 97, 118, 101, 110, 110, 97] => lookup_975_372(acc),
            [97, 116] => lookup_975_373(acc),
            [110, 101, 101, 110] => lookup_975_374(info, labels, acc),
            [97, 113] => lookup_975_375(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_376(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_377(acc)
            }
            [98, 114, 105, 110, 100, 105, 115, 105] => lookup_975_378(acc),
            [118, 97] => lookup_975_379(acc),
            [109, 111, 110, 122, 97, 45, 98, 114, 105, 97, 110, 122, 97] => lookup_975_380(acc),
            [112, 100] => lookup_975_381(acc),
            [112, 117, 103, 108, 105, 97] => lookup_975_382(acc),
            [99, 111] => lookup_975_383(acc),
            [108, 111, 100, 105] => lookup_975_384(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 45, 109, 101, 100, 105, 111] => {
                lookup_975_385(acc)
            }
            [116, 97, 97] => lookup_975_386(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_975_387(acc)
            }
            [115, 114] => lookup_975_388(acc),
            [118, 101, 114, 99, 101, 108, 108, 105] => lookup_975_389(acc),
            [108, 97, 116, 105, 110, 97] => lookup_975_390(acc),
            [116, 117, 114, 105, 110] => lookup_975_391(acc),
            [109, 111] => lookup_975_392(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_975_393(acc)
            }
            [118, 105] => lookup_975_394(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_395(acc)
            }
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 105] => lookup_975_396(acc),
            [116, 114] => lookup_975_397(acc),
            [112, 103] => lookup_975_398(acc),
            [120, 110, 45, 45, 98, 111, 122, 101, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 50, 111, 98] => {
                lookup_975_399(acc)
            }
            [99, 97, 115, 101, 114, 116, 97] => lookup_975_400(acc),
            [99, 115] => lookup_975_401(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_402(acc)
            }
            [97, 113, 117, 105, 108, 97] => lookup_975_403(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_404(acc)
            }
            [98, 117, 108, 115, 97, 110] => lookup_975_405(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 45, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_975_406(acc)
            }
            [108, 97, 115, 112, 101, 122, 105, 97] => lookup_975_407(acc),
            [102, 114] => lookup_975_408(acc),
            [110, 97] => lookup_975_409(acc),
            [111, 114] => lookup_975_410(acc),
            [114, 109] => lookup_975_411(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_975_412(acc)
            }
            [102, 99] => lookup_975_413(acc),
            [99, 97] => lookup_975_414(acc),
            [97, 108, 101, 115, 115, 97, 110, 100, 114, 105, 97] => lookup_975_415(acc),
            [112, 97, 118, 105, 97] => lookup_975_416(acc),
            [116, 114, 101, 118, 105, 115, 111] => lookup_975_417(acc),
            [109, 111, 110, 122, 97, 45, 101, 45, 100, 101, 108, 108, 97, 45, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_975_418(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_975_419(acc)
            }
            [99, 101] => lookup_975_420(acc),
            [109, 110] => lookup_975_421(acc),
            [111, 103] => lookup_975_422(acc),
            [97, 98, 114, 117, 122, 122, 111] => lookup_975_423(acc),
            [114, 101] => lookup_975_424(acc),
            [97, 110, 100, 114, 105, 97, 45, 116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_975_425(acc)
            }
            [111, 116] => lookup_975_426(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_975_427(acc)
            }
            [120, 110, 45, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 50, 97] => {
                lookup_975_428(acc)
            }
            [118, 97, 108, 108, 195, 169, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_975_429(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_975_430(acc)
            }
            [97, 111, 115, 116, 97, 118, 97, 108, 108, 101, 121] => lookup_975_431(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_975_432(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_976() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_978() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_980_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_980<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_980_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_981() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_983_0(acc),
            [112, 98] => lookup_983_1(acc),
            [101, 100] => lookup_983_2(acc),
            [111, 103] => lookup_983_3(acc),
            [103, 118] => lookup_983_4(acc),
            [105, 116] => lookup_983_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_984() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_985_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_985_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_985_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_985<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116, 104] => lookup_985_0(acc),
            [105, 110, 102, 111] => lookup_985_1(acc),
            [103, 111, 118] => lookup_985_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_986() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_989_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_989_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_989_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_989_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_989_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 99, 108, 111, 117, 100] => lookup_989_0(acc),
            [109, 105, 108] => lookup_989_1(acc),
            [99, 111, 109] => lookup_989_2(labels, acc),
            [110, 121, 109] => lookup_989_3(acc),
            [103, 111, 118] => lookup_989_4(acc),
            [111, 102] => lookup_989_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_990() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_993() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_996() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_997() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_998() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_999() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1001() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1002() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1003() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1004() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1005() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1006<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1006_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1007() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1008_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1009_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1009_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1009_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1009_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1009_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1009_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1009<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101, 114, 115, 101, 105, 110, 101] => lookup_1009_0(acc),
            [115, 104, 97, 99, 107, 110, 101, 116] => lookup_1009_1(acc),
            [109, 105, 110, 101] => lookup_1009_2(acc),
            [110, 111, 109] => lookup_1009_3(acc),
            [117, 119, 117] => lookup_1009_4(acc),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 99, 108, 111, 117, 100] => {
                lookup_1009_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1010() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1013_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1013_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1013_0(acc),
            [115, 116, 111, 114, 101] => lookup_1013_1(acc),
            [109, 105, 108] => lookup_1013_2(acc),
            [101, 100, 117] => lookup_1013_3(acc),
            [110, 111, 109] => lookup_1013_4(acc),
            [110, 111, 104, 111] => lookup_1013_5(acc),
            [112, 114, 105, 110, 99, 105, 112, 101] => lookup_1013_6(acc),
            [115, 97, 111, 116, 111, 109, 101] => lookup_1013_7(acc),
            [99, 111] => lookup_1013_8(acc),
            [99, 111, 110, 115, 117, 108, 97, 100, 111] => lookup_1013_9(acc),
            [99, 111, 109] => lookup_1013_10(acc),
            [101, 109, 98, 97, 105, 120, 97, 100, 97] => lookup_1013_11(acc),
            [103, 111, 118] => lookup_1013_12(acc),
            [110, 101, 116] => lookup_1013_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1014() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1017() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1018() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1019() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1024() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1027() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1028() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1029() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1030() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1031_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1031<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1031_0(acc),
            [120, 110, 45, 45, 104, 49, 97, 104, 110] => lookup_1031_1(acc),
            [120, 110, 45, 45, 56, 48, 97, 97, 97, 48, 99, 118, 97, 99] => lookup_1031_2(acc),
            [120, 110, 45, 45, 57, 48, 97, 49, 97, 102] => lookup_1031_3(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 108, 56, 98] => lookup_1031_4(acc),
            [120, 110, 45, 45, 106, 49, 97, 100, 112] => lookup_1031_5(acc),
            [120, 110, 45, 45, 104, 49, 97, 108, 105, 122] => lookup_1031_6(acc),
            [120, 110, 45, 45, 57, 48, 97, 109, 99] => lookup_1031_7(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1031_8(acc),
            [120, 110, 45, 45, 52, 49, 97] => lookup_1031_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1032() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1033_0(acc),
            [99, 111] => lookup_1033_1(acc),
            [109, 105, 108] => lookup_1033_2(acc),
            [111, 114, 103] => lookup_1033_3(acc),
            [103, 111, 118] => lookup_1033_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1034_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1034_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1034<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_1034_0(acc),
            [103, 111, 118] => lookup_1034_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1034_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1035_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1035<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1035_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1036() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1038() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1039() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 99, 97, 108, 104, 111, 115, 116] => lookup_1042_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1042_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1042_0(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 103, 98] => lookup_1042_1(acc),
            [116, 99, 112, 52] => lookup_1042_2(acc),
            [121, 111, 109, 98, 111] => lookup_1042_3(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 105, 101] => lookup_1042_4(acc),
            [99, 111] => lookup_1042_5(acc),
            [102, 105, 108, 101, 103, 101, 97, 114] => lookup_1042_6(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1042_7(acc),
            [103, 111, 118] => lookup_1042_8(acc),
            [110, 111, 105, 112] => lookup_1042_9(acc),
            [115, 121, 110, 111, 108, 111, 103, 121] => lookup_1042_10(acc),
            [99, 111, 117, 107] => lookup_1042_11(acc),
            [109, 121, 100, 115] => lookup_1042_12(acc),
            [99, 54, 54] => lookup_1042_13(acc),
            [110, 99, 116, 117] => lookup_1042_14(acc),
            [110, 121, 109] => lookup_1042_15(acc),
            [112, 114, 105, 118] => lookup_1042_16(acc),
            [100, 97, 112, 108, 105, 101] => lookup_1042_17(labels, acc),
            [119, 98, 113] => lookup_1042_18(acc),
            [111, 114, 103] => lookup_1042_19(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 100, 101] => lookup_1042_20(acc),
            [109, 99, 100, 105, 114] => lookup_1042_21(acc),
            [105, 116, 115] => lookup_1042_22(acc),
            [108, 111, 104, 109, 117, 115] => lookup_1042_23(acc),
            [110, 101, 116] => lookup_1042_24(acc),
            [97, 99] => lookup_1042_25(acc),
            [104, 111, 112, 116, 111] => lookup_1042_26(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1042_27(acc),
            [101, 100, 117] => lookup_1042_28(acc),
            [101, 100, 103, 101, 115, 116, 97, 99, 107] => lookup_1042_29(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 106, 112] => lookup_1042_30(acc),
            [103, 108, 105, 116, 99, 104] => lookup_1042_31(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 97, 117] => lookup_1042_32(acc),
            [115, 111, 117, 110, 100, 99, 97, 115, 116] => lookup_1042_33(acc),
            [100, 100, 110, 115] => lookup_1042_34(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_1042_35(acc),
            [105, 50, 51, 52] => lookup_1042_36(acc),
            [110, 111, 104, 111, 115, 116] => lookup_1042_37(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 115, 103] => lookup_1042_38(acc),
            [98, 114, 97, 115, 105, 108, 105, 97] => lookup_1042_39(acc),
            [109, 99, 112, 101] => lookup_1042_40(acc),
            [100, 110, 115, 102, 111, 114] => lookup_1042_41(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1042_42(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_1042_43(acc),
            [108, 111, 103, 105, 110, 116, 111] => lookup_1042_44(acc),
            [117, 107, 99, 111] => lookup_1042_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1043() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 118] => lookup_1044_0(acc),
            [101, 100, 117] => lookup_1044_1(acc),
            [109, 101, 100] => lookup_1044_2(acc),
            [105, 110, 102, 111] => lookup_1044_3(acc),
            [111, 114, 103] => lookup_1044_4(acc),
            [99, 111, 109] => lookup_1044_5(acc),
            [103, 111, 118] => lookup_1044_6(acc),
            [110, 101, 116] => lookup_1044_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1045() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1050() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1051() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1052() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1053() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1054_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 99] => lookup_1054_3_0(acc),
            [108, 116, 100] => lookup_1054_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1054_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1054_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1054_0(acc),
            [110, 111, 109] => lookup_1054_1(acc),
            [116, 116] => lookup_1054_2(acc),
            [99, 111] => lookup_1054_3(labels, acc),
            [99, 111, 109] => lookup_1054_4(acc),
            [111, 114, 103] => lookup_1054_5(acc),
            [114, 111] => lookup_1054_6(acc),
            [110, 101, 116] => lookup_1054_7(acc),
            [116, 118] => lookup_1054_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1055() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1057() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1061_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1062() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1063() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1065_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1065_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1065_2_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1065_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1065_2_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1065_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1065_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_1065_2_0(info, labels, acc),
            [99, 117, 115, 116, 111, 109] => lookup_1065_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1065_3_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1065_3_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1065_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [102, 108, 116] => lookup_1065_3_0_0(acc),
            [117, 115, 114] => lookup_1065_3_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1065_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_1065_3_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1065_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1065_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1065<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1065_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1065_1(acc),
            [109, 101, 116, 97, 99, 101, 110, 116, 114, 117, 109] => {
                lookup_1065_2(info, labels, acc)
            }
            [109, 117, 110, 105] => lookup_1065_3(info, labels, acc),
            [101, 52] => lookup_1065_4(acc),
            [114, 101, 97, 108, 109] => lookup_1065_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1066_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_1066_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1067() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1068() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1072() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1073() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1074() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1075() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1076() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1077() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1078() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1079() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1080() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1081() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1082() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1087() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1088_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1088_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 54, 54] => lookup_1088_0(acc),
            [104, 115] => lookup_1088_1(acc),
            [116, 114, 105, 116, 111, 110] => lookup_1088_2(info, labels, acc),
            [108, 105, 109, 97] => lookup_1088_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1089_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1089_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1090() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 119] => lookup_1091_55_0(acc),
            [117, 109, 105, 103] => lookup_1091_55_1(acc),
            [117, 122, 115] => lookup_1091_55_2(acc),
            [107, 109, 112, 115, 112] => lookup_1091_55_3(acc),
            [119, 105, 111, 115] => lookup_1091_55_4(acc),
            [112, 117, 112] => lookup_1091_55_5(acc),
            [111, 117, 109] => lookup_1091_55_6(acc),
            [117, 109] => lookup_1091_55_7(acc),
            [117, 119] => lookup_1091_55_8(acc),
            [115, 114] => lookup_1091_55_9(acc),
            [119, 105, 116, 100] => lookup_1091_55_10(acc),
            [112, 115, 115, 101] => lookup_1091_55_11(acc),
            [119, 122, 109, 105, 117, 119] => lookup_1091_55_12(acc),
            [119, 115, 107, 114] => lookup_1091_55_13(acc),
            [117, 103] => lookup_1091_55_14(acc),
            [119, 105, 110, 98] => lookup_1091_55_15(acc),
            [112, 105, 119] => lookup_1091_55_16(acc),
            [119, 117, 111, 122] => lookup_1091_55_17(acc),
            [105, 115] => lookup_1091_55_18(acc),
            [119, 105, 105, 104] => lookup_1091_55_19(acc),
            [107, 111, 110, 115, 117, 108, 97, 116] => lookup_1091_55_20(acc),
            [111, 105, 114, 109] => lookup_1091_55_21(acc),
            [112, 97] => lookup_1091_55_22(acc),
            [97, 112] => lookup_1091_55_23(acc),
            [112, 115, 112] => lookup_1091_55_24(acc),
            [115, 97] => lookup_1091_55_25(acc),
            [115, 107, 111] => lookup_1091_55_26(acc),
            [122, 112] => lookup_1091_55_27(acc),
            [115, 111] => lookup_1091_55_28(acc),
            [119, 105, 119] => lookup_1091_55_29(acc),
            [119, 105, 102] => lookup_1091_55_30(acc),
            [115, 100, 110] => lookup_1091_55_31(acc),
            [117, 112, 112, 111] => lookup_1091_55_32(acc),
            [107, 119, 112] => lookup_1091_55_33(acc),
            [117, 103, 105, 109] => lookup_1091_55_34(acc),
            [117, 112, 111, 119] => lookup_1091_55_35(acc),
            [115, 116, 97, 114, 111, 115, 116, 119, 111] => lookup_1091_55_36(acc),
            [112, 111] => lookup_1091_55_37(acc),
            [109, 117, 112] => lookup_1091_55_38(acc),
            [117, 115] => lookup_1091_55_39(acc),
            [103, 114, 105, 119] => lookup_1091_55_40(acc),
            [107, 112, 112, 115, 112] => lookup_1091_55_41(acc),
            [107, 119, 112, 115, 112] => lookup_1091_55_42(acc),
            [114, 122, 103, 119] => lookup_1091_55_43(acc),
            [105, 99] => lookup_1091_55_44(acc),
            [119, 115, 97] => lookup_1091_55_45(acc),
            [112, 105, 110, 98] => lookup_1091_55_46(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112, 97, 114, 101, 110, 97] => lookup_1091_0(acc),
            [107, 97, 108, 105, 115, 122] => lookup_1091_1(acc),
            [112, 114, 111, 99, 104, 111, 119, 105, 99, 101] => lookup_1091_2(acc),
            [108, 101, 103, 110, 105, 99, 97] => lookup_1091_3(acc),
            [112, 114, 117, 115, 122, 107, 111, 119] => lookup_1091_4(acc),
            [116, 121, 99, 104, 121] => lookup_1091_5(acc),
            [119, 108, 111, 99, 108, 97, 119, 101, 107] => lookup_1091_6(acc),
            [109, 97, 122, 111, 119, 115, 122, 101] => lookup_1091_7(acc),
            [109, 97, 108, 98, 111, 114, 107] => lookup_1091_8(acc),
            [110, 121, 115, 97] => lookup_1091_9(acc),
            [111, 115, 116, 114, 111, 119, 119, 108, 107, 112] => lookup_1091_10(acc),
            [115, 107, 111, 99, 122, 111, 119] => lookup_1091_11(acc),
            [115, 122, 99, 122, 101, 99, 105, 110] => lookup_1091_12(acc),
            [115, 111, 115, 110, 111, 119, 105, 101, 99] => lookup_1091_13(acc),
            [111, 108, 107, 117, 115, 122] => lookup_1091_14(acc),
            [119, 97, 114, 115, 122, 97, 119, 97] => lookup_1091_15(acc),
            [115, 97, 110, 111, 107] => lookup_1091_16(acc),
            [115, 119, 105, 110, 111, 117, 106, 115, 99, 105, 101] => lookup_1091_17(acc),
            [107, 114, 97, 115, 110, 105, 107] => lookup_1091_18(acc),
            [103, 100, 121, 110, 105, 97] => lookup_1091_19(acc),
            [115, 111, 112, 111, 116] => lookup_1091_20(acc),
            [107, 97, 114, 112, 97, 99, 122] => lookup_1091_21(acc),
            [107, 97, 116, 111, 119, 105, 99, 101] => lookup_1091_22(acc),
            [103, 109, 105, 110, 97] => lookup_1091_23(acc),
            [114, 97, 100, 111, 109] => lookup_1091_24(acc),
            [111, 115, 116, 114, 111, 100, 97] => lookup_1091_25(acc),
            [101, 100, 117] => lookup_1091_26(acc),
            [112, 111, 110, 105, 97, 116, 111, 119, 97] => lookup_1091_27(acc),
            [101, 108, 98, 108, 97, 103] => lookup_1091_28(acc),
            [97, 116, 109] => lookup_1091_29(acc),
            [114, 122, 101, 115, 122, 111, 119] => lookup_1091_30(acc),
            [116, 97, 114, 103, 105] => lookup_1091_31(acc),
            [119, 108, 111, 99, 108] => lookup_1091_32(acc),
            [97, 114, 116] => lookup_1091_33(acc),
            [112, 111, 109, 111, 114, 122, 101] => lookup_1091_34(acc),
            [110, 97, 107, 108, 111] => lookup_1091_35(acc),
            [97, 117, 103, 117, 115, 116, 111, 119] => lookup_1091_36(acc),
            [109, 105, 97, 115, 116, 97] => lookup_1091_37(acc),
            [108, 111, 109, 122, 97] => lookup_1091_38(acc),
            [122, 97, 103, 97, 110] => lookup_1091_39(acc),
            [109, 105, 101, 108, 110, 111] => lookup_1091_40(acc),
            [112, 99] => lookup_1091_41(acc),
            [115, 122, 107, 111, 108, 97] => lookup_1091_42(acc),
            [116, 114, 97, 118, 101, 108] => lookup_1091_43(acc),
            [112, 111, 108, 107, 111, 119, 105, 99, 101] => lookup_1091_44(acc),
            [98, 105, 97, 108, 111, 119, 105, 101, 122, 97] => lookup_1091_45(acc),
            [112, 111, 100, 108, 97, 115, 105, 101] => lookup_1091_46(acc),
            [115, 119, 105, 100, 110, 105, 99, 97] => lookup_1091_47(acc),
            [115, 119, 105, 101, 98, 111, 100, 122, 105, 110] => lookup_1091_48(acc),
            [107, 97, 122, 105, 109, 105, 101, 114, 122, 45, 100, 111, 108, 110, 121] => {
                lookup_1091_49(acc)
            }
            [119, 101, 103, 114, 111, 119] => lookup_1091_50(acc),
            [103, 108, 105, 119, 105, 99, 101] => lookup_1091_51(acc),
            [100, 108, 117, 103, 111, 108, 101, 107, 97] => lookup_1091_52(acc),
            [109, 114, 97, 103, 111, 119, 111] => lookup_1091_53(acc),
            [115, 122, 99, 122, 121, 116, 110, 111] => lookup_1091_54(acc),
            [103, 111, 118] => lookup_1091_55(labels, acc),
            [99, 122, 101, 115, 116] => lookup_1091_56(acc),
            [122, 97, 114, 111, 119] => lookup_1091_57(acc),
            [119, 97, 114, 109, 105, 97] => lookup_1091_58(acc),
            [107, 101, 116, 114, 122, 121, 110] => lookup_1091_59(acc),
            [107, 97, 114, 116, 117, 122, 121] => lookup_1091_60(acc),
            [99, 122, 101, 108, 97, 100, 122] => lookup_1091_61(acc),
            [112, 105, 108, 97] => lookup_1091_62(acc),
            [112, 111, 100, 104, 97, 108, 101] => lookup_1091_63(acc),
            [99, 105, 101, 115, 122, 121, 110] => lookup_1091_64(acc),
            [98, 105, 97, 108, 121, 115, 116, 111, 107] => lookup_1091_65(acc),
            [115, 108, 97, 115, 107] => lookup_1091_66(acc),
            [110, 101, 116] => lookup_1091_67(acc),
            [97, 103, 114, 111] => lookup_1091_68(acc),
            [110, 111, 119, 97, 114, 117, 100, 97] => lookup_1091_69(acc),
            [103, 110, 105, 101, 122, 110, 111] => lookup_1091_70(acc),
            [109, 105, 101, 108, 101, 99] => lookup_1091_71(acc),
            [116, 97, 114, 110, 111, 98, 114, 122, 101, 103] => lookup_1091_72(acc),
            [122, 97, 99, 104, 112, 111, 109, 111, 114] => lookup_1091_73(acc),
            [117, 110, 105, 99, 108, 111, 117, 100] => lookup_1091_74(acc),
            [107, 97, 115, 122, 117, 98, 121] => lookup_1091_75(acc),
            [108, 101, 99, 122, 110, 97] => lookup_1091_76(acc),
            [97, 105, 100] => lookup_1091_77(acc),
            [108, 117, 98, 105, 110] => lookup_1091_78(acc),
            [103, 115, 109] => lookup_1091_79(acc),
            [112, 117, 108, 97, 119, 121] => lookup_1091_80(acc),
            [115, 116, 97, 108, 111, 119, 97, 45, 119, 111, 108, 97] => lookup_1091_81(acc),
            [116, 103, 111, 114, 121] => lookup_1091_82(acc),
            [119, 97, 119] => lookup_1091_83(acc),
            [119, 105, 101, 108, 117, 110] => lookup_1091_84(acc),
            [115, 101, 120] => lookup_1091_85(acc),
            [98, 111, 108, 101, 115, 108, 97, 119, 105, 101, 99] => lookup_1091_86(acc),
            [117, 115, 116, 107, 97] => lookup_1091_87(acc),
            [98, 101, 115, 107, 105, 100, 121] => lookup_1091_88(acc),
            [103, 100, 97] => lookup_1091_89(acc),
            [119, 114, 111, 99] => lookup_1091_90(acc),
            [108, 101, 98, 111, 114, 107] => lookup_1091_91(acc),
            [116, 109] => lookup_1091_92(acc),
            [108, 117, 107, 111, 119] => lookup_1091_93(acc),
            [122, 103, 111, 114, 97] => lookup_1091_94(acc),
            [122, 103, 111, 114, 122, 101, 108, 101, 99] => lookup_1091_95(acc),
            [115, 107, 108, 101, 112] => lookup_1091_96(acc),
            [115, 117, 119, 97, 108, 107, 105] => lookup_1091_97(acc),
            [114, 121, 98, 110, 105, 107] => lookup_1091_98(acc),
            [110, 105, 101, 114, 117, 99, 104, 111, 109, 111, 115, 99, 105] => lookup_1091_99(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1091_100(acc),
            [98, 105, 101, 108, 97, 119, 97] => lookup_1091_101(acc),
            [107, 111, 98, 105, 101, 114, 122, 121, 99, 101] => lookup_1091_102(acc),
            [115, 116, 97, 114, 97, 99, 104, 111, 119, 105, 99, 101] => lookup_1091_103(acc),
            [115, 108, 117, 112, 115, 107] => lookup_1091_104(acc),
            [98, 101, 101, 112] => lookup_1091_105(acc),
            [108, 117, 98, 97, 114, 116, 111, 119] => lookup_1091_106(acc),
            [111, 112, 111, 99, 122, 110, 111] => lookup_1091_107(acc),
            [105, 110, 102, 111] => lookup_1091_108(acc),
            [112, 114, 105, 118] => lookup_1091_109(acc),
            [106, 97, 119, 111, 114, 122, 110, 111] => lookup_1091_110(acc),
            [107, 111, 110, 115, 107, 111, 119, 111, 108, 97] => lookup_1091_111(acc),
            [119, 111, 108, 111, 109, 105, 110] => lookup_1091_112(acc),
            [111, 114, 103] => lookup_1091_113(acc),
            [111, 108, 97, 119, 97] => lookup_1091_114(acc),
            [112, 111, 122, 110, 97, 110] => lookup_1091_115(acc),
            [109, 101, 100] => lookup_1091_116(acc),
            [101, 108, 107] => lookup_1091_117(acc),
            [103, 100, 97, 110, 115, 107] => lookup_1091_118(acc),
            [110, 111, 109] => lookup_1091_119(acc),
            [115, 104, 111, 112] => lookup_1091_120(acc),
            [105, 108, 97, 119, 97] => lookup_1091_121(acc),
            [111, 115, 116, 114, 111, 119, 105, 101, 99] => lookup_1091_122(acc),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_1091_123(acc),
            [108, 97, 112, 121] => lookup_1091_124(acc),
            [98, 105, 101, 115, 122, 99, 122, 97, 100, 121] => lookup_1091_125(acc),
            [114, 97, 119, 97, 45, 109, 97, 122] => lookup_1091_126(acc),
            [99, 111, 109] => lookup_1091_127(acc),
            [106, 101, 108, 101, 110, 105, 97, 45, 103, 111, 114, 97] => lookup_1091_128(acc),
            [107, 114, 97, 107, 111, 119] => lookup_1091_129(acc),
            [109, 105, 108] => lookup_1091_130(acc),
            [119, 97, 108, 98, 114, 122, 121, 99, 104] => lookup_1091_131(acc),
            [111, 115, 116, 114, 111, 108, 101, 107, 97] => lookup_1091_132(acc),
            [107, 108, 111, 100, 122, 107, 111] => lookup_1091_133(acc),
            [111, 108, 115, 122, 116, 121, 110] => lookup_1091_134(acc),
            [108, 105, 109, 97, 110, 111, 119, 97] => lookup_1091_135(acc),
            [98, 121, 100, 103, 111, 115, 122, 99, 122] => lookup_1091_136(acc),
            [106, 103, 111, 114, 97] => lookup_1091_137(acc),
            [109, 101, 100, 105, 97] => lookup_1091_138(acc),
            [112, 111, 119, 105, 97, 116] => lookup_1091_139(acc),
            [107, 111, 110, 105, 110] => lookup_1091_140(acc),
            [115, 111, 115] => lookup_1091_141(acc),
            [112, 105, 115, 122] => lookup_1091_142(acc),
            [99, 111] => lookup_1091_143(acc),
            [98, 97, 98, 105, 97, 45, 103, 111, 114, 97] => lookup_1091_144(acc),
            [98, 121, 116, 111, 109] => lookup_1091_145(acc),
            [115, 116, 97, 114, 103, 97, 114, 100] => lookup_1091_146(acc),
            [116, 117, 114, 101, 107] => lookup_1091_147(acc),
            [112, 111, 109, 111, 114, 115, 107, 105, 101] => lookup_1091_148(acc),
            [119, 114, 111, 99, 108, 97, 119] => lookup_1091_149(acc),
            [108, 117, 98, 108, 105, 110] => lookup_1091_150(acc),
            [103, 114, 97, 106, 101, 119, 111] => lookup_1091_151(acc),
            [107, 101, 112, 110, 111] => lookup_1091_152(acc),
            [111, 108, 101, 99, 107, 111] => lookup_1091_153(acc),
            [112, 114, 122, 101, 119, 111, 114, 115, 107] => lookup_1091_154(acc),
            [109, 97, 108, 111, 112, 111, 108, 115, 107, 97] => lookup_1091_155(acc),
            [115, 101, 106, 110, 121] => lookup_1091_156(acc),
            [109, 97, 105, 108] => lookup_1091_157(acc),
            [119, 111, 100, 122, 105, 115, 108, 97, 119] => lookup_1091_158(acc),
            [97, 117, 116, 111] => lookup_1091_159(acc),
            [103, 108, 111, 103, 111, 119] => lookup_1091_160(acc),
            [116, 117, 114, 121, 115, 116, 121, 107, 97] => lookup_1091_161(acc),
            [108, 111, 119, 105, 99, 122] => lookup_1091_162(acc),
            [122, 97, 107, 111, 112, 97, 110, 101] => lookup_1091_163(acc),
            [98, 105, 122] => lookup_1091_164(acc),
            [114, 101, 108] => lookup_1091_165(acc),
            [98, 101, 100, 122, 105, 110] => lookup_1091_166(acc),
            [111, 112, 111, 108, 101] => lookup_1091_167(acc),
            [115, 119, 105, 100, 110, 105, 107] => lookup_1091_168(acc),
            [107, 111, 108, 111, 98, 114, 122, 101, 103] => lookup_1091_169(acc),
            [107, 117, 116, 110, 111] => lookup_1091_170(acc),
            [109, 97, 122, 117, 114, 121] => lookup_1091_171(acc),
            [108, 101, 122, 97, 106, 115, 107] => lookup_1091_172(acc),
            [103, 111, 114, 108, 105, 99, 101] => lookup_1091_173(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1092_41_0(acc),
            [97, 108] => lookup_1092_41_1(acc),
            [97, 112] => lookup_1092_41_2(acc),
            [101, 115] => lookup_1092_41_3(acc),
            [112, 97] => lookup_1092_41_4(acc),
            [103, 111] => lookup_1092_41_5(acc),
            [112, 101] => lookup_1092_41_6(acc),
            [116, 111] => lookup_1092_41_7(acc),
            [114, 114] => lookup_1092_41_8(acc),
            [100, 102] => lookup_1092_41_9(acc),
            [114, 111] => lookup_1092_41_10(acc),
            [109, 97] => lookup_1092_41_11(acc),
            [114, 106] => lookup_1092_41_12(acc),
            [98, 97] => lookup_1092_41_13(acc),
            [99, 101] => lookup_1092_41_14(acc),
            [97, 109] => lookup_1092_41_15(acc),
            [112, 98] => lookup_1092_41_16(acc),
            [112, 114] => lookup_1092_41_17(acc),
            [115, 99] => lookup_1092_41_18(acc),
            [115, 101] => lookup_1092_41_19(acc),
            [109, 103] => lookup_1092_41_20(acc),
            [114, 110] => lookup_1092_41_21(acc),
            [109, 116] => lookup_1092_41_22(acc),
            [115, 112] => lookup_1092_41_23(acc),
            [112, 105] => lookup_1092_41_24(acc),
            [114, 115] => lookup_1092_41_25(acc),
            [109, 115] => lookup_1092_41_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1092_60_0(acc),
            [97, 108] => lookup_1092_60_1(acc),
            [97, 112] => lookup_1092_60_2(acc),
            [101, 115] => lookup_1092_60_3(acc),
            [112, 97] => lookup_1092_60_4(acc),
            [103, 111] => lookup_1092_60_5(acc),
            [112, 101] => lookup_1092_60_6(acc),
            [116, 111] => lookup_1092_60_7(acc),
            [114, 114] => lookup_1092_60_8(acc),
            [100, 102] => lookup_1092_60_9(acc),
            [114, 111] => lookup_1092_60_10(acc),
            [109, 97] => lookup_1092_60_11(acc),
            [114, 106] => lookup_1092_60_12(acc),
            [98, 97] => lookup_1092_60_13(acc),
            [99, 101] => lookup_1092_60_14(acc),
            [97, 109] => lookup_1092_60_15(acc),
            [112, 98] => lookup_1092_60_16(acc),
            [112, 114] => lookup_1092_60_17(acc),
            [115, 99] => lookup_1092_60_18(acc),
            [115, 101] => lookup_1092_60_19(acc),
            [109, 103] => lookup_1092_60_20(acc),
            [114, 110] => lookup_1092_60_21(acc),
            [109, 116] => lookup_1092_60_22(acc),
            [115, 112] => lookup_1092_60_23(acc),
            [112, 105] => lookup_1092_60_24(acc),
            [114, 115] => lookup_1092_60_25(acc),
            [109, 115] => lookup_1092_60_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_102_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_102<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1092_102_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1092_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_105_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_105_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114, 115] => lookup_1092_105_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092_105_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101] => lookup_1092_105_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092_105_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1092_105<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 105, 114, 116, 117, 97, 108, 99, 108, 111, 117, 100] => {
                lookup_1092_105_0(info, labels, acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1092_105_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 98, 101, 105, 114, 97, 111] => lookup_1092_0(acc),
            [114, 105, 111, 112, 114, 101, 116, 111] => lookup_1092_1(acc),
            [112, 111, 97] => lookup_1092_2(acc),
            [115, 114, 118] => lookup_1092_3(acc),
            [99, 114, 105] => lookup_1092_4(acc),
            [106, 117, 115] => lookup_1092_5(acc),
            [119, 105, 107, 105] => lookup_1092_6(acc),
            [100, 101, 102] => lookup_1092_7(acc),
            [113, 115, 108] => lookup_1092_8(acc),
            [108, 111, 103] => lookup_1092_9(acc),
            [109, 111, 114, 101, 110, 97] => lookup_1092_10(acc),
            [109, 97, 116] => lookup_1092_11(acc),
            [97, 114, 116] => lookup_1092_12(acc),
            [101, 100, 117] => lookup_1092_13(acc),
            [99, 110, 103] => lookup_1092_14(acc),
            [101, 115, 112] => lookup_1092_15(acc),
            [102, 115, 116] => lookup_1092_16(acc),
            [98, 108, 111, 103] => lookup_1092_17(acc),
            [112, 97, 108, 109, 97, 115] => lookup_1092_18(acc),
            [115, 97, 111, 98, 101, 114, 110, 97, 114, 100, 111] => lookup_1092_19(acc),
            [102, 109] => lookup_1092_20(acc),
            [99, 111, 110, 116, 97, 103, 101, 109] => lookup_1092_21(acc),
            [100, 101, 115] => lookup_1092_22(acc),
            [106, 97, 109, 112, 97] => lookup_1092_23(acc),
            [101, 110, 102] => lookup_1092_24(acc),
            [99, 110, 116] => lookup_1092_25(acc),
            [98, 111, 97, 118, 105, 115, 116, 97] => lookup_1092_26(acc),
            [98, 101, 108, 101, 109] => lookup_1092_27(acc),
            [115, 97, 110, 116, 111, 97, 110, 100, 114, 101] => lookup_1092_28(acc),
            [98, 104, 122] => lookup_1092_29(acc),
            [116, 97, 120, 105] => lookup_1092_30(acc),
            [114, 97, 100, 105, 111] => lookup_1092_31(acc),
            [116, 101, 111] => lookup_1092_32(acc),
            [101, 99, 110] => lookup_1092_33(acc),
            [116, 99] => lookup_1092_34(acc),
            [97, 110, 97, 110, 105] => lookup_1092_35(acc),
            [97, 112, 112] => lookup_1092_36(acc),
            [99, 97, 109, 112, 105, 110, 97, 115] => lookup_1092_37(acc),
            [106, 111, 114] => lookup_1092_38(acc),
            [110, 116, 114] => lookup_1092_39(acc),
            [116, 101, 99] => lookup_1092_40(acc),
            [103, 111, 118] => lookup_1092_41(labels, acc),
            [105, 110, 100] => lookup_1092_42(acc),
            [99, 117, 105, 97, 98, 97] => lookup_1092_43(acc),
            [97, 109] => lookup_1092_44(acc),
            [100, 101, 118] => lookup_1092_45(acc),
            [114, 105, 111] => lookup_1092_46(acc),
            [108, 111, 110, 100, 114, 105, 110, 97] => lookup_1092_47(acc),
            [115, 111, 114, 111, 99, 97, 98, 97] => lookup_1092_48(acc),
            [110, 101, 116] => lookup_1092_49(acc),
            [114, 101, 112] => lookup_1092_50(acc),
            [116, 118] => lookup_1092_51(acc),
            [57, 103, 117, 97, 99, 117] => lookup_1092_52(acc),
            [98, 105, 98] => lookup_1092_53(acc),
            [101, 110, 103] => lookup_1092_54(acc),
            [101, 99, 111] => lookup_1092_55(acc),
            [102, 108, 111, 114, 105, 112, 97] => lookup_1092_56(acc),
            [108, 101, 108] => lookup_1092_57(acc),
            [109, 97, 110, 97, 117, 115] => lookup_1092_58(acc),
            [102, 110, 100] => lookup_1092_59(acc),
            [108, 101, 103] => lookup_1092_60(labels, acc),
            [103, 49, 50] => lookup_1092_61(acc),
            [98] => lookup_1092_62(acc),
            [101, 116, 99] => lookup_1092_63(acc),
            [103, 103, 102] => lookup_1092_64(acc),
            [109, 97, 99, 101, 105, 111] => lookup_1092_65(acc),
            [106, 111, 105, 110, 118, 105, 108, 108, 101] => lookup_1092_66(acc),
            [103, 101, 111] => lookup_1092_67(acc),
            [110, 111, 116] => lookup_1092_68(acc),
            [112, 115, 99] => lookup_1092_69(acc),
            [109, 117, 115] => lookup_1092_70(acc),
            [117, 100, 105] => lookup_1092_71(acc),
            [99, 97, 109, 112, 105, 110, 97, 103, 114, 97, 110, 100, 101] => lookup_1092_72(acc),
            [97, 116, 111] => lookup_1092_73(acc),
            [115, 106, 99] => lookup_1092_74(acc),
            [97, 106, 117] => lookup_1092_75(acc),
            [103, 114, 117] => lookup_1092_76(acc),
            [102, 97, 114] => lookup_1092_77(acc),
            [116, 104, 101] => lookup_1092_78(acc),
            [102, 111, 116] => lookup_1092_79(acc),
            [116, 117, 114] => lookup_1092_80(acc),
            [101, 116, 105] => lookup_1092_81(acc),
            [97, 100, 109] => lookup_1092_82(acc),
            [97, 112, 97, 114, 101, 99, 105, 100, 97] => lookup_1092_83(acc),
            [99, 111, 122] => lookup_1092_84(acc),
            [111, 115, 97, 115, 99, 111] => lookup_1092_85(acc),
            [112, 114, 111] => lookup_1092_86(acc),
            [112, 118, 104] => lookup_1092_87(acc),
            [99, 117, 114, 105, 116, 105, 98, 97] => lookup_1092_88(acc),
            [109, 101, 100] => lookup_1092_89(acc),
            [114, 101, 99, 105, 102, 101] => lookup_1092_90(acc),
            [115, 97, 111, 103, 111, 110, 99, 97] => lookup_1092_91(acc),
            [116, 114, 100] => lookup_1092_92(acc),
            [99, 105, 109] => lookup_1092_93(acc),
            [111, 114, 103] => lookup_1092_94(acc),
            [106, 100, 102] => lookup_1092_95(acc),
            [109, 97, 114, 105, 110, 103, 97] => lookup_1092_96(acc),
            [115, 97, 110, 116, 97, 109, 97, 114, 105, 97] => lookup_1092_97(acc),
            [97, 98, 99] => lookup_1092_98(acc),
            [110, 97, 116, 97, 108] => lookup_1092_99(acc),
            [115, 108, 122] => lookup_1092_100(acc),
            [101, 109, 112] => lookup_1092_101(acc),
            [110, 111, 109] => lookup_1092_102(info, labels, acc),
            [118, 108, 111, 103] => lookup_1092_103(acc),
            [114, 105, 111, 98, 114, 97, 110, 99, 111] => lookup_1092_104(acc),
            [99, 111, 109] => lookup_1092_105(labels, acc),
            [102, 111, 122] => lookup_1092_106(acc),
            [110, 105, 116, 101, 114, 111, 105] => lookup_1092_107(acc),
            [106, 97, 98] => lookup_1092_108(acc),
            [98, 97, 114, 117, 101, 114, 105] => lookup_1092_109(acc),
            [98, 115, 98] => lookup_1092_110(acc),
            [99, 97, 120, 105, 97, 115] => lookup_1092_111(acc),
            [109, 105, 108] => lookup_1092_112(acc),
            [112, 115, 105] => lookup_1092_113(acc),
            [111, 110, 103] => lookup_1092_114(acc),
            [115, 101, 103] => lookup_1092_115(acc),
            [97, 100, 118] => lookup_1092_116(acc),
            [102, 108, 111, 103] => lookup_1092_117(acc),
            [103, 111, 105, 97, 110, 105, 97] => lookup_1092_118(acc),
            [102, 101, 105, 114, 97] => lookup_1092_119(acc),
            [118, 101, 116] => lookup_1092_120(acc),
            [105, 110, 102] => lookup_1092_121(acc),
            [111, 100, 111] => lookup_1092_122(acc),
            [109, 97, 99, 97, 112, 97] => lookup_1092_123(acc),
            [115, 97, 108, 118, 97, 100, 111, 114] => lookup_1092_124(acc),
            [100, 101, 116] => lookup_1092_125(acc),
            [114, 101, 99] => lookup_1092_126(acc),
            [98, 109, 100] => lookup_1092_127(acc),
            [97, 114, 113] => lookup_1092_128(acc),
            [109, 112] => lookup_1092_129(acc),
            [115, 108, 103] => lookup_1092_130(acc),
            [122, 108, 103] => lookup_1092_131(acc),
            [112, 112, 103] => lookup_1092_132(acc),
            [118, 105, 120] => lookup_1092_133(acc),
            [99, 111, 111, 112] => lookup_1092_134(acc),
            [105, 109, 98] => lookup_1092_135(acc),
            [116, 109, 112] => lookup_1092_136(acc),
            [102, 111, 114, 116, 97, 108] => lookup_1092_137(acc),
            [97, 103, 114] => lookup_1092_138(acc),
            [98, 105, 111] => lookup_1092_139(acc),
            [115, 97, 109, 112, 97] => lookup_1092_140(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1093() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1096_0(acc),
            [101, 100, 117] => lookup_1096_1(acc),
            [99, 111, 109] => lookup_1096_2(acc),
            [111, 114, 103] => lookup_1096_3(acc),
            [110, 101, 116] => lookup_1096_4(acc),
            [103, 111, 118] => lookup_1096_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1097_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_1097_0(acc),
            [103, 111, 118] => lookup_1097_1(acc),
            [97, 99] => lookup_1097_2(acc),
            [101, 100, 117] => lookup_1097_3(acc),
            [105, 110, 102, 111] => lookup_1097_4(acc),
            [110, 97, 109, 101] => lookup_1097_5(acc),
            [101, 115, 116] => lookup_1097_6(acc),
            [112, 114, 111, 102] => lookup_1097_7(acc),
            [111, 114, 103] => lookup_1097_8(acc),
            [99, 111, 109] => lookup_1097_9(acc),
            [98, 105, 122] => lookup_1097_10(acc),
            [110, 101, 116] => lookup_1097_11(acc),
            [105, 115, 108, 97] => lookup_1097_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1098() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1101() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1103() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1104_0(acc),
            [111, 114, 103] => lookup_1104_1(acc),
            [99, 111, 109] => lookup_1104_2(acc),
            [99, 111] => lookup_1104_3(acc),
            [111, 114] => lookup_1104_4(acc),
            [110, 101, 116] => lookup_1104_5(acc),
            [103, 111, 118] => lookup_1104_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1105() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1106() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1108() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1111_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_35_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1111_35_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1111_35_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1111_35_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1111_35_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1111_35_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1111_35_0_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1111_35_0_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1111_35_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_1111_35_0_2_0(acc)
            }
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_1111_35_0_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1111_35_0_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1111_35_0_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1111_35_0_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1111_35_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_1111_35_0_0(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_1111_35_0_1(info, labels, acc),
            [101, 98] => lookup_1111_35_0_2(info, labels, acc),
            [101, 108, 98] => lookup_1111_35_0_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1111_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_1111_35_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1111_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 110] => lookup_1111_0(acc),
            [99, 113] => lookup_1111_1(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1111_2(acc),
            [106, 115] => lookup_1111_3(acc),
            [120, 122] => lookup_1111_4(acc),
            [113, 104] => lookup_1111_5(acc),
            [104, 101] => lookup_1111_6(acc),
            [106, 120] => lookup_1111_7(acc),
            [97, 104] => lookup_1111_8(acc),
            [104, 105] => lookup_1111_9(acc),
            [103, 111, 118] => lookup_1111_10(acc),
            [102, 106] => lookup_1111_11(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1111_12(acc),
            [108, 110] => lookup_1111_13(acc),
            [110, 120] => lookup_1111_14(acc),
            [104, 107] => lookup_1111_15(acc),
            [103, 115] => lookup_1111_16(acc),
            [115, 99] => lookup_1111_17(acc),
            [109, 111] => lookup_1111_18(acc),
            [104, 108] => lookup_1111_19(acc),
            [110, 109] => lookup_1111_20(acc),
            [120, 106] => lookup_1111_21(acc),
            [111, 114, 103] => lookup_1111_22(acc),
            [104, 98] => lookup_1111_23(acc),
            [229, 133, 172, 229, 143, 184] => lookup_1111_24(acc),
            [110, 101, 116] => lookup_1111_25(acc),
            [103, 122] => lookup_1111_26(acc),
            [97, 99] => lookup_1111_27(acc),
            [115, 120] => lookup_1111_28(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1111_29(acc),
            [101, 100, 117] => lookup_1111_30(acc),
            [103, 120] => lookup_1111_31(acc),
            [105, 110, 115, 116, 97, 110, 116, 99, 108, 111, 117, 100] => lookup_1111_32(acc),
            [115, 100] => lookup_1111_33(acc),
            [115, 110] => lookup_1111_34(acc),
            [99, 111, 109] => lookup_1111_35(labels, acc),
            [106, 108] => lookup_1111_36(acc),
            [116, 119] => lookup_1111_37(acc),
            [231, 189, 145, 231, 187, 156] => lookup_1111_38(acc),
            [109, 105, 108] => lookup_1111_39(acc),
            [115, 104] => lookup_1111_40(acc),
            [98, 106] => lookup_1111_41(acc),
            [103, 100] => lookup_1111_42(acc),
            [104, 110] => lookup_1111_43(acc),
            [116, 106] => lookup_1111_44(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1111_45(acc),
            [122, 106] => lookup_1111_46(acc),
            [104, 97] => lookup_1111_47(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1112() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1113() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_1117_26_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1117_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_29_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_55_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_87_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_87<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_87_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_158<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_158_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_169_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_169<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_169_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_171_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_171<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_1117_171_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_207_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_207_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_207_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_207_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_207_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_207_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_207<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_1117_207_0(acc),
            [104, 101, 114, 195, 184, 121] => lookup_1117_207_1(acc),
            [98, 111] => lookup_1117_207_2(acc),
            [98, 195, 184] => lookup_1117_207_3(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_1117_207_4(acc),
            [104, 101, 114, 111, 121] => lookup_1117_207_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_250_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_250_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_250_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_250_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_250<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_1117_250_0(acc),
            [118, 195, 165, 108, 101, 114] => lookup_1117_250_1(acc),
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_1117_250_2(acc),
            [118, 97, 108, 101, 114] => lookup_1117_250_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_292_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_292_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_292<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 22usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_1117_292_0(acc),
            [115, 97, 110, 100, 101] => lookup_1117_292_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_306_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_306_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_306<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_1117_306_0(acc),
            [104, 101, 114, 195, 184, 121] => lookup_1117_306_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_315_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_315<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_315_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_323_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_323<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_323_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_326_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_326<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_1117_326_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_344_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_344<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_344_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_367_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_367<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_367_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_446_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_446<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_446_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_456_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_456<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_456_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_500_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_500_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_500_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_500<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_1117_500_0(acc),
            [98, 195, 184] => lookup_1117_500_1(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_1117_500_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_525_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_525<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_1117_525_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_551(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_552(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_553(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_554(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_555(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_556(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_557(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_558(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_559(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_560(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_561(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_562(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_563(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_564(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_565(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_566(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_567(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_568(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_569(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_570(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_571(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_572(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_573(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_574(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_575(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_576(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_577(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_578(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_579(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_580(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_581(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_582(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_583(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_584(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_585(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_586(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_587(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_588(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_589(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_590(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_591(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_592(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_593(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_594(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_595(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_596(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_597(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_598_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_598<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_1117_598_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_599(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_600(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_601(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_602(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_603(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_604(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_605(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_606(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_607(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_608(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_609(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_610(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_611(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_612(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_613(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_614(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_615(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_616(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_617(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_618(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_619(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_620(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_621(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_622(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_623(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_624(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_625(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_626(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_627(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_628(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_629(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_630(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_631(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_632_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_632<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_632_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_633(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_634(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_635(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_636(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_637(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_638(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_639(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_640(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_641(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_642(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_643(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_644(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_645(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_646(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_647(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_648(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_649(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_650(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_651(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_652(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_653(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_654(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_655(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_656(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_657(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_658(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_659(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_660(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_661(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_662(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_663(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_664(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_665(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_666(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_667(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_668(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_669(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_670(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_671(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_672(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_673(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_674(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_675(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_676(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_677(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_678(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_679(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_680(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_681(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_682(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_683(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_684(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_685(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_686(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_687(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_688(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_689(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_690(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_691(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_692(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_693(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_694(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_695(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_696(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_697(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_698(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_699(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_700(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_701(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_702_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_702<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_702_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_703_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_703_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_703<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 111, 121] => lookup_1117_703_0(acc),
            [115, 97, 110, 100, 101] => lookup_1117_703_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_704(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_705(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_706(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_707(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_708(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_709(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_710(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_711(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_712(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_713(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_714(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_715(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_716(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_717(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_718(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_719(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_720(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_721(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_722(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_723(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_724(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_725(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_726(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_727(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_728(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_729(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_730(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_731(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_732(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_733(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_734(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_735(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_736(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_737(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_738(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_739(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_740(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_741(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_742(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_743(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_744(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_745(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_746(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_747(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_748(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_749(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_750(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_751(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_752(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_753(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_754(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_755(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_756(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_757(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_758(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_759(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_760(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_761(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_762(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_763(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_764(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_765(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_766(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_767(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_768(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_769(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_770(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_771(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_772(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_773(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_774(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_775_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_775<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 101, 114] => lookup_1117_775_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_776(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_777_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_777<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_777_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_778(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_779(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_780(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_781(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_782(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_783(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_784(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_785(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_786(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_787(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_788(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_789(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_790(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_791(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_792(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_793(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_794(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_795(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_796(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_797(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_798(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_799(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_800(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_801(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_802(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_803(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_804(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_805(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_806(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_807(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_808(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_809(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_810_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_810<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_810_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_811(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_812(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_813(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_814(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_815(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_816(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_817(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_818(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_819(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_820(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_821_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_821<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_1117_821_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_822(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_823(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_824(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_825(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_826(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_827(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_828_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_828<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_828_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_829(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_830_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_830<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_830_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_831(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_832(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_833(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_834(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_835(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_836(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_837(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_838(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_839(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_840(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_841(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_842(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_843(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_844(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_845(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_846(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_847(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_848(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_849(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_850(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_851(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_852(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1117_853(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_854(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_855(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_856(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_857_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_857<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_857_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_858(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_859_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_859<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_859_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_860_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_860<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1117_860_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117_861(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_862(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_863(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_864(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_865(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_866(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_867(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_868(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_869(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_870(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_871(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_872(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_873(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_874(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_875(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_876(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_877(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_878(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_879(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_880(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_881(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_882(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_883(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_884(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_885(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_886(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_887(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_888(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_889(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_890(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_891(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_892(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117_893(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 109, 108, 97, 116, 118, 117, 111, 112, 109, 105, 45, 115, 52, 97] => {
                lookup_1117_0(acc)
            }
            [108, 111, 112, 112, 97] => lookup_1117_1(acc),
            [110, 97, 110, 110, 101, 115, 116, 97, 100] => lookup_1117_2(acc),
            [107, 114, 97, 103, 101, 114, 111] => lookup_1117_3(acc),
            [104, 195, 184, 121, 108, 97, 110, 100, 101, 116] => lookup_1117_4(acc),
            [108, 101, 105, 107, 97, 110, 103, 101, 114] => lookup_1117_5(acc),
            [108, 121, 110, 103, 100, 97, 108] => lookup_1117_6(acc),
            [120, 110, 45, 45, 107, 118, 105, 116, 115, 121, 45, 102, 121, 97] => {
                lookup_1117_7(acc)
            }
            [110, 101, 115, 111, 100, 100, 101, 110] => lookup_1117_8(acc),
            [98, 105, 114, 107, 101, 110, 101, 115] => lookup_1117_9(acc),
            [114, 111, 121, 107, 101, 110] => lookup_1117_10(acc),
            [114, 111, 97, 110] => lookup_1117_11(acc),
            [97, 104] => lookup_1117_12(labels, acc),
            [195, 184, 114, 108, 97, 110, 100] => lookup_1117_13(acc),
            [120, 110, 45, 45, 114, 109, 115, 107, 111, 103, 45, 98, 121, 97] => {
                lookup_1117_14(acc)
            }
            [115, 97, 109, 110, 97, 110, 103, 101, 114] => lookup_1117_15(acc),
            [115, 107, 106, 101, 114, 118, 195, 184, 121] => lookup_1117_16(acc),
            [108, 97, 114, 100, 97, 108] => lookup_1117_17(acc),
            [120, 110, 45, 45, 115, 109, 110, 97, 45, 103, 114, 97] => lookup_1117_18(acc),
            [102, 108, 97] => lookup_1117_19(acc),
            [120, 110, 45, 45, 115, 114, 117, 109, 45, 103, 114, 97] => lookup_1117_20(acc),
            [120, 110, 45, 45, 115, 108, 116, 45, 101, 108, 97, 98] => lookup_1117_21(acc),
            [118, 97, 103, 97, 110] => lookup_1117_22(acc),
            [107, 97, 114, 109, 111, 121] => lookup_1117_23(acc),
            [111, 114, 115, 116, 97] => lookup_1117_24(acc),
            [108, 105, 110, 100, 101, 115, 110, 101, 115] => lookup_1117_25(acc),
            [118, 101, 115, 116, 102, 111, 108, 100] => lookup_1117_26(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1117_27(acc),
            [103, 97, 108, 115, 97] => lookup_1117_28(acc),
            [111, 115, 108, 111] => lookup_1117_29(labels, acc),
            [114, 111, 115, 116] => lookup_1117_30(acc),
            [120, 110, 45, 45, 115, 110, 97, 115, 101, 45, 110, 114, 97] => lookup_1117_31(acc),
            [115, 111, 114, 45, 102, 114, 111, 110] => lookup_1117_32(acc),
            [105, 100, 114, 101, 116, 116] => lookup_1117_33(acc),
            [110, 111, 114, 100, 45, 102, 114, 111, 110] => lookup_1117_34(acc),
            [108, 101, 105, 114, 118, 105, 107] => lookup_1117_35(acc),
            [107, 118, 105, 116, 101, 115, 101, 105, 100] => lookup_1117_36(acc),
            [120, 110, 45, 45, 115, 110, 101, 115, 45, 112, 111, 97] => lookup_1117_37(acc),
            [108, 117, 115, 116, 101, 114] => lookup_1117_38(acc),
            [118, 101, 115, 116, 118, 97, 103, 111, 121] => lookup_1117_39(acc),
            [120, 110, 45, 45, 118, 103, 45, 121, 105, 97, 98] => lookup_1117_40(acc),
            [104, 97, 108, 100, 101, 110] => lookup_1117_41(acc),
            [111, 112, 112, 100, 97, 108] => lookup_1117_42(acc),
            [115, 97, 117, 100, 97] => lookup_1117_43(acc),
            [105, 118, 103, 117] => lookup_1117_44(acc),
            [115, 117, 114, 110, 97, 100, 97, 108] => lookup_1117_45(acc),
            [102, 114, 101, 100, 114, 105, 107, 115, 116, 97, 100] => lookup_1117_46(acc),
            [102, 108, 101, 115, 98, 101, 114, 103] => lookup_1117_47(acc),
            [108, 101, 110, 118, 105, 107] => lookup_1117_48(acc),
            [120, 110, 45, 45, 115, 110, 100, 114, 101, 45, 108, 97, 110, 100, 45, 48, 99, 98] => {
                lookup_1117_49(acc)
            }
            [195, 184, 114, 115, 107, 111, 103] => lookup_1117_50(acc),
            [120, 110, 45, 45, 98, 101, 97, 114, 97, 108, 118, 104, 107, 105, 45, 121, 52, 97] => {
                lookup_1117_51(acc)
            }
            [118, 101, 114, 114, 97, 110] => lookup_1117_52(acc),
            [110, 105, 115, 115, 101, 100, 97, 108] => lookup_1117_53(acc),
            [98, 101, 114, 108, 101, 118, 195, 165, 103] => lookup_1117_54(acc),
            [111, 108] => lookup_1117_55(labels, acc),
            [195, 184, 121, 101, 114] => lookup_1117_56(acc),
            [120, 110, 45, 45, 114, 115, 107, 111, 103, 45, 117, 117, 97] => lookup_1117_57(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121, 115, 117, 110, 100] => lookup_1117_58(acc),
            [120, 110, 45, 45, 109, 101, 108, 121, 45, 105, 114, 97] => lookup_1117_59(acc),
            [195, 165, 108, 101, 115, 117, 110, 100] => lookup_1117_60(acc),
            [115, 97, 108, 97, 116] => lookup_1117_61(acc),
            [115, 195, 184, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_1117_62(acc),
            [115, 116, 111, 114, 100] => lookup_1117_63(acc),
            [109, 97, 116, 116, 97, 45, 118, 97, 114, 106, 106, 97, 116] => lookup_1117_64(acc),
            [118, 101, 103, 97] => lookup_1117_65(acc),
            [101, 110, 103, 101, 114, 100, 97, 108] => lookup_1117_66(acc),
            [117, 116, 115, 105, 114, 97] => lookup_1117_67(acc),
            [103, 106, 101, 115, 100, 97, 108] => lookup_1117_68(acc),
            [106, 195, 184, 108, 115, 116, 101, 114] => lookup_1117_69(acc),
            [115, 97, 108, 97, 110, 103, 101, 110] => lookup_1117_70(acc),
            [120, 110, 45, 45, 116, 106, 109, 101, 45, 104, 114, 97] => lookup_1117_71(acc),
            [101, 118, 106, 101, 45, 111, 103, 45, 104, 111, 114, 110, 110, 101, 115] => {
                lookup_1117_72(acc)
            }
            [120, 110, 45, 45, 100, 97, 118, 118, 101, 110, 106, 114, 103, 97, 45, 121, 52, 97] => {
                lookup_1117_73(acc)
            }
            [108, 101, 107, 115, 118, 105, 107] => lookup_1117_74(acc),
            [118, 97, 103, 97] => lookup_1117_75(acc),
            [115, 118, 101, 105, 111] => lookup_1117_76(acc),
            [120, 110, 45, 45, 115, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114, 45, 103, 103, 98] => {
                lookup_1117_77(acc)
            }
            [103, 114, 105, 109, 115, 116, 97, 100] => lookup_1117_78(acc),
            [98, 97, 108, 101, 115, 116, 114, 97, 110, 100] => lookup_1117_79(acc),
            [120, 110, 45, 45, 98, 101, 114, 108, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_1117_80(acc)
            }
            [116, 195, 184, 110, 115, 98, 101, 114, 103] => lookup_1117_81(acc),
            [120, 110, 45, 45, 104, 109, 109, 114, 102, 101, 97, 115, 116, 97, 45, 115, 52, 97, 99] => {
                lookup_1117_82(acc)
            }
            [120, 110, 45, 45, 114, 108, 97, 110, 100, 45, 117, 117, 97] => lookup_1117_83(acc),
            [116, 111, 108, 103, 97] => lookup_1117_84(acc),
            [98, 97, 114, 117, 109] => lookup_1117_85(acc),
            [115, 97, 108, 116, 100, 97, 108] => lookup_1117_86(acc),
            [97, 97] => lookup_1117_87(labels, acc),
            [120, 110, 45, 45, 109, 117, 111, 115, 116, 45, 48, 113, 97] => lookup_1117_88(acc),
            [120, 110, 45, 45, 107, 114, 97, 103, 101, 114, 45, 103, 121, 97] => {
                lookup_1117_89(acc)
            }
            [102, 121, 108, 107, 101, 115, 98, 105, 98, 108] => lookup_1117_90(acc),
            [103, 106, 111, 118, 105, 107] => lookup_1117_91(acc),
            [108, 97, 110, 103, 101, 118, 195, 165, 103] => lookup_1117_92(acc),
            [114, 97, 100, 101] => lookup_1117_93(acc),
            [120, 110, 45, 45, 115, 107, 110, 108, 97, 110, 100, 45, 102, 120, 97] => {
                lookup_1117_94(acc)
            }
            [109, 97, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_1117_95(acc),
            [117, 108, 108, 101, 110, 115, 118, 97, 110, 103] => lookup_1117_96(acc),
            [109, 101, 114, 97, 107, 101, 114] => lookup_1117_97(acc),
            [120, 110, 45, 45, 109, 108, 105, 45, 116, 108, 97] => lookup_1117_98(acc),
            [120, 110, 45, 45, 109, 111, 115, 106, 101, 110, 45, 101, 121, 97] => {
                lookup_1117_99(acc)
            }
            [110, 101, 115, 115, 101, 116] => lookup_1117_100(acc),
            [115, 117, 108, 100, 97, 108] => lookup_1117_101(acc),
            [105, 110, 100, 101, 114, 195, 184, 121] => lookup_1117_102(acc),
            [103, 117, 111, 118, 100, 97, 103, 101, 97, 105, 100, 110, 117] => lookup_1117_103(acc),
            [107, 114, 97, 97, 110, 103, 104, 107, 101] => lookup_1117_104(acc),
            [97, 109, 111, 116] => lookup_1117_105(acc),
            [110, 101, 115, 115, 101, 98, 121] => lookup_1117_106(acc),
            [106, 195, 184, 114, 112, 101, 108, 97, 110, 100] => lookup_1117_107(acc),
            [97, 109, 108, 105] => lookup_1117_108(acc),
            [101, 105, 103, 101, 114, 115, 117, 110, 100] => lookup_1117_109(acc),
            [108, 111, 100, 105, 110, 103, 101, 110] => lookup_1117_110(acc),
            [110, 111, 114, 100, 45, 111, 100, 97, 108] => lookup_1117_111(acc),
            [115, 195, 184, 114, 45, 102, 114, 111, 110] => lookup_1117_112(acc),
            [109, 106, 111, 110, 100, 97, 108, 101, 110] => lookup_1117_113(acc),
            [97, 117, 114, 101] => lookup_1117_114(acc),
            [103, 97, 109, 118, 105, 107] => lookup_1117_115(acc),
            [98, 101, 97, 114, 100, 117] => lookup_1117_116(acc),
            [109, 111, 108, 100, 101] => lookup_1117_117(acc),
            [115, 195, 184, 114, 45, 111, 100, 97, 108] => lookup_1117_118(acc),
            [120, 110, 45, 45, 115, 114, 102, 111, 108, 100, 45, 98, 121, 97] => {
                lookup_1117_119(acc)
            }
            [115, 105, 108, 106, 97, 110] => lookup_1117_120(acc),
            [116, 121, 100, 97, 108] => lookup_1117_121(acc),
            [102, 101, 100, 106, 101] => lookup_1117_122(acc),
            [108, 195, 166, 114, 100, 97, 108] => lookup_1117_123(acc),
            [104, 111, 114, 110, 105, 110, 100, 97, 108] => lookup_1117_124(acc),
            [120, 110, 45, 45, 109, 111, 114, 101, 107, 101, 45, 106, 117, 97] => {
                lookup_1117_125(acc)
            }
            [120, 110, 45, 45, 108, 114, 101, 110, 115, 107, 111, 103, 45, 53, 52, 97] => {
                lookup_1117_126(acc)
            }
            [102, 97, 117, 115, 107, 101] => lookup_1117_127(acc),
            [109, 97, 114, 107, 101, 114] => lookup_1117_128(acc),
            [110, 101, 100, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_1117_129(acc),
            [110, 111, 114, 101, 45, 111, 103, 45, 117, 118, 100, 97, 108] => lookup_1117_130(acc),
            [98, 195, 161, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_1117_131(acc),
            [97, 103, 100, 101, 110, 101, 115] => lookup_1117_132(acc),
            [115, 195, 184, 114, 102, 111, 108, 100] => lookup_1117_133(acc),
            [116, 114, 97, 110, 97] => lookup_1117_134(acc),
            [115, 116, 97, 116, 104, 101, 108, 108, 101] => lookup_1117_135(acc),
            [108, 111, 114, 101, 110, 115, 107, 111, 103] => lookup_1117_136(acc),
            [115, 107, 97, 110, 105, 116] => lookup_1117_137(acc),
            [104, 106, 97, 114, 116, 100, 97, 108] => lookup_1117_138(acc),
            [103, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_1117_139(acc),
            [104, 97, 100, 115, 101, 108] => lookup_1117_140(acc),
            [120, 110, 45, 45, 107, 118, 110, 97, 110, 103, 101, 110, 45, 107, 48, 97] => {
                lookup_1117_141(acc)
            }
            [115, 116, 106, 195, 184, 114, 100, 97, 108] => lookup_1117_142(acc),
            [108, 105, 108, 108, 101, 104, 97, 109, 109, 101, 114] => lookup_1117_143(acc),
            [115, 116, 111, 114, 100, 97, 108] => lookup_1117_144(acc),
            [120, 110, 45, 45, 114, 121, 107, 101, 110, 45, 118, 117, 97] => lookup_1117_145(acc),
            [115, 116, 114, 97, 110, 100, 97] => lookup_1117_146(acc),
            [98, 97, 106, 100, 100, 97, 114] => lookup_1117_147(acc),
            [120, 110, 45, 45, 98, 104, 99, 97, 118, 117, 111, 116, 110, 97, 45, 115, 52, 97] => {
                lookup_1117_148(acc)
            }
            [101, 108, 118, 101, 114, 117, 109] => lookup_1117_149(acc),
            [114, 111, 121, 114, 118, 105, 107] => lookup_1117_150(acc),
            [107, 111, 110, 103, 115, 118, 105, 110, 103, 101, 114] => lookup_1117_151(acc),
            [109, 101, 108, 111, 121] => lookup_1117_152(acc),
            [98, 97, 100, 97, 100, 100, 106, 97] => lookup_1117_153(acc),
            [120, 110, 45, 45, 98, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97, 45, 107, 55, 97] => {
                lookup_1117_154(acc)
            }
            [120, 110, 45, 45, 109, 116, 116, 97, 45, 118, 114, 106, 106, 97, 116, 45, 107, 55, 97, 102] => {
                lookup_1117_155(acc)
            }
            [102, 114, 195, 184, 121, 97] => lookup_1117_156(acc),
            [120, 110, 45, 45, 114, 108, 105, 110, 103, 101, 110, 45, 109, 120, 97] => {
                lookup_1117_157(acc)
            }
            [115, 116] => lookup_1117_158(labels, acc),
            [112, 111, 114, 115, 103, 114, 117, 110, 110] => lookup_1117_159(acc),
            [104, 195, 161, 109, 109, 195, 161, 114, 102, 101, 97, 115, 116, 97] => {
                lookup_1117_160(acc)
            }
            [116, 105, 109, 101] => lookup_1117_161(acc),
            [97, 117, 115, 116, 114, 104, 101, 105, 109] => lookup_1117_162(acc),
            [114, 97, 110, 97] => lookup_1117_163(acc),
            [100, 121, 114, 111, 121] => lookup_1117_164(acc),
            [100, 111, 118, 114, 101] => lookup_1117_165(acc),
            [120, 110, 45, 45, 115, 107, 106, 101, 114, 118, 121, 45, 118, 49, 97] => {
                lookup_1117_166(acc)
            }
            [116, 121, 115, 102, 106, 111, 114, 100] => lookup_1117_167(acc),
            [120, 110, 45, 45, 102, 108, 111, 114, 45, 106, 114, 97] => lookup_1117_168(acc),
            [115, 118, 97, 108, 98, 97, 114, 100] => lookup_1117_169(labels, acc),
            [115, 116, 106, 111, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_1117_170(acc)
            }
            [98, 117, 115, 107, 101, 114, 117, 100] => lookup_1117_171(info, labels, acc),
            [114, 195, 166, 108, 105, 110, 103, 101, 110] => lookup_1117_172(acc),
            [109, 105, 100, 115, 117, 110, 100] => lookup_1117_173(acc),
            [97, 110, 100, 111, 121] => lookup_1117_174(acc),
            [104, 195, 166, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_1117_175(acc),
            [103, 195, 161, 108, 115, 195, 161] => lookup_1117_176(acc),
            [109, 101, 108, 100, 97, 108] => lookup_1117_177(acc),
            [195, 184, 114, 115, 116, 97] => lookup_1117_178(acc),
            [104, 117, 114, 100, 97, 108] => lookup_1117_179(acc),
            [110, 111, 114, 100, 45, 97, 117, 114, 100, 97, 108] => lookup_1117_180(acc),
            [100, 97, 118, 118, 101, 110, 106, 195, 161, 114, 103, 97] => lookup_1117_181(acc),
            [103, 105, 115, 107, 101] => lookup_1117_182(acc),
            [115, 116, 97, 110, 103, 101] => lookup_1117_183(acc),
            [97, 117, 107, 114, 97] => lookup_1117_184(acc),
            [114, 105, 115, 115, 97] => lookup_1117_185(acc),
            [97, 114, 100, 97, 108] => lookup_1117_186(acc),
            [98, 97, 105, 100, 97, 114] => lookup_1117_187(acc),
            [115, 111, 114, 45, 111, 100, 97, 108] => lookup_1117_188(acc),
            [115, 111, 114, 117, 109] => lookup_1117_189(acc),
            [104, 111, 107, 107, 115, 117, 110, 100] => lookup_1117_190(acc),
            [108, 97, 97, 107, 101, 115, 118, 117, 101, 109, 105, 101] => lookup_1117_191(acc),
            [120, 110, 45, 45, 107, 114, 97, 110, 103, 104, 107, 101, 45, 98, 48, 97] => {
                lookup_1117_192(acc)
            }
            [114, 105, 110, 103, 101, 98, 117] => lookup_1117_193(acc),
            [97, 118, 101, 114, 195, 184, 121] => lookup_1117_194(acc),
            [114, 111, 108, 108, 97, 103] => lookup_1117_195(acc),
            [111, 118, 101, 114, 104, 97, 108, 108, 97] => lookup_1117_196(acc),
            [120, 110, 45, 45, 102, 114, 110, 97, 45, 119, 111, 97] => lookup_1117_197(acc),
            [195, 161, 108, 116, 195, 161] => lookup_1117_198(acc),
            [195, 165, 115] => lookup_1117_199(acc),
            [98, 101, 105, 97, 114, 110] => lookup_1117_200(acc),
            [120, 110, 45, 45, 104, 45, 50, 102, 97] => lookup_1117_201(acc),
            [98, 101, 114, 108, 101, 118, 97, 103] => lookup_1117_202(acc),
            [100, 114, 111, 98, 97, 107] => lookup_1117_203(acc),
            [111, 115, 116, 101, 114, 195, 184, 121] => lookup_1117_204(acc),
            [115, 97, 110, 100, 111, 121] => lookup_1117_205(acc),
            [116, 121, 110, 115, 101, 116] => lookup_1117_206(acc),
            [110, 111, 114, 100, 108, 97, 110, 100] => lookup_1117_207(info, labels, acc),
            [100, 105, 118, 116, 97, 115, 118, 117, 111, 100, 110, 97] => lookup_1117_208(acc),
            [98, 105, 110, 100, 97, 108] => lookup_1117_209(acc),
            [100, 114, 97, 110, 103, 101, 100, 97, 108] => lookup_1117_210(acc),
            [120, 110, 45, 45, 98, 106, 100, 100, 97, 114, 45, 112, 116, 97] => {
                lookup_1117_211(acc)
            }
            [101, 116, 110, 101] => lookup_1117_212(acc),
            [104, 97] => lookup_1117_213(acc),
            [114, 121, 103, 103, 101] => lookup_1117_214(acc),
            [100, 105, 118, 116, 116, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_1117_215(acc),
            [115, 116, 114, 121, 110] => lookup_1117_216(acc),
            [118, 105, 107, 110, 97] => lookup_1117_217(acc),
            [115, 107, 106, 195, 165, 107] => lookup_1117_218(acc),
            [98, 195, 161, 108, 195, 161, 116] => lookup_1117_219(acc),
            [100, 101, 112] => lookup_1117_220(acc),
            [120, 110, 45, 45, 115, 107, 106, 107, 45, 115, 111, 97] => lookup_1117_221(acc),
            [120, 110, 45, 45, 116, 114, 111, 109, 115, 45, 122, 117, 97] => lookup_1117_222(acc),
            [196, 141, 195, 161, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_1117_223(acc),
            [98, 114, 121, 110, 101] => lookup_1117_224(acc),
            [98, 106, 97, 114, 107, 195, 184, 121] => lookup_1117_225(acc),
            [104, 195, 184, 121, 97, 110, 103, 101, 114] => lookup_1117_226(acc),
            [114, 105, 115, 195, 184, 114] => lookup_1117_227(acc),
            [97, 110, 100, 101, 98, 117] => lookup_1117_228(acc),
            [101, 105, 100, 115, 107, 111, 103] => lookup_1117_229(acc),
            [104, 118, 97, 108, 101, 114] => lookup_1117_230(acc),
            [98, 117, 100, 101, 106, 106, 117] => lookup_1117_231(acc),
            [120, 110, 45, 45, 103, 106, 118, 105, 107, 45, 119, 117, 97] => lookup_1117_232(acc),
            [108, 111, 97, 98, 97, 116] => lookup_1117_233(acc),
            [97, 110, 100, 97, 115, 117, 111, 108, 111] => lookup_1117_234(acc),
            [108, 97, 110, 103, 101, 118, 97, 103] => lookup_1117_235(acc),
            [195, 165, 114, 100, 97, 108] => lookup_1117_236(acc),
            [97, 115, 107, 195, 184, 121] => lookup_1117_237(acc),
            [120, 110, 45, 45, 98, 106, 97, 114, 107, 121, 45, 102, 121, 97] => {
                lookup_1117_238(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 102, 114, 111, 110, 45, 113, 49, 97] => {
                lookup_1117_239(acc)
            }
            [116, 106, 195, 184, 109, 101] => lookup_1117_240(acc),
            [102, 108, 101, 107, 107, 101, 102, 106, 111, 114, 100] => lookup_1117_241(acc),
            [120, 110, 45, 45, 115, 109, 108, 97, 45, 104, 114, 97] => lookup_1117_242(acc),
            [118, 97, 97, 112, 115, 116, 101] => lookup_1117_243(acc),
            [112, 111, 114, 115, 97, 110, 103, 117] => lookup_1117_244(acc),
            [114, 117, 111, 118, 97, 116] => lookup_1117_245(acc),
            [111, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_1117_246(acc)
            }
            [111, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_1117_247(acc),
            [118, 195, 165, 103, 97, 110] => lookup_1117_248(acc),
            [107, 118, 105, 110, 101, 115, 100, 97, 108] => lookup_1117_249(acc),
            [104, 101, 100, 109, 97, 114, 107] => lookup_1117_250(info, labels, acc),
            [107, 114, 97, 103, 101, 114, 195, 184] => lookup_1117_251(acc),
            [109, 111, 45, 105, 45, 114, 97, 110, 97] => lookup_1117_252(acc),
            [120, 110, 45, 45, 109, 111, 116, 45, 116, 108, 97] => lookup_1117_253(acc),
            [101, 116, 110, 101, 100, 97, 108] => lookup_1117_254(acc),
            [120, 110, 45, 45, 105, 110, 100, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_1117_255(acc)
            }
            [108, 111, 97, 98, 195, 161, 116] => lookup_1117_256(acc),
            [114, 97, 100, 111, 121] => lookup_1117_257(acc),
            [120, 110, 45, 45, 107, 108, 98, 117, 45, 119, 111, 97] => lookup_1117_258(acc),
            [120, 110, 45, 45, 110, 116, 116, 101, 114, 121, 45, 98, 121, 97, 101] => {
                lookup_1117_259(acc)
            }
            [120, 110, 45, 45, 115, 97, 110, 100, 121, 45, 121, 117, 97] => lookup_1117_260(acc),
            [107, 118, 105, 116, 115, 195, 184, 121] => lookup_1117_261(acc),
            [120, 110, 45, 45, 115, 114, 45, 111, 100, 97, 108, 45, 113, 49, 97] => {
                lookup_1117_262(acc)
            }
            [118, 101, 114, 100, 97, 108] => lookup_1117_263(acc),
            [104, 105, 116, 114, 97] => lookup_1117_264(acc),
            [102, 108, 97, 107, 115, 116, 97, 100] => lookup_1117_265(acc),
            [120, 110, 45, 45, 115, 103, 110, 101, 45, 103, 114, 97] => lookup_1117_266(acc),
            [107, 114, 195, 184, 100, 115, 104, 101, 114, 97, 100] => lookup_1117_267(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 45, 119, 117, 97, 99] => {
                lookup_1117_268(acc)
            }
            [102, 114, 195, 166, 110, 97] => lookup_1117_269(acc),
            [115, 195, 161, 108, 195, 161, 116] => lookup_1117_270(acc),
            [102, 105, 110, 110, 195, 184, 121] => lookup_1117_271(acc),
            [115, 195, 184, 114, 114, 101, 105, 115, 97] => lookup_1117_272(acc),
            [106, 101, 118, 110, 97, 107, 101, 114] => lookup_1117_273(acc),
            [107, 108, 195, 166, 98, 117] => lookup_1117_274(acc),
            [115, 116, 97, 118, 97, 110, 103, 101, 114] => lookup_1117_275(acc),
            [115, 118, 101, 108, 118, 105, 107] => lookup_1117_276(acc),
            [115, 97, 110, 100, 195, 184, 121] => lookup_1117_277(acc),
            [116, 114, 97, 110, 195, 184, 121] => lookup_1117_278(acc),
            [120, 110, 45, 45, 98, 100, 100, 100, 106, 45, 109, 114, 97, 98, 100] => {
                lookup_1117_279(acc)
            }
            [104, 195, 165] => lookup_1117_280(acc),
            [118, 101, 110, 110, 101, 115, 108, 97] => lookup_1117_281(acc),
            [118, 97, 114, 111, 121] => lookup_1117_282(acc),
            [111, 114, 115, 107, 111, 103] => lookup_1117_283(acc),
            [120, 110, 45, 45, 98, 109, 108, 111, 45, 103, 114, 97] => lookup_1117_284(acc),
            [98, 97, 109, 98, 108, 101] => lookup_1117_285(acc),
            [195, 165, 108] => lookup_1117_286(acc),
            [114, 195, 184, 121, 107, 101, 110] => lookup_1117_287(acc),
            [98, 101, 97, 114, 97, 108, 118, 97, 104, 107, 105] => lookup_1117_288(acc),
            [102, 114, 111, 103, 110] => lookup_1117_289(acc),
            [103, 106, 195, 184, 118, 105, 107] => lookup_1117_290(acc),
            [104, 97, 109, 109, 97, 114, 102, 101, 97, 115, 116, 97] => lookup_1117_291(acc),
            [120, 110, 45, 45, 109, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108, 45, 113, 113, 98] => {
                lookup_1117_292(info, labels, acc)
            }
            [97, 107, 114, 101, 104, 97, 109, 110] => lookup_1117_293(acc),
            [107, 97, 114, 97, 115, 106, 111, 107] => lookup_1117_294(acc),
            [107, 195, 161, 114, 195, 161, 197, 161, 106, 111, 104, 107, 97] => {
                lookup_1117_295(acc)
            }
            [110, 111, 116, 116, 101, 114, 111, 121] => lookup_1117_296(acc),
            [105, 110, 100, 101, 114, 111, 121] => lookup_1117_297(acc),
            [112, 111, 114, 115, 195, 161, 197, 139, 103, 117] => lookup_1117_298(acc),
            [107, 118, 97, 108, 115, 117, 110, 100] => lookup_1117_299(acc),
            [120, 110, 45, 45, 97, 117, 114, 115, 107, 111, 103, 45, 104, 108, 97, 110, 100, 45, 106, 110, 98] => {
                lookup_1117_300(acc)
            }
            [114, 195, 184, 114, 111, 115] => lookup_1117_301(acc),
            [115, 105, 101, 108, 108, 97, 107] => lookup_1117_302(acc),
            [97, 118, 101, 114, 111, 121] => lookup_1117_303(acc),
            [120, 110, 45, 45, 114, 115, 116, 45, 48, 110, 97] => lookup_1117_304(acc),
            [118, 97, 100, 115, 111] => lookup_1117_305(acc),
            [109, 195, 184, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_1117_306(info, labels, acc)
            }
            [120, 110, 45, 45, 114, 104, 111, 108, 116, 45, 109, 114, 97] => lookup_1117_307(acc),
            [120, 110, 45, 45, 102, 114, 121, 97, 45, 104, 114, 97] => lookup_1117_308(acc),
            [102, 108, 195, 165] => lookup_1117_309(acc),
            [107, 97, 114, 109, 195, 184, 121] => lookup_1117_310(acc),
            [108, 195, 161, 104, 112, 112, 105] => lookup_1117_311(acc),
            [110, 195, 184, 116, 116, 101, 114, 195, 184, 121] => lookup_1117_312(acc),
            [114, 97, 105, 115, 97] => lookup_1117_313(acc),
            [116, 121, 115, 110, 101, 115] => lookup_1117_314(acc),
            [114, 108] => lookup_1117_315(labels, acc),
            [107, 105, 114, 107, 101, 110, 101, 115] => lookup_1117_316(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 195, 184, 108, 97, 110, 100] => {
                lookup_1117_317(acc)
            }
            [195, 184, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_1117_318(acc),
            [120, 110, 45, 45, 114, 105, 115, 114, 45, 105, 114, 97] => lookup_1117_319(acc),
            [120, 110, 45, 45, 118, 101, 115, 116, 118, 103, 121, 45, 105, 120, 97, 54, 111] => {
                lookup_1117_320(acc)
            }
            [104, 106, 101, 108, 109, 101, 108, 97, 110, 100] => lookup_1117_321(acc),
            [98, 97, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_1117_322(acc),
            [111, 102] => lookup_1117_323(labels, acc),
            [120, 110, 45, 45, 109, 115, 121, 45, 117, 108, 97, 48, 104] => lookup_1117_324(acc),
            [104, 97, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_1117_325(acc),
            [97, 107, 101, 114, 115, 104, 117, 115] => lookup_1117_326(info, labels, acc),
            [107, 118, 105, 116, 115, 111, 121] => lookup_1117_327(acc),
            [120, 110, 45, 45, 107, 118, 102, 106, 111, 114, 100, 45, 110, 120, 97] => {
                lookup_1117_328(acc)
            }
            [114, 195, 161, 104, 107, 107, 101, 114, 195, 161, 118, 106, 117] => {
                lookup_1117_329(acc)
            }
            [114, 111, 109, 115, 97] => lookup_1117_330(acc),
            [120, 110, 45, 45, 118, 114, 101, 45, 101, 105, 107, 101, 114, 45, 107, 56, 97] => {
                lookup_1117_331(acc)
            }
            [102, 105, 116, 106, 97, 114] => lookup_1117_332(acc),
            [103, 114, 111, 110, 103] => lookup_1117_333(acc),
            [120, 110, 45, 45, 118, 103, 97, 110, 45, 113, 111, 97] => lookup_1117_334(acc),
            [98, 97, 108, 108, 97, 110, 103, 101, 110] => lookup_1117_335(acc),
            [97, 97, 114, 98, 111, 114, 116, 101] => lookup_1117_336(acc),
            [108, 97, 118, 97, 103, 105, 115] => lookup_1117_337(acc),
            [111, 121, 103, 97, 114, 100, 101, 110] => lookup_1117_338(acc),
            [98, 106, 117, 103, 110] => lookup_1117_339(acc),
            [111, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_1117_340(acc),
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 45, 115, 49, 97] => {
                lookup_1117_341(acc)
            }
            [116, 118, 101, 100, 101, 115, 116, 114, 97, 110, 100] => lookup_1117_342(acc),
            [115, 101, 108, 106, 101] => lookup_1117_343(acc),
            [104, 109] => lookup_1117_344(labels, acc),
            [195, 165, 109, 111, 116] => lookup_1117_345(acc),
            [118, 103, 115] => lookup_1117_346(acc),
            [109, 111, 97, 114, 101, 107, 101] => lookup_1117_347(acc),
            [108, 101, 97, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_1117_348(acc),
            [98, 195, 161, 105, 100, 195, 161, 114] => lookup_1117_349(acc),
            [107, 118, 195, 166, 110, 97, 110, 103, 101, 110] => lookup_1117_350(acc),
            [110, 195, 166, 114, 195, 184, 121] => lookup_1117_351(acc),
            [115, 101, 108] => lookup_1117_352(acc),
            [104, 111, 121, 97, 110, 103, 101, 114] => lookup_1117_353(acc),
            [120, 110, 45, 45, 108, 103, 114, 100, 45, 112, 111, 97, 99] => lookup_1117_354(acc),
            [98, 105, 101, 118, 97, 116] => lookup_1117_355(acc),
            [195, 165, 115, 110, 101, 115] => lookup_1117_356(acc),
            [104, 97, 114, 115, 116, 97, 100] => lookup_1117_357(acc),
            [101, 110, 101, 98, 97, 107, 107] => lookup_1117_358(acc),
            [109, 101, 108, 195, 184, 121] => lookup_1117_359(acc),
            [98, 106, 97, 114, 107, 111, 121] => lookup_1117_360(acc),
            [108, 97, 118, 97, 110, 103, 101, 110] => lookup_1117_361(acc),
            [120, 110, 45, 45, 109, 106, 110, 100, 97, 108, 101, 110, 45, 54, 52, 97] => {
                lookup_1117_362(acc)
            }
            [103, 106, 101, 114, 115, 116, 97, 100] => lookup_1117_363(acc),
            [97, 114, 101, 109, 97, 114, 107] => lookup_1117_364(acc),
            [115, 108, 97, 116, 116, 117, 109] => lookup_1117_365(acc),
            [116, 97, 110, 97] => lookup_1117_366(acc),
            [118, 97] => lookup_1117_367(labels, acc),
            [97, 115, 101, 114, 97, 108] => lookup_1117_368(acc),
            [102, 111, 114, 100, 101] => lookup_1117_369(acc),
            [116, 106, 111, 109, 101] => lookup_1117_370(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1117_371(acc),
            [120, 110, 45, 45, 115, 110, 115, 97, 45, 114, 111, 97] => lookup_1117_372(acc),
            [120, 110, 45, 45, 108, 116, 101, 110, 45, 103, 114, 97] => lookup_1117_373(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121] => lookup_1117_374(acc),
            [109, 101, 108, 97, 110, 100] => lookup_1117_375(acc),
            [115, 111, 110, 103, 100, 97, 108, 101, 110] => lookup_1117_376(acc),
            [115, 121, 107, 107, 121, 108, 118, 101, 110] => lookup_1117_377(acc),
            [104, 117, 114, 117, 109] => lookup_1117_378(acc),
            [120, 110, 45, 45, 100, 121, 114, 121, 45, 105, 114, 97] => lookup_1117_379(acc),
            [98, 114, 117, 109, 117, 110, 100, 100, 97, 108] => lookup_1117_380(acc),
            [115, 111, 114, 102, 111, 108, 100] => lookup_1117_381(acc),
            [116, 111, 107, 107, 101] => lookup_1117_382(acc),
            [104, 111, 108, 116, 97, 108, 101, 110] => lookup_1117_383(acc),
            [116, 111, 114, 115, 107, 101, 110] => lookup_1117_384(acc),
            [116, 114, 111, 109, 115, 195, 184] => lookup_1117_385(acc),
            [118, 97, 110, 121, 108, 118, 101, 110] => lookup_1117_386(acc),
            [100, 121, 114, 195, 184, 121] => lookup_1117_387(acc),
            [120, 110, 45, 45, 111, 112, 112, 101, 103, 114, 100, 45, 105, 120, 97] => {
                lookup_1117_388(acc)
            }
            [118, 101, 115, 116, 98, 121] => lookup_1117_389(acc),
            [111, 114, 107, 100, 97, 108] => lookup_1117_390(acc),
            [118, 111, 97, 103, 97, 116] => lookup_1117_391(acc),
            [109, 97, 108, 115, 101, 108, 118] => lookup_1117_392(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 111, 101, 110] => lookup_1117_393(acc),
            [195, 184, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_1117_394(acc)
            }
            [110, 97, 114, 118, 105, 107] => lookup_1117_395(acc),
            [112, 111, 114, 115, 97, 110, 103, 101, 114] => lookup_1117_396(acc),
            [114, 101, 110, 110, 101, 115, 195, 184, 121] => lookup_1117_397(acc),
            [118, 101, 115, 116, 110, 101, 115] => lookup_1117_398(acc),
            [97, 108, 101, 115, 117, 110, 100] => lookup_1117_399(acc),
            [120, 110, 45, 45, 103, 105, 118, 117, 111, 116, 110, 97, 45, 56, 121, 97] => {
                lookup_1117_400(acc)
            }
            [118, 195, 166, 114, 195, 184, 121] => lookup_1117_401(acc),
            [98, 97, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_1117_402(acc),
            [109, 97, 114, 110, 97, 114, 100, 97, 108] => lookup_1117_403(acc),
            [120, 110, 45, 45, 108, 100, 105, 110, 103, 101, 110, 45, 113, 49, 97] => {
                lookup_1117_404(acc)
            }
            [103, 111, 108] => lookup_1117_405(acc),
            [109, 106, 195, 184, 110, 100, 97, 108, 101, 110] => lookup_1117_406(acc),
            [120, 110, 45, 45, 107, 97, 114, 109, 121, 45, 121, 117, 97] => lookup_1117_407(acc),
            [120, 110, 45, 45, 114, 105, 115, 97, 45, 53, 110, 97] => lookup_1117_408(acc),
            [111, 115, 116, 101, 114, 111, 121] => lookup_1117_409(acc),
            [107, 97, 102, 106, 111, 114, 100] => lookup_1117_410(acc),
            [109, 117, 111, 115, 195, 161, 116] => lookup_1117_411(acc),
            [195, 165, 102, 106, 111, 114, 100] => lookup_1117_412(acc),
            [110, 111, 114, 100, 114, 101, 105, 115, 97] => lookup_1117_413(acc),
            [120, 110, 45, 45, 114, 114, 111, 115, 45, 103, 114, 97] => lookup_1117_414(acc),
            [120, 110, 45, 45, 114, 100, 101, 45, 117, 108, 97] => lookup_1117_415(acc),
            [98, 101, 114, 103] => lookup_1117_416(acc),
            [115, 101, 108, 106, 111, 114, 100] => lookup_1117_417(acc),
            [120, 110, 45, 45, 98, 105, 100, 114, 45, 53, 110, 97, 99] => lookup_1117_418(acc),
            [109, 111, 100, 97, 108, 101, 110] => lookup_1117_419(acc),
            [111, 109, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_1117_420(acc),
            [115, 117, 108, 97] => lookup_1117_421(acc),
            [120, 110, 45, 45, 116, 114, 97, 110, 121, 45, 121, 117, 97] => lookup_1117_422(acc),
            [120, 110, 45, 45, 114, 104, 107, 107, 101, 114, 118, 106, 117, 45, 48, 49, 97, 102] => {
                lookup_1117_423(acc)
            }
            [111, 115, 111, 121, 114, 111] => lookup_1117_424(acc),
            [109, 97, 110, 100, 97, 108] => lookup_1117_425(acc),
            [104, 97, 115, 118, 105, 107] => lookup_1117_426(acc),
            [115, 97, 110, 100, 101, 102, 106, 111, 114, 100] => lookup_1117_427(acc),
            [120, 110, 45, 45, 115, 107, 105, 101, 114, 118, 45, 117, 116, 97] => {
                lookup_1117_428(acc)
            }
            [120, 110, 45, 45, 114, 100, 97, 108, 45, 112, 111, 97] => lookup_1117_429(acc),
            [98, 111, 100, 195, 184] => lookup_1117_430(acc),
            [115, 110, 105, 108, 108, 102, 106, 111, 114, 100] => lookup_1117_431(acc),
            [98, 97, 116, 115, 102, 106, 111, 114, 100] => lookup_1117_432(acc),
            [120, 110, 45, 45, 102, 108, 45, 122, 105, 97] => lookup_1117_433(acc),
            [107, 118, 97, 110, 97, 110, 103, 101, 110] => lookup_1117_434(acc),
            [109, 195, 161, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_1117_435(acc),
            [120, 110, 45, 45, 114, 121, 114, 118, 105, 107, 45, 98, 121, 97] => {
                lookup_1117_436(acc)
            }
            [107, 97, 114, 108, 115, 111, 121] => lookup_1117_437(acc),
            [115, 107, 105] => lookup_1117_438(acc),
            [120, 110, 45, 45, 116, 114, 110, 97, 45, 119, 111, 97] => lookup_1117_439(acc),
            [118, 97, 110, 103] => lookup_1117_440(acc),
            [120, 110, 45, 45, 100, 110, 110, 97, 45, 103, 114, 97] => lookup_1117_441(acc),
            [118, 101, 118, 101, 108, 115, 116, 97, 100] => lookup_1117_442(acc),
            [110, 101, 115, 110, 97] => lookup_1117_443(acc),
            [108, 97, 104, 112, 112, 105] => lookup_1117_444(acc),
            [120, 110, 45, 45, 103, 105, 108, 100, 101, 115, 107, 108, 45, 103, 48, 97] => {
                lookup_1117_445(acc)
            }
            [104, 108] => lookup_1117_446(labels, acc),
            [102, 114, 111, 108, 97, 110, 100] => lookup_1117_447(acc),
            [108, 105, 110, 100, 195, 165, 115] => lookup_1117_448(acc),
            [114, 105, 110, 103, 115, 97, 107, 101, 114] => lookup_1117_449(acc),
            [102, 105, 110, 110, 111, 121] => lookup_1117_450(acc),
            [107, 108, 97, 98, 117] => lookup_1117_451(acc),
            [120, 110, 45, 45, 104, 103, 101, 98, 111, 115, 116, 97, 100, 45, 103, 51, 97] => {
                lookup_1117_452(acc)
            }
            [109, 111, 115, 118, 105, 107] => lookup_1117_453(acc),
            [110, 111, 114, 100, 100, 97, 108] => lookup_1117_454(acc),
            [107, 111, 112, 101, 114, 118, 105, 107] => lookup_1117_455(acc),
            [106, 97, 110, 45, 109, 97, 121, 101, 110] => lookup_1117_456(labels, acc),
            [114, 97, 117, 109, 97] => lookup_1117_457(acc),
            [102, 121, 114, 101, 115, 100, 97, 108] => lookup_1117_458(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 97, 110, 100] => lookup_1117_459(acc),
            [98, 101, 97, 114, 97, 108, 118, 195, 161, 104, 107, 105] => lookup_1117_460(acc),
            [115, 97, 110, 100, 110, 101, 115] => lookup_1117_461(acc),
            [104, 111, 114, 116, 101, 110] => lookup_1117_462(acc),
            [100, 114, 195, 184, 98, 97, 107] => lookup_1117_463(acc),
            [102, 101, 116, 115, 117, 110, 100] => lookup_1117_464(acc),
            [120, 110, 45, 45, 104, 112, 109, 105, 114, 45, 120, 113, 97] => lookup_1117_465(acc),
            [120, 110, 45, 45, 109, 108, 115, 101, 108, 118, 45, 105, 117, 97] => {
                lookup_1117_466(acc)
            }
            [120, 110, 45, 45, 104, 98, 109, 101, 114, 45, 120, 113, 97] => lookup_1117_467(acc),
            [115, 107, 106, 101, 114, 118, 111, 121] => lookup_1117_468(acc),
            [115, 116, 101, 105, 110, 107, 106, 101, 114] => lookup_1117_469(acc),
            [107, 118, 195, 166, 102, 106, 111, 114, 100] => lookup_1117_470(acc),
            [115, 117, 110, 100] => lookup_1117_471(acc),
            [110, 97, 97, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_1117_472(acc)
            }
            [120, 110, 45, 45, 109, 101, 114, 107, 101, 114, 45, 107, 117, 97] => {
                lookup_1117_473(acc)
            }
            [115, 107, 106, 97, 107] => lookup_1117_474(acc),
            [107, 97, 114, 97, 115, 106, 111, 104, 107, 97] => lookup_1117_475(acc),
            [116, 114, 111, 109, 115, 111] => lookup_1117_476(acc),
            [116, 121, 115, 118, 97, 114] => lookup_1117_477(acc),
            [120, 110, 45, 45, 115, 114, 45, 97, 117, 114, 100, 97, 108, 45, 108, 56, 97] => {
                lookup_1117_478(acc)
            }
            [108, 101, 107, 97] => lookup_1117_479(acc),
            [110, 97, 109, 115, 111, 115] => lookup_1117_480(acc),
            [120, 110, 45, 45, 116, 110, 115, 98, 101, 114, 103, 45, 113, 49, 97] => {
                lookup_1117_481(acc)
            }
            [117, 108, 108, 101, 110, 115, 97, 107, 101, 114] => lookup_1117_482(acc),
            [109, 195, 165, 108, 115, 101, 108, 118] => lookup_1117_483(acc),
            [110, 105, 116, 116, 101, 100, 97, 108] => lookup_1117_484(acc),
            [118, 97, 114, 103, 103, 97, 116] => lookup_1117_485(acc),
            [108, 117, 110, 100] => lookup_1117_486(acc),
            [120, 110, 45, 45, 118, 101, 103, 114, 115, 104, 101, 105, 45, 99, 48, 97] => {
                lookup_1117_487(acc)
            }
            [120, 110, 45, 45, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110, 45, 122, 99, 98] => {
                lookup_1117_488(acc)
            }
            [118, 101, 103, 195, 165, 114, 115, 104, 101, 105] => lookup_1117_489(acc),
            [104, 111, 108, 116, 195, 165, 108, 101, 110] => lookup_1117_490(acc),
            [104, 195, 161, 98, 109, 101, 114] => lookup_1117_491(acc),
            [108, 101, 118, 97, 110, 103, 101, 114] => lookup_1117_492(acc),
            [104, 111, 121, 108, 97, 110, 100, 101, 116] => lookup_1117_493(acc),
            [108, 111, 109] => lookup_1117_494(acc),
            [120, 110, 45, 45, 114, 101, 110, 110, 101, 115, 121, 45, 118, 49, 97] => {
                lookup_1117_495(acc)
            }
            [120, 110, 45, 45, 98, 111, 100, 45, 50, 110, 97] => lookup_1117_496(acc),
            [102, 114, 97, 110, 97] => lookup_1117_497(acc),
            [102, 101, 116] => lookup_1117_498(acc),
            [120, 110, 45, 45, 107, 102, 106, 111, 114, 100, 45, 105, 117, 97] => {
                lookup_1117_499(acc)
            }
            [116, 101, 108, 101, 109, 97, 114, 107] => lookup_1117_500(info, labels, acc),
            [120, 110, 45, 45, 108, 111, 97, 98, 116, 45, 48, 113, 97] => lookup_1117_501(acc),
            [114, 111, 109, 115, 107, 111, 103] => lookup_1117_502(acc),
            [120, 110, 45, 45, 104, 111, 98, 108, 45, 105, 114, 97] => lookup_1117_503(acc),
            [111, 112, 112, 101, 103, 97, 114, 100] => lookup_1117_504(acc),
            [115, 116, 106, 111, 114, 100, 97, 108] => lookup_1117_505(acc),
            [115, 195, 184, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_1117_506(acc),
            [118, 97, 107, 115, 100, 97, 108] => lookup_1117_507(acc),
            [118, 101, 103, 97, 114, 115, 104, 101, 105] => lookup_1117_508(acc),
            [118, 97, 103, 115, 111, 121] => lookup_1117_509(acc),
            [115, 112, 106, 101, 108, 107, 97, 118, 105, 107] => lookup_1117_510(acc),
            [98, 114, 101, 109, 97, 110, 103, 101, 114] => lookup_1117_511(acc),
            [120, 110, 45, 45, 114, 100, 121, 45, 48, 110, 97, 98] => lookup_1117_512(acc),
            [120, 110, 45, 45, 103, 103, 97, 118, 105, 105, 107, 97, 45, 56, 121, 97, 52, 55, 104] => {
                lookup_1117_513(acc)
            }
            [115, 107, 105, 101, 110] => lookup_1117_514(acc),
            [115, 107, 195, 165, 110, 108, 97, 110, 100] => lookup_1117_515(acc),
            [116, 114, 97, 110, 111, 121] => lookup_1117_516(acc),
            [98, 195, 165, 116, 115, 102, 106, 111, 114, 100] => lookup_1117_517(acc),
            [102, 108, 111, 114, 97] => lookup_1117_518(acc),
            [120, 110, 45, 45, 104, 111, 108, 116, 108, 101, 110, 45, 104, 120, 97] => {
                lookup_1117_519(acc)
            }
            [114, 97, 110, 100, 97, 98, 101, 114, 103] => lookup_1117_520(acc),
            [109, 111, 115, 106, 195, 184, 101, 110] => lookup_1117_521(acc),
            [115, 195, 161, 108, 97, 116] => lookup_1117_522(acc),
            [120, 110, 45, 45, 118, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_1117_523(acc),
            [115, 105, 114, 100, 97, 108] => lookup_1117_524(acc),
            [120, 110, 45, 45, 115, 116, 102, 111, 108, 100, 45, 57, 120, 97] => {
                lookup_1117_525(info, labels, acc)
            }
            [109, 97, 115, 111, 121] => lookup_1117_526(acc),
            [108, 105, 108, 108, 101, 115, 97, 110, 100] => lookup_1117_527(acc),
            [109, 111, 195, 165, 114, 101, 107, 101] => lookup_1117_528(acc),
            [98, 121, 103, 108, 97, 110, 100] => lookup_1117_529(acc),
            [108, 105, 101, 114, 110, 101] => lookup_1117_530(acc),
            [120, 110, 45, 45, 118, 114, 103, 103, 116, 45, 120, 113, 97, 100] => {
                lookup_1117_531(acc)
            }
            [116, 121, 115, 118, 195, 166, 114] => lookup_1117_532(acc),
            [103, 105, 108, 100, 101, 115, 107, 195, 165, 108] => lookup_1117_533(acc),
            [97, 110, 100, 195, 184, 121] => lookup_1117_534(acc),
            [98, 97, 108, 115, 102, 106, 111, 114, 100] => lookup_1117_535(acc),
            [102, 111, 108, 108, 100, 97, 108] => lookup_1117_536(acc),
            [98, 195, 161, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_1117_537(acc),
            [102, 114, 111, 115, 116, 97] => lookup_1117_538(acc),
            [104, 111, 108] => lookup_1117_539(acc),
            [109, 97, 108, 118, 105, 107] => lookup_1117_540(acc),
            [114, 195, 161, 105, 115, 97] => lookup_1117_541(acc),
            [115, 111, 108, 97] => lookup_1117_542(acc),
            [115, 116, 111, 114, 45, 101, 108, 118, 100, 97, 108] => lookup_1117_543(acc),
            [120, 110, 45, 45, 115, 101, 114, 97, 108, 45, 108, 114, 97] => lookup_1117_544(acc),
            [103, 117, 108, 101, 110] => lookup_1117_545(acc),
            [116, 114, 111, 97, 110, 100, 105, 110] => lookup_1117_546(acc),
            [105, 118, 101, 108, 97, 110, 100] => lookup_1117_547(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 117, 110, 100] => lookup_1117_548(acc),
            [102, 114, 111, 121, 97] => lookup_1117_549(acc),
            [100, 195, 184, 110, 110, 97] => lookup_1117_550(acc),
            [98, 121, 107, 108, 101] => lookup_1117_551(acc),
            [101, 105, 100, 102, 106, 111, 114, 100] => lookup_1117_552(acc),
            [120, 110, 45, 45, 103, 108, 115, 45, 101, 108, 97, 99] => lookup_1117_553(acc),
            [104, 97, 114, 97, 109] => lookup_1117_554(acc),
            [108, 117, 110, 110, 101, 114] => lookup_1117_555(acc),
            [115, 116, 111, 114, 102, 106, 111, 114, 100] => lookup_1117_556(acc),
            [116, 114, 111, 103, 115, 116, 97, 100] => lookup_1117_557(acc),
            [102, 106, 101, 108, 108] => lookup_1117_558(acc),
            [115, 107, 195, 161, 110, 105, 116] => lookup_1117_559(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 115, 117, 110, 100, 45, 109, 56, 97, 99] => {
                lookup_1117_560(acc)
            }
            [101, 105, 100, 115, 118, 111, 108, 108] => lookup_1117_561(acc),
            [120, 110, 45, 45, 110, 118, 117, 111, 116, 110, 97, 45, 104, 119, 97] => {
                lookup_1117_562(acc)
            }
            [120, 110, 45, 45, 101, 118, 101, 110, 105, 45, 48, 113, 97, 48, 49, 103, 97] => {
                lookup_1117_563(acc)
            }
            [109, 111, 100, 117, 109] => lookup_1117_564(acc),
            [120, 110, 45, 45, 116, 114, 103, 115, 116, 97, 100, 45, 114, 49, 97] => {
                lookup_1117_565(acc)
            }
            [115, 116, 97, 118, 101, 114, 110] => lookup_1117_566(acc),
            [115, 195, 184, 109, 110, 97] => lookup_1117_567(acc),
            [104, 195, 184, 110, 101, 102, 111, 115, 115] => lookup_1117_568(acc),
            [112, 114, 105, 118] => lookup_1117_569(acc),
            [104, 111, 108, 101] => lookup_1117_570(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 110, 101, 115, 115, 106, 101, 110, 45, 111, 103, 98] => {
                lookup_1117_571(acc)
            }
            [118, 101, 102, 115, 110] => lookup_1117_572(acc),
            [102, 117, 111, 105, 115, 107, 117] => lookup_1117_573(acc),
            [107, 118, 97, 102, 106, 111, 114, 100] => lookup_1117_574(acc),
            [118, 105, 110, 100, 97, 102, 106, 111, 114, 100] => lookup_1117_575(acc),
            [102, 111, 108, 107, 101, 98, 105, 98, 108] => lookup_1117_576(acc),
            [109, 101, 114, 195, 165, 107, 101, 114] => lookup_1117_577(acc),
            [109, 97, 115, 102, 106, 111, 114, 100, 101, 110] => lookup_1117_578(acc),
            [102, 117, 111, 115, 115, 107, 111] => lookup_1117_579(acc),
            [102, 106, 97, 108, 101, 114] => lookup_1117_580(acc),
            [104, 111, 102] => lookup_1117_581(acc),
            [115, 101, 108, 98, 117] => lookup_1117_582(acc),
            [120, 110, 45, 45, 108, 114, 100, 97, 108, 45, 115, 114, 97] => lookup_1117_583(acc),
            [120, 110, 45, 45, 97, 115, 107, 121, 45, 105, 114, 97] => lookup_1117_584(acc),
            [120, 110, 45, 45, 108, 105, 110, 100, 115, 45, 112, 114, 97] => lookup_1117_585(acc),
            [120, 110, 45, 45, 104, 110, 101, 102, 111, 115, 115, 45, 113, 49, 97] => {
                lookup_1117_586(acc)
            }
            [107, 114, 111, 107, 115, 116, 97, 100, 101, 108, 118, 97] => lookup_1117_587(acc),
            [98, 106, 101, 114, 107, 114, 101, 105, 109] => lookup_1117_588(acc),
            [115, 116, 101, 105, 103, 101, 110] => lookup_1117_589(acc),
            [109, 105, 108] => lookup_1117_590(acc),
            [109, 117, 111, 115, 97, 116] => lookup_1117_591(acc),
            [115, 107, 101, 100, 115, 109, 111] => lookup_1117_592(acc),
            [114, 97, 107, 107, 101, 115, 116, 97, 100] => lookup_1117_593(acc),
            [97, 115, 107, 118, 111, 108, 108] => lookup_1117_594(acc),
            [120, 110, 45, 45, 108, 45, 49, 102, 97] => lookup_1117_595(acc),
            [120, 110, 45, 45, 108, 104, 112, 112, 105, 45, 120, 113, 97] => lookup_1117_596(acc),
            [110, 97, 109, 100, 97, 108, 115, 101, 105, 100] => lookup_1117_597(acc),
            [195, 184, 115, 116, 102, 111, 108, 100] => lookup_1117_598(info, labels, acc),
            [120, 110, 45, 45, 98, 116, 115, 102, 106, 111, 114, 100, 45, 57, 122, 97] => {
                lookup_1117_599(acc)
            }
            [111, 121, 101, 114] => lookup_1117_600(acc),
            [116, 114, 97, 110, 98, 121] => lookup_1117_601(acc),
            [195, 165, 108, 103, 195, 165, 114, 100] => lookup_1117_602(acc),
            [107, 118, 105, 110, 110, 104, 101, 114, 97, 100] => lookup_1117_603(acc),
            [120, 110, 45, 45, 121, 103, 97, 114, 100, 101, 110, 45, 112, 49, 97] => {
                lookup_1117_604(acc)
            }
            [103, 114, 97, 116, 97, 110, 103, 101, 110] => lookup_1117_605(acc),
            [103, 108, 111, 112, 112, 101, 110] => lookup_1117_606(acc),
            [103, 97, 105, 118, 117, 111, 116, 110, 97] => lookup_1117_607(acc),
            [111, 115, 195, 184, 121, 114, 111] => lookup_1117_608(acc),
            [100, 105, 101, 108, 100, 100, 97, 110, 117, 111, 114, 114, 105] => {
                lookup_1117_609(acc)
            }
            [115, 107, 97, 110, 108, 97, 110, 100] => lookup_1117_610(acc),
            [103, 114, 97, 110, 118, 105, 110] => lookup_1117_611(acc),
            [116, 111, 110, 115, 98, 101, 114, 103] => lookup_1117_612(acc),
            [99, 97, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_1117_613(acc),
            [118, 97, 114, 100, 195, 184] => lookup_1117_614(acc),
            [118, 101, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_1117_615(acc),
            [108, 195, 184, 100, 105, 110, 103, 101, 110] => lookup_1117_616(acc),
            [100, 97, 118, 118, 101, 110, 106, 97, 114, 103, 97] => lookup_1117_617(acc),
            [120, 110, 45, 45, 118, 97, 114, 100, 45, 106, 114, 97] => lookup_1117_618(acc),
            [97, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_1117_619(acc),
            [111, 100, 100, 97] => lookup_1117_620(acc),
            [107, 114, 111, 100, 115, 104, 101, 114, 97, 100] => lookup_1117_621(acc),
            [102, 97, 114, 115, 117, 110, 100] => lookup_1117_622(acc),
            [101, 118, 101, 110, 101, 115] => lookup_1117_623(acc),
            [104, 111, 108, 109, 101, 115, 116, 114, 97, 110, 100] => lookup_1117_624(acc),
            [106, 111, 108, 115, 116, 101, 114] => lookup_1117_625(acc),
            [118, 195, 165, 103, 195, 165] => lookup_1117_626(acc),
            [114, 101, 110, 110, 101, 115, 111, 121] => lookup_1117_627(acc),
            [115, 195, 184, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_1117_628(acc),
            [115, 116, 97, 116] => lookup_1117_629(acc),
            [110, 195, 161, 118, 117, 111, 116, 110, 97] => lookup_1117_630(acc),
            [120, 110, 45, 45, 100, 114, 98, 97, 107, 45, 119, 117, 97] => lookup_1117_631(acc),
            [115, 102] => lookup_1117_632(labels, acc),
            [120, 110, 45, 45, 110, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101, 45, 116, 99, 98, 97] => {
                lookup_1117_633(acc)
            }
            [102, 114, 101, 105] => lookup_1117_634(acc),
            [115, 109, 195, 184, 108, 97] => lookup_1117_635(acc),
            [98, 195, 165, 100, 195, 165, 100, 100, 106, 195, 165] => lookup_1117_636(acc),
            [114, 195, 184, 115, 116] => lookup_1117_637(acc),
            [120, 110, 45, 45, 115, 45, 49, 102, 97] => lookup_1117_638(acc),
            [107, 118, 97, 109] => lookup_1117_639(acc),
            [120, 110, 45, 45, 108, 117, 114, 121, 45, 105, 114, 97] => lookup_1117_640(acc),
            [115, 112, 121, 100, 101, 98, 101, 114, 103] => lookup_1117_641(acc),
            [104, 121, 108, 108, 101, 115, 116, 97, 100] => lookup_1117_642(acc),
            [120, 110, 45, 45, 116, 121, 115, 118, 114, 45, 118, 114, 97] => lookup_1117_643(acc),
            [120, 110, 45, 45, 118, 97, 100, 115, 45, 106, 114, 97] => lookup_1117_644(acc),
            [118, 97, 100, 115, 195, 184] => lookup_1117_645(acc),
            [97, 108, 115, 116, 97, 104, 97, 117, 103] => lookup_1117_646(acc),
            [100, 111, 110, 110, 97] => lookup_1117_647(acc),
            [120, 110, 45, 45, 107, 111, 108, 117, 111, 107, 116, 97, 45, 55, 121, 97, 53, 55, 104] => {
                lookup_1117_648(acc)
            }
            [120, 110, 45, 45, 115, 107, 110, 105, 116, 45, 121, 113, 97] => lookup_1117_649(acc),
            [97, 107, 110, 111, 108, 117, 111, 107, 116, 97] => lookup_1117_650(acc),
            [107, 111, 109, 109, 117, 110, 101] => lookup_1117_651(acc),
            [104, 97, 98, 109, 101, 114] => lookup_1117_652(acc),
            [98, 111, 100, 111] => lookup_1117_653(acc),
            [97, 117, 114, 108, 97, 110, 100] => lookup_1117_654(acc),
            [98, 97, 108, 97, 116] => lookup_1117_655(acc),
            [100, 114, 97, 109, 109, 101, 110] => lookup_1117_656(acc),
            [103, 114, 97, 110] => lookup_1117_657(acc),
            [120, 110, 45, 45, 107, 114, 100, 115, 104, 101, 114, 97, 100, 45, 109, 56, 97] => {
                lookup_1117_658(acc)
            }
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 111, 108, 97, 110, 100] => {
                lookup_1117_659(acc)
            }
            [103, 195, 161, 105, 118, 117, 111, 116, 110, 97] => lookup_1117_660(acc),
            [109, 105, 100, 116, 114, 101, 45, 103, 97, 117, 108, 100, 97, 108] => {
                lookup_1117_661(acc)
            }
            [104, 97, 116, 116, 102, 106, 101, 108, 108, 100, 97, 108] => lookup_1117_662(acc),
            [109, 111, 115, 107, 101, 110, 101, 115] => lookup_1117_663(acc),
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110, 45, 115, 113, 98] => {
                lookup_1117_664(acc)
            }
            [111, 114, 108, 97, 110, 100] => lookup_1117_665(acc),
            [104, 97, 108, 115, 97] => lookup_1117_666(acc),
            [195, 184, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_1117_667(acc),
            [109, 111, 115, 115] => lookup_1117_668(acc),
            [114, 105, 110, 103, 101, 114, 105, 107, 101] => lookup_1117_669(acc),
            [114, 195, 184, 121, 114, 118, 105, 107] => lookup_1117_670(acc),
            [104, 101, 114, 97, 100] => lookup_1117_671(acc),
            [195, 165, 107, 114, 101, 104, 97, 109, 110] => lookup_1117_672(acc),
            [120, 110, 45, 45, 107, 114, 101, 104, 97, 109, 110, 45, 100, 120, 97] => {
                lookup_1117_673(acc)
            }
            [98, 97, 114, 100, 117] => lookup_1117_674(acc),
            [98, 101, 114, 103, 101, 110] => lookup_1117_675(acc),
            [120, 110, 45, 45, 106, 114, 112, 101, 108, 97, 110, 100, 45, 53, 52, 97] => {
                lookup_1117_676(acc)
            }
            [97, 102, 106, 111, 114, 100] => lookup_1117_677(acc),
            [120, 110, 45, 45, 102, 106, 111, 114, 100, 45, 108, 114, 97] => lookup_1117_678(acc),
            [101, 118, 101, 110, 97, 115, 115, 105] => lookup_1117_679(acc),
            [106, 111, 110, 100, 97, 108] => lookup_1117_680(acc),
            [108, 111, 116, 101, 110] => lookup_1117_681(acc),
            [101, 103, 101, 114, 115, 117, 110, 100] => lookup_1117_682(acc),
            [102, 108, 97, 116, 97, 110, 103, 101, 114] => lookup_1117_683(acc),
            [104, 101, 109, 115, 101, 100, 97, 108] => lookup_1117_684(acc),
            [104, 111, 98, 195, 184, 108] => lookup_1117_685(acc),
            [110, 97, 117, 115, 116, 100, 97, 108] => lookup_1117_686(acc),
            [110, 97, 114, 111, 121] => lookup_1117_687(acc),
            [114, 195, 165, 100, 101] => lookup_1117_688(acc),
            [97, 108] => lookup_1117_689(acc),
            [98, 111, 109, 108, 111] => lookup_1117_690(acc),
            [115, 105, 103, 100, 97, 108] => lookup_1117_691(acc),
            [109, 101, 108, 104, 117, 115] => lookup_1117_692(acc),
            [120, 110, 45, 45, 115, 108, 97, 116, 45, 53, 110, 97] => lookup_1117_693(acc),
            [115, 110, 97, 115, 97] => lookup_1117_694(acc),
            [115, 110, 195, 165, 97, 115, 101] => lookup_1117_695(acc),
            [115, 111, 103, 110, 101] => lookup_1117_696(acc),
            [195, 165, 109, 108, 105] => lookup_1117_697(acc),
            [117, 110, 106, 97, 114, 103, 97] => lookup_1117_698(acc),
            [108, 101, 114, 100, 97, 108] => lookup_1117_699(acc),
            [102, 108, 111, 114, 111] => lookup_1117_700(acc),
            [103, 114, 117, 101] => lookup_1117_701(acc),
            [102, 109] => lookup_1117_702(labels, acc),
            [109, 111, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_1117_703(info, labels, acc)
            }
            [110, 195, 165, 195, 165, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_1117_704(acc)
            }
            [111, 115, 101, 110] => lookup_1117_705(acc),
            [120, 110, 45, 45, 121, 101, 114, 45, 122, 110, 97] => lookup_1117_706(acc),
            [120, 110, 45, 45, 111, 115, 121, 114, 111, 45, 119, 117, 97] => lookup_1117_707(acc),
            [115, 97, 114, 112, 115, 98, 111, 114, 103] => lookup_1117_708(acc),
            [114, 97, 100, 195, 184, 121] => lookup_1117_709(acc),
            [101, 105, 100] => lookup_1117_710(acc),
            [115, 107, 105, 101, 114, 118, 97] => lookup_1117_711(acc),
            [115, 110, 195, 165, 115, 97] => lookup_1117_712(acc),
            [107, 195, 165, 102, 106, 111, 114, 100] => lookup_1117_713(acc),
            [98, 195, 161, 106, 100, 100, 97, 114] => lookup_1117_714(acc),
            [115, 107, 101, 100, 115, 109, 111, 107, 111, 114, 115, 101, 116] => {
                lookup_1117_715(acc)
            }
            [115, 111, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_1117_716(acc),
            [195, 184, 121, 103, 97, 114, 100, 101, 110] => lookup_1117_717(acc),
            [100, 101, 97, 116, 110, 117] => lookup_1117_718(acc),
            [116, 105, 110, 103, 118, 111, 108, 108] => lookup_1117_719(acc),
            [100, 97, 118, 118, 101, 115, 105, 105, 100, 97] => lookup_1117_720(acc),
            [120, 110, 45, 45, 97, 110, 100, 121, 45, 105, 114, 97] => lookup_1117_721(acc),
            [116, 105, 110, 110] => lookup_1117_722(acc),
            [120, 110, 45, 45, 102, 105, 110, 110, 121, 45, 121, 117, 97] => lookup_1117_723(acc),
            [116, 106, 101, 108, 100, 115, 117, 110, 100] => lookup_1117_724(acc),
            [114, 195, 184, 109, 115, 107, 111, 103] => lookup_1117_725(acc),
            [115, 111, 114, 114, 101, 105, 115, 97] => lookup_1117_726(acc),
            [117, 108, 118, 105, 107] => lookup_1117_727(acc),
            [195, 184, 107, 115, 110, 101, 115] => lookup_1117_728(acc),
            [97, 108, 103, 97, 114, 100] => lookup_1117_729(acc),
            [108, 101, 105, 114, 102, 106, 111, 114, 100] => lookup_1117_730(acc),
            [120, 110, 45, 45, 110, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_1117_731(acc),
            [102, 111, 114, 115, 97, 110, 100] => lookup_1117_732(acc),
            [120, 110, 45, 45, 112, 111, 114, 115, 103, 117, 45, 115, 116, 97, 50, 54, 102] => {
                lookup_1117_733(acc)
            }
            [116, 97, 110, 97, 110, 103, 101, 114] => lookup_1117_734(acc),
            [104, 97, 109, 97, 114, 111, 121] => lookup_1117_735(acc),
            [101, 118, 101, 110, 195, 161, 197, 161, 197, 161, 105] => lookup_1117_736(acc),
            [114, 195, 165, 104, 111, 108, 116] => lookup_1117_737(acc),
            [104, 97, 109, 97, 114] => lookup_1117_738(acc),
            [104, 97, 114, 101, 105, 100] => lookup_1117_739(acc),
            [110, 97, 118, 117, 111, 116, 110, 97] => lookup_1117_740(acc),
            [108, 101, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_1117_741(acc),
            [120, 110, 45, 45, 108, 101, 97, 103, 97, 118, 105, 105, 107, 97, 45, 53, 50, 98] => {
                lookup_1117_742(acc)
            }
            [120, 110, 45, 45, 114, 97, 100, 121, 45, 105, 114, 97] => lookup_1117_743(acc),
            [114, 105, 110, 100, 97, 108] => lookup_1117_744(acc),
            [115, 107, 97, 117, 110] => lookup_1117_745(acc),
            [115, 111, 108, 117, 110, 100] => lookup_1117_746(acc),
            [120, 110, 45, 45, 104, 99, 101, 115, 117, 111, 108, 111, 45, 55, 121, 97, 51, 53, 98] => {
                lookup_1117_747(acc)
            }
            [118, 101, 115, 116, 118, 195, 165, 103, 195, 184, 121] => lookup_1117_748(acc),
            [97, 115, 107, 101, 114] => lookup_1117_749(acc),
            [115, 195, 184, 114, 117, 109] => lookup_1117_750(acc),
            [120, 110, 45, 45, 117, 110, 106, 114, 103, 97, 45, 114, 116, 97] => {
                lookup_1117_751(acc)
            }
            [98, 105, 101, 118, 195, 161, 116] => lookup_1117_752(acc),
            [103, 105, 108, 100, 101, 115, 107, 97, 108] => lookup_1117_753(acc),
            [97, 114, 101, 110, 100, 97, 108] => lookup_1117_754(acc),
            [103, 195, 161, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_1117_755(acc),
            [109, 195, 165, 115, 195, 184, 121] => lookup_1117_756(acc),
            [111, 112, 112, 101, 103, 195, 165, 114, 100] => lookup_1117_757(acc),
            [110, 97, 109, 115, 115, 107, 111, 103, 97, 110] => lookup_1117_758(acc),
            [116, 114, 111, 110, 100, 104, 101, 105, 109] => lookup_1117_759(acc),
            [98, 114, 111, 110, 110, 111, 121, 115, 117, 110, 100] => lookup_1117_760(acc),
            [110, 101, 115, 111, 100, 100, 116, 97, 110, 103, 101, 110] => lookup_1117_761(acc),
            [98, 114, 111, 110, 110, 111, 121] => lookup_1117_762(acc),
            [116, 114, 195, 166, 110, 97] => lookup_1117_763(acc),
            [109, 111, 115, 106, 111, 101, 110] => lookup_1117_764(acc),
            [195, 165, 115, 101, 114, 97, 108] => lookup_1117_765(acc),
            [98, 195, 184, 109, 108, 111] => lookup_1117_766(acc),
            [101, 105, 100, 115, 98, 101, 114, 103] => lookup_1117_767(acc),
            [108, 105, 110, 100, 97, 115] => lookup_1117_768(acc),
            [120, 110, 45, 45, 102, 114, 100, 101, 45, 103, 114, 97] => lookup_1117_769(acc),
            [103, 97, 117, 115, 100, 97, 108] => lookup_1117_770(acc),
            [104, 97, 117, 103, 101, 115, 117, 110, 100] => lookup_1117_771(acc),
            [108, 121, 110, 103, 101, 110] => lookup_1117_772(acc),
            [114, 97, 108, 105, 110, 103, 101, 110] => lookup_1117_773(acc),
            [118, 105, 107] => lookup_1117_774(acc),
            [111, 115, 116, 102, 111, 108, 100] => lookup_1117_775(info, labels, acc),
            [116, 114, 111, 109, 115, 97] => lookup_1117_776(acc),
            [116, 109] => lookup_1117_777(labels, acc),
            [103, 114, 97, 110, 101] => lookup_1117_778(acc),
            [115, 195, 184, 103, 110, 101] => lookup_1117_779(acc),
            [115, 116, 111, 107, 107, 101] => lookup_1117_780(acc),
            [118, 111, 108, 100, 97] => lookup_1117_781(acc),
            [120, 110, 45, 45, 97, 118, 101, 114, 121, 45, 121, 117, 97] => lookup_1117_782(acc),
            [115, 111, 103, 110, 100, 97, 108] => lookup_1117_783(acc),
            [104, 97, 109, 109, 101, 114, 102, 101, 115, 116] => lookup_1117_784(acc),
            [118, 111, 115, 115, 101, 118, 97, 110, 103, 101, 110] => lookup_1117_785(acc),
            [120, 110, 45, 45, 108, 101, 115, 117, 110, 100, 45, 104, 117, 97] => {
                lookup_1117_786(acc)
            }
            [97, 117, 115, 116, 101, 118, 111, 108, 108] => lookup_1117_787(acc),
            [97, 101, 106, 114, 105, 101] => lookup_1117_788(acc),
            [120, 110, 45, 45, 108, 97, 104, 101, 97, 100, 106, 117, 45, 55, 121, 97] => {
                lookup_1117_789(acc)
            }
            [110, 111, 114, 100, 107, 97, 112, 112] => lookup_1117_790(acc),
            [115, 111, 109, 110, 97] => lookup_1117_791(acc),
            [103, 106, 101, 109, 110, 101, 115] => lookup_1117_792(acc),
            [120, 110, 45, 45, 118, 103, 115, 121, 45, 113, 111, 97, 48, 106] => {
                lookup_1117_793(acc)
            }
            [103, 105, 101, 104, 116, 97, 118, 117, 111, 97, 116, 110, 97] => lookup_1117_794(acc),
            [120, 110, 45, 45, 108, 116, 45, 108, 105, 97, 99] => lookup_1117_795(acc),
            [97, 117, 100, 110, 101, 100, 97, 108, 110] => lookup_1117_796(acc),
            [104, 97, 112, 109, 105, 114] => lookup_1117_797(acc),
            [110, 111, 114, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_1117_798(acc),
            [118, 111, 115, 115] => lookup_1117_799(acc),
            [114, 101, 110, 110, 101, 98, 117] => lookup_1117_800(acc),
            [98, 111, 107, 110] => lookup_1117_801(acc),
            [97, 108, 116, 97] => lookup_1117_802(acc),
            [107, 111, 110, 103, 115, 98, 101, 114, 103] => lookup_1117_803(acc),
            [114, 105, 115, 111, 114] => lookup_1117_804(acc),
            [97, 115, 107, 105, 109] => lookup_1117_805(acc),
            [120, 110, 45, 45, 106, 108, 115, 116, 101, 114, 45, 98, 121, 97] => {
                lookup_1117_806(acc)
            }
            [111, 114, 107, 97, 110, 103, 101, 114] => lookup_1117_807(acc),
            [108, 101, 115, 106, 97] => lookup_1117_808(acc),
            [116, 114, 195, 184, 103, 115, 116, 97, 100] => lookup_1117_809(acc),
            [110, 116] => lookup_1117_810(labels, acc),
            [120, 110, 45, 45, 104, 121, 97, 110, 103, 101, 114, 45, 113, 49, 97] => {
                lookup_1117_811(acc)
            }
            [103, 106, 101, 114, 100, 114, 117, 109] => lookup_1117_812(acc),
            [118, 195, 161, 114, 103, 103, 195, 161, 116] => lookup_1117_813(acc),
            [110, 97, 114, 118, 105, 105, 107, 97] => lookup_1117_814(acc),
            [104, 111, 110, 101, 102, 111, 115, 115] => lookup_1117_815(acc),
            [109, 195, 161, 116, 116, 97, 45, 118, 195, 161, 114, 106, 106, 97, 116] => {
                lookup_1117_816(acc)
            }
            [104, 111, 98, 111, 108] => lookup_1117_817(acc),
            [120, 110, 45, 45, 104, 121, 108, 97, 110, 100, 101, 116, 45, 53, 52, 97] => {
                lookup_1117_818(acc)
            }
            [114, 111, 100, 111, 121] => lookup_1117_819(acc),
            [106, 101, 115, 115, 104, 101, 105, 109] => lookup_1117_820(acc),
            [104, 111, 114, 100, 97, 108, 97, 110, 100] => lookup_1117_821(info, labels, acc),
            [118, 101, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_1117_822(acc)
            }
            [115, 116, 106, 195, 184, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_1117_823(acc)
            }
            [195, 161, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_1117_824(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 195, 184, 101, 110] => {
                lookup_1117_825(acc)
            }
            [120, 110, 45, 45, 115, 114, 114, 101, 105, 115, 97, 45, 113, 49, 97] => {
                lookup_1117_826(acc)
            }
            [120, 110, 45, 45, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101, 45, 117, 106, 98] => {
                lookup_1117_827(acc)
            }
            [118, 102] => lookup_1117_828(labels, acc),
            [108, 195, 184, 114, 101, 110, 115, 107, 111, 103] => lookup_1117_829(acc),
            [110, 108] => lookup_1117_830(labels, acc),
            [108, 195, 184, 116, 101, 110] => lookup_1117_831(acc),
            [104, 101, 109, 110, 101, 115] => lookup_1117_832(acc),
            [104, 101, 109, 110, 101] => lookup_1117_833(acc),
            [111, 107, 115, 110, 101, 115] => lookup_1117_834(acc),
            [120, 110, 45, 45, 108, 97, 110, 103, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_1117_835(acc)
            }
            [105, 98, 101, 115, 116, 97, 100] => lookup_1117_836(acc),
            [114, 101, 110, 100, 97, 108, 101, 110] => lookup_1117_837(acc),
            [102, 108, 111, 114, 195, 184] => lookup_1117_838(acc),
            [115, 109, 111, 108, 97] => lookup_1117_839(acc),
            [115, 111, 107, 110, 100, 97, 108] => lookup_1117_840(acc),
            [120, 110, 45, 45, 107, 115, 110, 101, 115, 45, 117, 117, 97] => lookup_1117_841(acc),
            [115, 111, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_1117_842(acc),
            [98, 195, 166, 114, 117, 109] => lookup_1117_843(acc),
            [103, 97, 117, 108, 97, 114] => lookup_1117_844(acc),
            [114, 97, 104, 111, 108, 116] => lookup_1117_845(acc),
            [108, 117, 114, 111, 121] => lookup_1117_846(acc),
            [110, 111, 116, 111, 100, 100, 101, 110] => lookup_1117_847(acc),
            [108, 97, 114, 118, 105, 107] => lookup_1117_848(acc),
            [115, 111, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_1117_849(acc),
            [118, 97, 108, 108, 101] => lookup_1117_850(acc),
            [118, 195, 165, 103, 115, 195, 184, 121] => lookup_1117_851(acc),
            [99, 111] => lookup_1117_852(acc),
            [97, 114, 110, 97] => lookup_1117_853(acc),
            [115, 117, 110, 110, 100, 97, 108] => lookup_1117_854(acc),
            [114, 97, 104, 107, 107, 101, 114, 97, 118, 106, 117] => lookup_1117_855(acc),
            [120, 110, 45, 45, 98, 108, 116, 45, 101, 108, 97, 98] => lookup_1117_856(acc),
            [109, 114] => lookup_1117_857(labels, acc),
            [102, 104, 115] => lookup_1117_858(acc),
            [98, 117] => lookup_1117_859(labels, acc),
            [116, 114] => lookup_1117_860(labels, acc),
            [104, 195, 161, 112, 109, 105, 114] => lookup_1117_861(acc),
            [107, 108, 101, 112, 112] => lookup_1117_862(acc),
            [114, 111, 114, 111, 115] => lookup_1117_863(acc),
            [108, 105, 101, 114] => lookup_1117_864(acc),
            [102, 195, 184, 114, 100, 101] => lookup_1117_865(acc),
            [120, 110, 45, 45, 114, 115, 116, 97, 45, 102, 114, 97] => lookup_1117_866(acc),
            [117, 110, 106, 195, 161, 114, 103, 97] => lookup_1117_867(acc),
            [102, 111, 115, 110, 101, 115] => lookup_1117_868(acc),
            [107, 97, 117, 116, 111, 107, 101, 105, 110, 111] => lookup_1117_869(acc),
            [120, 110, 45, 45, 98, 114, 117, 109, 45, 118, 111, 97] => lookup_1117_870(acc),
            [97, 115, 107, 111, 121] => lookup_1117_871(acc),
            [97, 108, 118, 100, 97, 108] => lookup_1117_872(acc),
            [108, 101, 98, 101, 115, 98, 121] => lookup_1117_873(acc),
            [107, 114, 195, 165, 97, 110, 103, 104, 107, 101] => lookup_1117_874(acc),
            [115, 97, 117, 104, 101, 114, 97, 100] => lookup_1117_875(acc),
            [115, 107, 105, 112, 116, 118, 101, 116] => lookup_1117_876(acc),
            [102, 117, 115, 97] => lookup_1117_877(acc),
            [120, 110, 45, 45, 111, 115, 116, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_1117_878(acc)
            }
            [106, 111, 114, 112, 101, 108, 97, 110, 100] => lookup_1117_879(acc),
            [120, 110, 45, 45, 107, 114, 106, 111, 104, 107, 97, 45, 104, 119, 97, 98, 52, 57, 106] => {
                lookup_1117_880(acc)
            }
            [115, 107, 105, 101, 114, 118, 195, 161] => lookup_1117_881(acc),
            [108, 117, 114, 195, 184, 121] => lookup_1117_882(acc),
            [120, 110, 45, 45, 98, 105, 101, 118, 116, 45, 48, 113, 97] => lookup_1117_883(acc),
            [97, 115, 110, 101, 115] => lookup_1117_884(acc),
            [114, 195, 184, 100, 195, 184, 121] => lookup_1117_885(acc),
            [115, 107, 111, 100, 106, 101] => lookup_1117_886(acc),
            [115, 110, 111, 97, 115, 97] => lookup_1117_887(acc),
            [115, 111, 114, 116, 108, 97, 110, 100] => lookup_1117_888(acc),
            [115, 116, 114, 97, 110, 100] => lookup_1117_889(acc),
            [195, 161, 107, 197, 139, 111, 108, 117, 111, 107, 116, 97] => lookup_1117_890(acc),
            [115, 110, 97, 97, 115, 101] => lookup_1117_891(acc),
            [116, 114, 121, 115, 105, 108] => lookup_1117_892(acc),
            [118, 97, 114, 100, 111] => lookup_1117_893(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1118() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_1121_0(acc),
            [110, 111, 109] => lookup_1121_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1122() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1123() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1124() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1125_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1125_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1125_0(acc),
            [101, 100, 117] => lookup_1125_1(acc),
            [110, 111, 109] => lookup_1125_2(acc),
            [110, 97, 109, 101] => lookup_1125_3(acc),
            [111, 114, 103] => lookup_1125_4(acc),
            [99, 111, 109] => lookup_1125_5(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1125_6(acc),
            [115, 99, 104] => lookup_1125_7(acc),
            [110, 101, 116] => lookup_1125_8(acc),
            [103, 111, 118] => lookup_1125_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1126_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1126_0(acc),
            [109, 105, 108] => lookup_1126_1(acc),
            [110, 111, 109] => lookup_1126_2(acc),
            [111, 114, 103] => lookup_1126_3(acc),
            [99, 111] => lookup_1126_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1126_5(acc),
            [115, 99, 104] => lookup_1126_6(acc),
            [110, 101, 116] => lookup_1126_7(acc),
            [103, 111, 118] => lookup_1126_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1127() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1128() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1129() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_1130_0(acc),
            [99, 111] => lookup_1130_1(acc),
            [103, 111, 98] => lookup_1130_2(acc),
            [109, 105, 108] => lookup_1130_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1130_4(acc),
            [97, 112, 114, 101, 110, 100, 101, 109, 97, 115] => lookup_1130_5(acc),
            [103, 111, 118] => lookup_1130_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1131() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1133() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_1135_0(acc),
            [101, 100, 117] => lookup_1135_1(acc),
            [99, 111, 111, 112] => lookup_1135_2(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1135_3(acc),
            [110, 97, 109, 101] => lookup_1135_4(acc),
            [99, 111] => lookup_1135_5(acc),
            [99, 111, 109] => lookup_1135_6(acc),
            [98, 105, 122] => lookup_1135_7(acc),
            [109, 111, 98, 105] => lookup_1135_8(acc),
            [103, 111, 118] => lookup_1135_9(acc),
            [112, 114, 111] => lookup_1135_10(acc),
            [106, 111, 98, 115] => lookup_1135_11(acc),
            [105, 110, 102, 111] => lookup_1135_12(acc),
            [97, 101, 114, 111] => lookup_1135_13(acc),
            [111, 114, 103] => lookup_1135_14(acc),
            [110, 101, 116] => lookup_1135_15(acc),
            [116, 114, 97, 118, 101, 108] => lookup_1135_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1136_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 122, 101, 120] => lookup_1136_0(acc),
            [109, 101, 100, 105, 97] => lookup_1136_1(acc),
            [98, 111, 108, 116] => lookup_1136_2(acc),
            [103, 97, 109, 101, 115] => lookup_1136_3(acc),
            [99, 111] => lookup_1136_4(acc),
            [104, 111, 116, 101, 108] => lookup_1136_5(acc),
            [102, 105, 108, 109] => lookup_1136_6(acc),
            [105, 110, 103, 97, 116, 108, 97, 110] => lookup_1136_7(acc),
            [101, 114, 111, 116, 105, 107, 97] => lookup_1136_8(acc),
            [106, 111, 103, 97, 115, 122] => lookup_1136_9(acc),
            [118, 105, 100, 101, 111] => lookup_1136_10(acc),
            [115, 112, 111, 114, 116] => lookup_1136_11(acc),
            [105, 110, 102, 111] => lookup_1136_12(acc),
            [112, 114, 105, 118] => lookup_1136_13(acc),
            [110, 101, 119, 115] => lookup_1136_14(acc),
            [99, 97, 115, 105, 110, 111] => lookup_1136_15(acc),
            [111, 114, 103] => lookup_1136_16(acc),
            [114, 101, 107, 108, 97, 109] => lookup_1136_17(acc),
            [117, 116, 97, 122, 97, 115] => lookup_1136_18(acc),
            [107, 111, 110, 121, 118, 101, 108, 111] => lookup_1136_19(acc),
            [115, 117, 108, 105] => lookup_1136_20(acc),
            [101, 114, 111, 116, 105, 99, 97] => lookup_1136_21(acc),
            [115, 104, 111, 112] => lookup_1136_22(acc),
            [50, 48, 48, 48] => lookup_1136_23(acc),
            [102, 111, 114, 117, 109] => lookup_1136_24(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1136_25(acc),
            [97, 103, 114, 97, 114] => lookup_1136_26(acc),
            [108, 97, 107, 97, 115] => lookup_1136_27(acc),
            [99, 105, 116, 121] => lookup_1136_28(acc),
            [115, 101, 120] => lookup_1136_29(acc),
            [116, 109] => lookup_1136_30(acc),
            [116, 111, 122, 115, 100, 101] => lookup_1136_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1137_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 110, 45, 116, 104, 101, 45, 119, 101, 98] => lookup_1137_0(acc),
            [119, 111, 114, 115, 101, 45, 116, 104, 97, 110] => lookup_1137_1(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1137_2(acc),
            [98, 101, 116, 116, 101, 114, 45, 116, 104, 97, 110] => lookup_1137_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1138() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1139() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1140() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1144_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1144_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1144_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1144_0(acc),
            [110, 103, 111] => lookup_1144_1(acc),
            [110, 105, 115] => lookup_1144_2(acc),
            [101, 100, 117] => lookup_1144_3(acc),
            [110, 111, 109] => lookup_1144_4(acc),
            [119, 101, 98] => lookup_1144_5(acc),
            [99, 111] => lookup_1144_6(labels, acc),
            [103, 111, 118] => lookup_1144_7(acc),
            [110, 105, 99] => lookup_1144_8(acc),
            [109, 105, 108] => lookup_1144_9(acc),
            [97, 108, 116] => lookup_1144_10(acc),
            [108, 97, 119] => lookup_1144_11(acc),
            [115, 99, 104, 111, 111, 108] => lookup_1144_12(acc),
            [116, 109] => lookup_1144_13(acc),
            [111, 114, 103] => lookup_1144_14(acc),
            [103, 114, 111, 110, 100, 97, 114] => lookup_1144_15(acc),
            [110, 101, 116] => lookup_1144_16(acc),
            [97, 103, 114, 105, 99] => lookup_1144_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1145() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1146() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1147_0(acc),
            [101, 100, 117] => lookup_1147_1(acc),
            [103, 111, 98] => lookup_1147_2(acc),
            [99, 111, 109] => lookup_1147_3(acc),
            [114, 101, 100] => lookup_1147_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1148_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 190, 208, 180] => lookup_1148_0(acc),
            [208, 191, 209, 128] => lookup_1148_1(acc),
            [209, 131, 208, 191, 209, 128] => lookup_1148_2(acc),
            [208, 176, 208, 186] => lookup_1148_3(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1148_4(acc),
            [208, 190, 208, 177, 209, 128] => lookup_1148_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1149() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1150() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_8_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1151_8_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_1151_8_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1151_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1151_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_1151_8_0(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1151_8_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1151_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1151_0(acc),
            [111, 114, 103] => lookup_1151_1(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_1151_2(acc),
            [112, 114, 101, 115, 115] => lookup_1151_3(acc),
            [112, 114, 111] => lookup_1151_4(acc),
            [110, 97, 109, 101] => lookup_1151_5(acc),
            [116, 109] => lookup_1151_6(acc),
            [108, 116, 100] => lookup_1151_7(acc),
            [99, 111, 109] => lookup_1151_8(labels, acc),
            [98, 105, 122] => lookup_1151_9(acc),
            [101, 107, 108, 111, 103, 101, 115] => lookup_1151_10(acc),
            [103, 111, 118] => lookup_1151_11(acc),
            [110, 101, 116] => lookup_1151_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1152() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1153_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1153_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1153<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 100, 100, 110, 115] => lookup_1153_0(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_1153_1(acc),
            [119, 101, 98, 115, 112, 97, 99, 101] => lookup_1153_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1154() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1155() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1158() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1159_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1159_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1159_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1159<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97, 97] => lookup_1159_0(acc),
            [110, 111, 109] => lookup_1159_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1159_2(acc),
            [110, 121, 109] => lookup_1159_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1160() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1163() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1164() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1167_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1168_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1168<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1168_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1169() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1171() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1172() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1177() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_16_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_16_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_1178_16_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 114, 105, 103, 105, 110] => lookup_1178_16_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114, 115, 99] => lookup_1178_32_0(acc),
            [99] => lookup_1178_32_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 109, 101] => lookup_1178_60_0(acc),
            [103, 111] => lookup_1178_60_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_68_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_68_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1178_68_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_68_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_68_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1178_68_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_68_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_1178_68_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_68<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_1178_68_0(acc),
            [111, 115] => lookup_1178_68_1(info, labels, acc),
            [115, 116, 103] => lookup_1178_68_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_81_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_81<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101] => lookup_1178_81_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_100<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_1178_100_0(acc),
            [113, 45, 97] => lookup_1178_100_1(acc),
            [99, 110] => lookup_1178_100_2(acc),
            [98, 103] => lookup_1178_100_3(acc),
            [105, 110, 116] => lookup_1178_100_4(acc),
            [115, 101] => lookup_1178_100_5(acc),
            [115, 105] => lookup_1178_100_6(acc),
            [115, 107] => lookup_1178_100_7(acc),
            [99, 100] => lookup_1178_100_8(acc),
            [99, 122] => lookup_1178_100_9(acc),
            [102, 105] => lookup_1178_100_10(acc),
            [105, 116] => lookup_1178_100_11(acc),
            [100, 107] => lookup_1178_100_12(acc),
            [105, 108] => lookup_1178_100_13(acc),
            [108, 117] => lookup_1178_100_14(acc),
            [105, 110] => lookup_1178_100_15(acc),
            [110, 122] => lookup_1178_100_16(acc),
            [110, 103] => lookup_1178_100_17(acc),
            [105, 115] => lookup_1178_100_18(acc),
            [108, 116] => lookup_1178_100_19(acc),
            [106, 112] => lookup_1178_100_20(acc),
            [105, 101] => lookup_1178_100_21(acc),
            [104, 117] => lookup_1178_100_22(acc),
            [98, 101] => lookup_1178_100_23(acc),
            [104, 114] => lookup_1178_100_24(acc),
            [100, 101] => lookup_1178_100_25(acc),
            [97, 108] => lookup_1178_100_26(acc),
            [101, 115] => lookup_1178_100_27(acc),
            [101, 101] => lookup_1178_100_28(acc),
            [101, 100, 117] => lookup_1178_100_29(acc),
            [109, 99] => lookup_1178_100_30(acc),
            [109, 107] => lookup_1178_100_31(acc),
            [110, 101, 116] => lookup_1178_100_32(acc),
            [102, 114] => lookup_1178_100_33(acc),
            [109, 101] => lookup_1178_100_34(acc),
            [109, 121] => lookup_1178_100_35(acc),
            [112, 108] => lookup_1178_100_36(acc),
            [116, 114] => lookup_1178_100_37(acc),
            [114, 111] => lookup_1178_100_38(acc),
            [99, 97] => lookup_1178_100_39(acc),
            [117, 107] => lookup_1178_100_40(acc),
            [103, 114] => lookup_1178_100_41(acc),
            [99, 121] => lookup_1178_100_42(acc),
            [107, 114] => lookup_1178_100_43(acc),
            [97, 117] => lookup_1178_100_44(acc),
            [117, 115] => lookup_1178_100_45(acc),
            [112, 97, 114, 105, 115] => lookup_1178_100_46(acc),
            [108, 118] => lookup_1178_100_47(acc),
            [97, 116] => lookup_1178_100_48(acc),
            [110, 111] => lookup_1178_100_49(acc),
            [109, 116] => lookup_1178_100_50(acc),
            [112, 116] => lookup_1178_100_51(acc),
            [114, 117] => lookup_1178_100_52(acc),
            [97, 115, 115, 111] => lookup_1178_100_53(acc),
            [110, 108] => lookup_1178_100_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1178_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 111, 116, 97, 103, 101, 114] => lookup_1178_0(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_1178_1(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_1178_2(acc),
            [99, 111, 108, 108, 101, 103, 101, 102, 97, 110] => lookup_1178_3(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_1178_4(acc),
            [116, 119, 109, 97, 105, 108] => lookup_1178_5(acc),
            [100, 118, 114, 100, 110, 115] => lookup_1178_6(acc),
            [105, 115, 45, 115, 97, 118, 101, 100] => lookup_1178_7(acc),
            [105, 110, 45, 100, 115, 108] => lookup_1178_8(acc),
            [112, 105, 109, 105, 101, 110, 116, 97] => lookup_1178_9(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_1178_10(acc),
            [109, 121, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_1178_11(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_1178_12(acc),
            [109, 108, 98, 102, 97, 110] => lookup_1178_13(acc),
            [119, 101, 98, 114, 101, 100, 105, 114, 101, 99, 116] => lookup_1178_14(acc),
            [105, 115, 45, 97, 45, 115, 111, 120, 102, 97, 110] => lookup_1178_15(acc),
            [99, 100, 110, 55, 55, 45, 115, 101, 99, 117, 114, 101] => {
                lookup_1178_16(info, labels, acc)
            }
            [100, 110, 115, 100, 111, 106, 111] => lookup_1178_17(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1178_18(acc),
            [99, 97, 98, 108, 101, 45, 109, 111, 100, 101, 109] => lookup_1178_19(acc),
            [105, 115, 45, 97, 45, 107, 110, 105, 103, 104, 116] => lookup_1178_20(acc),
            [102, 114, 101, 101, 100, 101, 115, 107, 116, 111, 112] => lookup_1178_21(acc),
            [112, 117, 98, 116, 108, 115] => lookup_1178_22(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_1178_23(acc),
            [110, 102, 108, 102, 97, 110] => lookup_1178_24(acc),
            [117, 115] => lookup_1178_25(acc),
            [116, 111, 111, 108, 102, 111, 114, 103, 101] => lookup_1178_26(acc),
            [100, 100, 110, 115, 115] => lookup_1178_27(acc),
            [97, 99, 99, 101, 115, 115, 99, 97, 109] => lookup_1178_28(acc),
            [98, 97, 114, 115, 121] => lookup_1178_29(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_1178_30(acc),
            [99, 97, 109, 100, 118, 114] => lookup_1178_31(acc),
            [99, 100, 110, 55, 55] => lookup_1178_32(info, labels, acc),
            [105, 115, 45, 97, 45, 98, 114, 117, 105, 110, 115, 102, 97, 110] => {
                lookup_1178_33(acc)
            }
            [116, 117, 110, 107] => lookup_1178_34(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_1178_35(acc)
            }
            [115, 101, 108, 102, 105, 112] => lookup_1178_36(acc),
            [97, 101] => lookup_1178_37(acc),
            [122, 97, 112, 116, 111] => lookup_1178_38(acc),
            [115, 101, 108, 108, 115, 121, 111, 117, 114, 104, 111, 109, 101] => {
                lookup_1178_39(acc)
            }
            [105, 115, 45, 97, 45, 99, 101, 108, 116, 105, 99, 115, 102, 97, 110] => {
                lookup_1178_40(acc)
            }
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_1178_41(acc),
            [104, 111, 112, 116, 111] => lookup_1178_42(acc),
            [103, 111, 116, 100, 110, 115] => lookup_1178_43(acc),
            [115, 109, 97, 108, 108, 45, 119, 101, 98] => lookup_1178_44(acc),
            [99, 111, 117, 99, 104, 112, 111, 116, 97, 116, 111, 102, 114, 105, 101, 115] => {
                lookup_1178_45(acc)
            }
            [105, 115, 45, 118, 101, 114, 121, 45, 98, 97, 100] => lookup_1178_46(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_1178_47(acc),
            [105, 115, 45, 102, 111, 117, 110, 100] => lookup_1178_48(acc),
            [122, 97] => lookup_1178_49(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1178_50(acc),
            [105, 115, 45, 97, 45, 112, 97, 116, 115, 102, 97, 110] => lookup_1178_51(acc),
            [100, 121, 110, 115, 101, 114, 118] => lookup_1178_52(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 103, 111, 111, 100] => lookup_1178_53(acc),
            [116, 117, 120, 102, 97, 109, 105, 108, 121] => lookup_1178_54(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_1178_55(acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1178_56(acc),
            [102, 101, 100, 111, 114, 97, 105, 110, 102, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_1178_57(acc)
            }
            [114, 101, 97, 100, 45, 98, 111, 111, 107, 115] => lookup_1178_58(acc),
            [112, 111, 105, 118, 114, 111, 110] => lookup_1178_59(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1178_60(labels, acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1178_61(acc),
            [100, 117, 99, 107, 100, 110, 115] => lookup_1178_62(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_1178_63(acc),
            [101, 110, 100, 111, 102, 116, 104, 101, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_1178_64(acc)
            }
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_1178_65(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_1178_66(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_1178_67(acc),
            [102, 101, 100, 111, 114, 97, 112, 114, 111, 106, 101, 99, 116] => {
                lookup_1178_68(info, labels, acc)
            }
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_1178_69(acc)
            }
            [97, 108, 116, 101, 114, 118, 105, 115, 116, 97] => lookup_1178_70(acc),
            [109, 121, 102, 116, 112] => lookup_1178_71(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 115, 119, 101, 101, 116] => lookup_1178_72(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_1178_73(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_1178_74(acc),
            [115, 119, 101, 101, 116, 112, 101, 112, 112, 101, 114] => lookup_1178_75(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_1178_76(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_1178_77(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_1178_78(acc),
            [119, 109, 102, 108, 97, 98, 115] => lookup_1178_79(acc),
            [119, 109, 99, 108, 111, 117, 100] => lookup_1178_80(acc),
            [97, 109, 117, 110, 101] => lookup_1178_81(info, labels, acc),
            [106, 115] => lookup_1178_82(acc),
            [115, 112, 100, 110, 115] => lookup_1178_83(acc),
            [98, 109, 111, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115] => {
                lookup_1178_84(acc)
            }
            [117, 102, 99, 102, 97, 110] => lookup_1178_85(acc),
            [105, 110, 45, 118, 112, 110] => lookup_1178_86(acc),
            [104, 107] => lookup_1178_87(acc),
            [104, 101, 112, 102, 111, 114, 103, 101] => lookup_1178_88(acc),
            [98, 111, 108, 100, 108, 121, 103, 111, 105, 110, 103, 110, 111, 119, 104, 101, 114, 101] => {
                lookup_1178_89(acc)
            }
            [104, 111, 109, 101, 100, 110, 115] => lookup_1178_90(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_1178_91(acc),
            [105, 115, 45, 108, 111, 115, 116] => lookup_1178_92(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 101, 118, 105, 108] => lookup_1178_93(acc),
            [102, 101, 100, 111, 114, 97, 112, 101, 111, 112, 108, 101] => lookup_1178_94(acc),
            [109, 121, 119, 105, 114, 101] => lookup_1178_95(acc),
            [110, 111, 45, 105, 112] => lookup_1178_96(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_1178_97(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_1178_98(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_1178_99(acc),
            [101, 117] => lookup_1178_100(labels, acc),
            [109, 121, 45, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_1178_101(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 110, 105, 99, 101] => lookup_1178_102(acc),
            [109, 111, 122, 105, 108, 108, 97, 45, 105, 111, 116] => lookup_1178_103(acc),
            [105, 115, 45, 97, 45, 99, 97, 110, 100, 105, 100, 97, 116, 101] => {
                lookup_1178_104(acc)
            }
            [102, 114, 111, 109, 45, 109, 101] => lookup_1178_105(acc),
            [103, 97, 109, 101, 45, 104, 111, 115, 116] => lookup_1178_106(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_1178_107(acc),
            [101, 100, 117, 103, 105, 116] => lookup_1178_108(acc),
            [99, 101, 114, 116, 109, 103, 114] => lookup_1178_109(acc),
            [105, 115, 45, 97, 45, 108, 105, 110, 117, 120, 45, 117, 115, 101, 114] => {
                lookup_1178_110(acc)
            }
            [114, 101, 97, 100, 109, 121, 98, 108, 111, 103] => lookup_1178_111(acc),
            [109, 105, 115, 99, 111, 110, 102, 117, 115, 101, 100] => lookup_1178_112(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1179() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1181_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1181<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1181_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1182() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 188, 208, 184, 209, 128] => lookup_1183_0(acc),
            [208, 188, 209, 129, 208, 186] => lookup_1183_1(acc),
            [208, 177, 208, 184, 208, 183] => lookup_1183_2(acc),
            [209, 129, 208, 190, 209, 135, 208, 184] => lookup_1183_3(acc),
            [209, 129, 208, 191, 208, 177] => lookup_1183_4(acc),
            [208, 186, 209, 128, 209, 139, 208, 188] => lookup_1183_5(acc),
            [209, 129, 208, 176, 208, 188, 208, 176, 209, 128, 208, 176] => lookup_1183_6(acc),
            [209, 143] => lookup_1183_7(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1183_8(acc),
            [208, 186, 208, 190, 208, 188] => lookup_1183_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1184() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1185_0(acc),
            [99, 111, 109] => lookup_1185_1(acc),
            [101, 100, 117] => lookup_1185_2(acc),
            [119, 101] => lookup_1185_3(acc),
            [110, 101, 116] => lookup_1185_4(acc),
            [103, 111, 118] => lookup_1185_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1186() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1188() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1189() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 21usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_1193_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1193_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_61_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_61_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_61_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_1193_61_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1193_65_0(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1193_65_1(acc)
            }
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1193_65_2(acc),
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_1193_65_3(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_1193_65_4(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_1193_65_5(acc)
            }
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => lookup_1193_65_6(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_65_7(acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_1193_65_8(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1193_65_9(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1193_65_10(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_1193_65_11(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_65_12(acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1193_65_13(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_1193_65_14(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1193_65_15(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1193_65_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_88_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_88_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_88_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_88<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117] => lookup_1193_88_0(acc),
            [115, 103] => lookup_1193_88_1(acc),
            [97, 109, 115] => lookup_1193_88_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_103_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_103<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 118] => lookup_1193_103_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_113_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_113<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_113_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_118_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_118<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_1193_118_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_134<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_1193_134_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_142_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_142_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_142_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_142_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_142_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_142_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_142_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_142_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_142_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_142_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_142<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 105] => lookup_1193_142_1(info, labels, acc),
            [111, 99, 112] => lookup_1193_142_2(info, labels, acc),
            [111, 99, 115] => lookup_1193_142_3(info, labels, acc),
            wild => lookup_1193_142_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_143_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_143_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_143_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_143_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_143<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 109, 98, 101, 114, 115] => lookup_1193_143_0(acc),
            [110, 111, 100, 101, 98, 97, 108, 97, 110, 99, 101, 114] => {
                lookup_1193_143_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_158_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_158<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 97] => lookup_1193_158_0(acc),
            [97, 108, 112, 104, 97] => lookup_1193_158_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_163<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_1193_163_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_164_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_164_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_164<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 50] => lookup_1193_164_0(acc),
            [117, 50, 45, 108, 111, 99, 97, 108] => lookup_1193_164_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_170_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_170_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_170_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_170<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 115] => lookup_1193_170_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_196_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_196<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1193_196_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_200_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_200<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_1193_200_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_217_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_217_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_217<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [114, 97, 103, 45, 99, 108, 111, 117, 100] => lookup_1193_217_0(acc),
            [114, 97, 103, 45, 99, 108, 111, 117, 100, 45, 99, 104] => lookup_1193_217_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_230_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_230<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [120, 101, 110] => lookup_1193_230_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_3_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_3_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_3_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1193_236_3_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_3_1(info, labels, acc),
            [115, 51] => lookup_1193_236_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_4_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_4_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_4_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1193_236_4_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_4_1(info, labels, acc),
            [115, 51] => lookup_1193_236_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_5_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_5_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1193_236_5_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_5_1(info, labels, acc),
            [115, 51] => lookup_1193_236_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_7_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_7_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_7_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1193_236_7_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_7_1(info, labels, acc),
            [115, 51] => lookup_1193_236_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_8_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_8_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_8_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_8_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_236_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_14_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_14_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_14_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1193_236_14_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_14_1(info, labels, acc),
            [115, 51] => lookup_1193_236_14_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_16_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_16_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_16_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_16_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_17_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_17_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_17_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_17_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_18_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_18_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_18_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_18_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_25_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_25_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_25_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_25_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_26_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_26_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_26_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_26_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_32_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_32_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_32_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1193_236_32_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_32_1(info, labels, acc),
            [115, 51] => lookup_1193_236_32_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_35_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_236_35_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_40_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_40<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_236_40_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_41_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_41_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1193_236_41_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_236_41<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1193_236_41_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1193_236_41_1(info, labels, acc),
            [115, 51] => lookup_1193_236_41_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_236<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_236_0(acc)
            }
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1193_236_1(acc),
            [115, 51, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1193_236_2(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1193_236_3(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1193_236_4(info, labels, acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1193_236_5(info, labels, acc),
            [115, 51] => lookup_1193_236_6(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1193_236_7(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1193_236_8(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_236_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => {
                lookup_1193_236_10(acc)
            }
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1193_236_11(acc)
            }
            [99, 111, 109, 112, 117, 116, 101] => lookup_1193_236_12(info, labels, acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_1193_236_13(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1193_236_14(info, labels, acc),
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1193_236_15(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_236_16(info, labels, acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1193_236_17(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_1193_236_18(labels, acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1193_236_19(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_236_20(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1193_236_21(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1193_236_22(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1193_236_23(acc)
            }
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1193_236_24(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_236_25(info, labels, acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1193_236_26(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1193_236_27(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_236_28(acc)
            }
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_1193_236_29(acc),
            [115, 51, 45, 99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1193_236_30(acc)
            }
            [115, 51, 45, 101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1193_236_31(acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1193_236_32(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_236_33(acc)
            }
            [115, 51, 45, 101, 120, 116, 101, 114, 110, 97, 108, 45, 49] => lookup_1193_236_34(acc),
            [101, 108, 98] => lookup_1193_236_35(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1193_236_36(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1193_236_37(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1193_236_38(acc)
            }
            [115, 51, 45, 117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1193_236_39(acc),
            [99, 111, 109, 112, 117, 116, 101, 45, 49] => lookup_1193_236_40(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1193_236_41(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_241_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_241<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_1193_241_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_259_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_259_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_259_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_259<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [114, 121, 100] => lookup_1193_259_0(acc),
            [106, 101, 100] => lookup_1193_259_1(acc),
            [108, 111, 110] => lookup_1193_259_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_277_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_277<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_1193_277_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_301_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_301_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_301<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100] => lookup_1193_301_0(acc),
            [106, 99, 108, 111, 117, 100, 45, 118, 101, 114, 45, 106, 112, 99] => {
                lookup_1193_301_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_334_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_334<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_1193_334_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_336<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 45, 52] => lookup_1193_336_0(acc),
            [117, 115, 45, 50] => lookup_1193_336_1(acc),
            [117, 115, 45, 51] => lookup_1193_336_2(acc),
            [101, 117, 45, 51] => lookup_1193_336_3(acc),
            [117, 115, 45, 49] => lookup_1193_336_4(acc),
            [101, 117, 45, 52] => lookup_1193_336_5(acc),
            [101, 117, 45, 49] => lookup_1193_336_6(acc),
            [101, 117, 45, 50] => lookup_1193_336_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_341_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_341_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1193_341_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_341<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_1193_341_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_344_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_344<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_1193_344_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_354<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97, 114, 97, 99, 97, 108] => lookup_1193_354_0(acc),
            [118, 115] => lookup_1193_354_1(acc),
            [115, 112, 104, 105, 110, 120] => lookup_1193_354_2(acc),
            [111, 110, 122, 97] => lookup_1193_354_3(acc),
            [111, 99, 101, 108, 111, 116] => lookup_1193_354_4(acc),
            [108, 121, 110, 120] => lookup_1193_354_5(acc),
            [120] => lookup_1193_354_6(acc),
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_1193_354_7(acc),
            [111, 110, 99, 105, 108, 108, 97] => lookup_1193_354_8(acc),
            [102, 101, 110, 116, 105, 103, 101, 114] => lookup_1193_354_9(acc),
            [121, 97, 108, 105] => lookup_1193_354_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109, 45, 119, 121] => lookup_1193_0(acc),
            [48, 101, 109, 109] => lookup_1193_1(info, labels, acc),
            [119, 105, 116, 104, 121, 111, 117, 116, 117, 98, 101] => lookup_1193_2(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_1193_3(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 97, 108] => lookup_1193_4(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_1193_5(acc),
            [113, 117, 105, 112, 101, 108, 101, 109, 101, 110, 116, 115] => {
                lookup_1193_6(info, labels, acc)
            }
            [101, 115, 116, 45, 108, 101, 45, 112, 97, 116, 114, 111, 110] => lookup_1193_7(acc),
            [115, 99, 114, 121, 115, 101, 99] => lookup_1193_8(acc),
            [119, 112, 109, 117, 99, 100, 110] => lookup_1193_9(acc),
            [102, 114, 111, 109, 45, 109, 115] => lookup_1193_10(acc),
            [103, 101, 110, 116, 108, 101, 110, 116, 97, 112, 105, 115] => lookup_1193_11(acc),
            [115, 105, 109, 112, 108, 101, 45, 117, 114, 108] => lookup_1193_12(acc),
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1193_13(info, labels, acc)
            }
            [106, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_1193_14(acc),
            [48, 48, 49, 119, 119, 119] => lookup_1193_15(acc),
            [109, 121, 118, 110, 99] => lookup_1193_16(acc),
            [102, 114, 111, 109, 45, 100, 101] => lookup_1193_17(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_1193_18(acc),
            [108, 109, 112, 109] => lookup_1193_19(info, labels, acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116, 100, 97, 116, 97] => lookup_1193_20(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 108, 101, 100] => {
                lookup_1193_21(acc)
            }
            [119, 97, 102, 102, 108, 101, 99, 101, 108, 108] => lookup_1193_22(acc),
            [100, 121, 110, 100, 110, 115, 45, 115, 101, 114, 118, 101, 114] => lookup_1193_23(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 105, 107, 105] => lookup_1193_24(acc),
            [100, 111, 112, 97, 97, 115] => lookup_1193_25(acc),
            [100, 105, 116, 99, 104, 121, 111, 117, 114, 105, 112] => lookup_1193_26(acc),
            [109, 121, 115, 104, 111, 112, 98, 108, 111, 99, 107, 115] => lookup_1193_27(acc),
            [98, 117, 105, 108, 116, 119, 105, 116, 104, 100, 97, 114, 107] => lookup_1193_28(acc),
            [102, 114, 111, 109, 45, 97, 108] => lookup_1193_29(acc),
            [102, 114, 111, 109, 45, 110, 99] => lookup_1193_30(acc),
            [109, 121, 114, 97, 118, 101, 110, 100, 98] => lookup_1193_31(acc),
            [103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1193_32(acc)
            }
            [102, 114, 111, 109, 45, 118, 97] => lookup_1193_33(acc),
            [105, 115, 45, 97, 45, 110, 97, 115, 99, 97, 114, 102, 97, 110] => lookup_1193_34(acc),
            [115, 107, 121, 103, 101, 97, 114, 97, 112, 112] => lookup_1193_35(acc),
            [105, 115, 115, 109, 97, 114, 116, 101, 114, 116, 104, 97, 110, 121, 111, 117] => {
                lookup_1193_36(acc)
            }
            [103, 114] => lookup_1193_37(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 115, 105, 111, 110] => {
                lookup_1193_38(acc)
            }
            [108, 105, 107, 101, 115, 99, 97, 110, 100, 121] => lookup_1193_39(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_1193_40(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 105, 115, 111, 110] => {
                lookup_1193_41(acc)
            }
            [102, 114, 111, 109, 45, 105, 100] => lookup_1193_42(acc),
            [105, 115, 45, 97, 45, 115, 116, 117, 100, 101, 110, 116] => lookup_1193_43(acc),
            [115, 112, 97, 99, 101, 45, 116, 111, 45, 114, 101, 110, 116] => lookup_1193_44(acc),
            [100, 121, 110, 100, 110, 115, 45, 104, 111, 109, 101] => lookup_1193_45(acc),
            [97, 114] => lookup_1193_46(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_1193_47(acc),
            [100, 100, 110, 115, 102, 114, 101, 101] => lookup_1193_48(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 101, 98] => lookup_1193_49(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120] => lookup_1193_50(acc),
            [100, 121, 110, 100, 110, 115, 45, 109, 97, 105, 108] => lookup_1193_51(acc),
            [100, 100, 110, 115, 103, 101, 101, 107] => lookup_1193_52(acc),
            [102, 114, 111, 109, 45, 99, 116] => lookup_1193_53(acc),
            [109, 105, 110, 105, 115, 101, 114, 118, 101, 114] => lookup_1193_54(acc),
            [114, 101, 109, 111, 116, 101, 119, 100] => lookup_1193_55(acc),
            [111, 110, 45, 97, 112, 116, 105, 98, 108, 101] => lookup_1193_56(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 111, 114] => lookup_1193_57(acc),
            [104, 101, 114, 111, 107, 117, 97, 112, 112] => lookup_1193_58(acc),
            [112, 117, 98, 108, 105, 115, 104, 112, 114, 111, 120, 121] => lookup_1193_59(acc),
            [52, 117] => lookup_1193_60(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => {
                lookup_1193_61(labels, acc)
            }
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_1193_62(acc),
            [99, 105, 115, 99, 111, 102, 114, 101, 97, 107] => lookup_1193_63(acc),
            [103, 101, 101, 107, 103, 97, 108, 97, 120, 121] => lookup_1193_64(acc),
            [101, 108, 97, 115, 116, 105, 99, 98, 101, 97, 110, 115, 116, 97, 108, 107] => {
                lookup_1193_65(labels, acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 104, 111, 109, 101] => {
                lookup_1193_66(acc)
            }
            [99, 101, 99, 104, 105, 114, 101] => lookup_1193_67(acc),
            [107, 111, 122, 111, 119] => lookup_1193_68(acc),
            [111, 111, 103, 117, 121] => lookup_1193_69(acc),
            [102, 114, 111, 109, 45, 107, 121] => lookup_1193_70(acc),
            [105, 115, 45, 97, 110, 45, 97, 114, 116, 105, 115, 116] => lookup_1193_71(acc),
            [115, 116, 117, 102, 102, 116, 111, 114, 101, 97, 100] => lookup_1193_72(acc),
            [97, 119, 115, 103, 108, 111, 98, 97, 108, 97, 99, 99, 101, 108, 101, 114, 97, 116, 111, 114] => {
                lookup_1193_73(acc)
            }
            [102, 114, 111, 109, 45, 119, 105] => lookup_1193_74(acc),
            [100, 121, 110, 100, 110, 115, 45, 112, 105, 99, 115] => lookup_1193_75(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_1193_76(acc),
            [103, 111, 116, 100, 110, 115] => lookup_1193_77(acc),
            [100, 97, 109, 110, 115, 101, 114, 118, 101, 114] => lookup_1193_78(acc),
            [101, 115, 116, 45, 109, 111, 110, 45, 98, 108, 111, 103, 117, 101, 117, 114] => {
                lookup_1193_79(acc)
            }
            [109, 121, 97, 99, 116, 105, 118, 101, 100, 105, 114, 101, 99, 116, 111, 114, 121] => {
                lookup_1193_80(acc)
            }
            [115, 104, 111, 112, 105, 116, 115, 105, 116, 101] => lookup_1193_81(acc),
            [102, 114, 111, 109, 45, 117, 116] => lookup_1193_82(acc),
            [102, 114, 101, 101, 109, 121, 105, 112] => lookup_1193_83(acc),
            [108, 112, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_1193_84(acc),
            [116, 114, 121, 45, 115, 110, 111, 119, 112, 108, 111, 119] => lookup_1193_85(acc),
            [107, 114] => lookup_1193_86(acc),
            [111, 110, 116, 104, 101, 119, 105, 102, 105] => lookup_1193_87(acc),
            [99, 108, 111, 117, 100, 115, 119, 105, 116, 99, 104, 101, 115] => {
                lookup_1193_88(info, labels, acc)
            }
            [102, 114, 111, 109, 45, 110, 101] => lookup_1193_89(acc),
            [108, 105, 107, 101, 115, 45, 112, 105, 101] => lookup_1193_90(acc),
            [103, 108, 101, 101, 122, 101] => lookup_1193_91(acc),
            [100, 121, 110, 110, 115] => lookup_1193_92(acc),
            [102, 105, 114, 101, 98, 97, 115, 101, 97, 112, 112] => lookup_1193_93(acc),
            [102, 114, 111, 109, 45, 100, 99] => lookup_1193_94(acc),
            [111, 110, 114, 101, 110, 100, 101, 114] => lookup_1193_95(acc),
            [103, 98] => lookup_1193_96(acc),
            [102, 114, 111, 109, 45, 110, 109] => lookup_1193_97(acc),
            [102, 114, 111, 109, 45, 109, 97] => lookup_1193_98(acc),
            [105, 115, 45, 97, 45, 114, 111, 99, 107, 115, 116, 97, 114] => lookup_1193_99(acc),
            [108, 111, 115, 101, 121, 111, 117, 114, 105, 112] => lookup_1193_100(acc),
            [115, 101, 114, 118, 101, 101, 120, 99, 104, 97, 110, 103, 101] => lookup_1193_101(acc),
            [105, 115, 45, 97, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_1193_102(acc)
            }
            [101, 108, 97, 115, 116, 121, 99, 111] => lookup_1193_103(labels, acc),
            [105, 115, 45, 97, 45, 100, 101, 109, 111, 99, 114, 97, 116] => lookup_1193_104(acc),
            [111, 117, 116, 115, 121, 115, 116, 101, 109, 115, 99, 108, 111, 117, 100] => {
                lookup_1193_105(acc)
            }
            [100, 100, 110, 115, 107, 105, 110, 103] => lookup_1193_106(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_1193_107(acc),
            [105, 115, 45, 97, 45, 100, 101, 115, 105, 103, 110, 101, 114] => lookup_1193_108(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_1193_109(acc),
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_1193_110(acc),
            [102, 114, 111, 109, 45, 111, 114] => lookup_1193_111(acc),
            [97, 119, 115, 109, 112, 112, 108] => lookup_1193_112(acc),
            [108, 105, 110, 111, 100, 101, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_1193_113(info, labels, acc)
            }
            [105, 97, 109, 97, 108, 108, 97, 109, 97] => lookup_1193_114(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_1193_115(acc)
            }
            [121, 111, 108, 97, 115, 105, 116, 101] => lookup_1193_116(acc),
            [117, 107] => lookup_1193_117(acc),
            [109, 101, 116, 101, 111, 114, 97, 112, 112] => lookup_1193_118(labels, acc),
            [107, 105, 108, 97, 116, 105, 114, 111, 110] => lookup_1193_119(acc),
            [108, 111, 103, 111, 105, 112] => lookup_1193_120(acc),
            [111, 119, 110, 112, 114, 111, 118, 105, 100, 101, 114] => lookup_1193_121(acc),
            [115, 101, 114, 118, 101, 112, 50, 112] => lookup_1193_122(acc),
            [109, 121, 100, 114, 111, 98, 111] => lookup_1193_123(acc),
            [105, 115, 45, 97, 45, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101] => {
                lookup_1193_124(acc)
            }
            [105, 115, 45, 97, 45, 103, 117, 114, 117] => lookup_1193_125(acc),
            [119, 112, 104, 111, 115, 116, 101, 100, 109, 97, 105, 108] => lookup_1193_126(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_1193_127(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_1193_128(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_1193_129(acc),
            [100, 97, 116, 116, 111, 114, 101, 108, 97, 121] => lookup_1193_130(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_1193_131(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_1193_132(acc),
            [105, 115, 45, 97, 45, 102, 105, 110, 97, 110, 99, 105, 97, 108, 97, 100, 118, 105, 115, 111, 114] => {
                lookup_1193_133(acc)
            }
            [102, 98, 115, 98, 120] => lookup_1193_134(info, labels, acc),
            [105, 115, 45, 97, 45, 115, 111, 99, 105, 97, 108, 105, 115, 116] => {
                lookup_1193_135(acc)
            }
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 112, 99] => {
                lookup_1193_136(acc)
            }
            [97, 112, 112, 115, 112, 97, 99, 101, 104, 111, 115, 116, 101, 100] => {
                lookup_1193_137(acc)
            }
            [103, 101, 110, 116, 97, 112, 112, 115] => lookup_1193_138(acc),
            [105, 110, 100, 111, 119, 97, 112, 98, 108, 111, 103] => lookup_1193_139(acc),
            [109, 101, 120] => lookup_1193_140(acc),
            [115, 101, 114, 118, 101, 99, 111, 117, 110, 116, 101, 114, 115, 116, 114, 105, 107, 101] => {
                lookup_1193_141(acc)
            }
            [99, 117, 115, 116, 111, 109, 101, 114, 45, 111, 99, 105] => {
                lookup_1193_142(info, labels, acc)
            }
            [108, 105, 110, 111, 100, 101] => lookup_1193_143(info, labels, acc),
            [102, 114, 111, 109, 45, 107, 115] => lookup_1193_144(acc),
            [97, 108, 112, 104, 97, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_1193_145(acc)
            }
            [105, 100, 110, 98, 108, 111, 103, 103, 101, 114] => lookup_1193_146(acc),
            [112, 111, 105, 110, 116, 50, 116, 104, 105, 115] => lookup_1193_147(acc),
            [103, 101, 116, 109, 121, 105, 112] => lookup_1193_148(acc),
            [105, 115, 45, 117, 98, 101, 114, 108, 101, 101, 116] => lookup_1193_149(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 97, 112, 112] => {
                lookup_1193_150(acc)
            }
            [98, 108, 111, 120, 99, 109, 115] => lookup_1193_151(acc),
            [100, 101, 118, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_1193_152(acc)
            }
            [105, 115, 45, 97, 45, 100, 111, 99, 116, 111, 114] => lookup_1193_153(acc),
            [102, 114, 111, 109, 45, 105, 108] => lookup_1193_154(acc),
            [105, 115, 45, 115, 108, 105, 99, 107] => lookup_1193_155(acc),
            [105, 115, 45, 97, 45, 99, 97, 116, 101, 114, 101, 114] => lookup_1193_156(acc),
            [116, 114, 121, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_1193_157(acc),
            [98, 111, 117, 110, 116, 121, 45, 102, 117, 108, 108] => lookup_1193_158(labels, acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 117] => lookup_1193_159(acc),
            [109, 121, 116, 117, 108, 101, 97, 112] => lookup_1193_160(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 97, 110, 105, 109, 101] => lookup_1193_161(acc),
            [99, 108, 105, 99, 107, 101, 116, 99, 108, 111, 117, 100] => lookup_1193_162(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1193_163(info, labels, acc),
            [120, 110, 98, 97, 121] => lookup_1193_164(labels, acc),
            [102, 114, 111, 109, 45, 104, 105] => lookup_1193_165(acc),
            [115, 105, 110, 97, 97, 112, 112] => lookup_1193_166(acc),
            [102, 114, 111, 109, 45, 97, 107] => lookup_1193_167(acc),
            [100, 100, 110, 115, 108, 105, 118, 101] => lookup_1193_168(acc),
            [119, 111, 108, 116, 108, 97, 98, 45, 100, 101, 109, 111] => lookup_1193_169(acc),
            [106, 111, 121, 101, 110, 116] => lookup_1193_170(info, labels, acc),
            [119, 111, 114, 107, 105, 115, 98, 111, 114, 105, 110, 103] => lookup_1193_171(acc),
            [102, 114, 111, 109, 45, 102, 108] => lookup_1193_172(acc),
            [102, 114, 111, 109, 45, 105, 97] => lookup_1193_173(acc),
            [100, 121, 110, 100, 110, 115, 45, 98, 108, 111, 103] => lookup_1193_174(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_1193_175(acc),
            [109, 121, 115, 104, 111, 112, 105, 102, 121] => lookup_1193_176(acc),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110, 45, 99, 108, 111, 117, 100] => {
                lookup_1193_177(acc)
            }
            [115, 101, 114, 118, 101, 112, 105, 99, 115] => lookup_1193_178(acc),
            [100, 114, 101, 97, 109, 104, 111, 115, 116, 101, 114, 115] => lookup_1193_179(acc),
            [102, 114, 111, 109, 45, 103, 97] => lookup_1193_180(acc),
            [111, 112, 101, 114, 97, 117, 110, 105, 116, 101] => lookup_1193_181(acc),
            [115, 116, 97, 99, 107, 104, 101, 114, 111, 45, 110, 101, 116, 119, 111, 114, 107] => {
                lookup_1193_182(acc)
            }
            [105, 115, 45, 97, 45, 116, 101, 99, 104, 105, 101] => lookup_1193_183(acc),
            [102, 114, 111, 109, 45, 112, 114] => lookup_1193_184(acc),
            [105, 115, 45, 97, 45, 98, 108, 111, 103, 103, 101, 114] => lookup_1193_185(acc),
            [102, 114, 111, 109, 45, 114, 105] => lookup_1193_186(acc),
            [105, 115, 45, 119, 105, 116, 104, 45, 116, 104, 101, 98, 97, 110, 100] => {
                lookup_1193_187(acc)
            }
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_1193_188(acc),
            [105, 115, 45, 97, 45, 104, 97, 114, 100, 45, 119, 111, 114, 107, 101, 114] => {
                lookup_1193_189(acc)
            }
            [102, 114, 111, 109, 45, 109, 116] => lookup_1193_190(acc),
            [113, 98, 117, 115, 101, 114] => lookup_1193_191(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_1193_192(acc),
            [116, 104, 101, 119, 111, 114, 107, 112, 99] => lookup_1193_193(acc),
            [105, 115, 45, 97, 45, 109, 117, 115, 105, 99, 105, 97, 110] => lookup_1193_194(acc),
            [103, 111, 111, 103, 108, 101, 99, 111, 100, 101] => lookup_1193_195(acc),
            [114, 101, 110, 100, 101, 114] => lookup_1193_196(info, labels, acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_1193_197(acc),
            [115, 97] => lookup_1193_198(acc),
            [102, 114, 97, 109, 101, 114, 99, 97, 110, 118, 97, 115] => lookup_1193_199(acc),
            [119, 105, 97, 114, 100, 119, 101, 98] => lookup_1193_200(info, labels, acc),
            [110, 102, 115, 104, 111, 115, 116] => lookup_1193_201(acc),
            [105, 115, 45, 97, 45, 98, 117, 108, 108, 115, 45, 102, 97, 110] => {
                lookup_1193_202(acc)
            }
            [98, 114] => lookup_1193_203(acc),
            [102, 114, 111, 109, 45, 119, 118] => lookup_1193_204(acc),
            [105, 115, 45, 97, 45, 112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 101, 114] => {
                lookup_1193_205(acc)
            }
            [106, 112, 110] => lookup_1193_206(acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 108, 101, 115, 115] => {
                lookup_1193_207(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 119, 111, 114, 107] => lookup_1193_208(acc),
            [102, 114, 111, 109, 45, 109, 105] => lookup_1193_209(acc),
            [99, 111, 100, 101, 115, 112, 111, 116] => lookup_1193_210(acc),
            [102, 114, 111, 109, 45, 109, 110] => lookup_1193_211(acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 119, 111, 114, 107] => {
                lookup_1193_212(acc)
            }
            [102, 114, 111, 109, 45, 115, 100] => lookup_1193_213(acc),
            [117, 115] => lookup_1193_214(acc),
            [104, 101, 97, 108, 116, 104, 45, 99, 97, 114, 101, 114, 101, 102, 111, 114, 109] => {
                lookup_1193_215(acc)
            }
            [102, 114, 111, 109, 45, 109, 111] => lookup_1193_216(acc),
            [104, 111, 115, 116, 101, 117, 114] => lookup_1193_217(info, labels, acc),
            [112, 108, 101, 115, 107, 110, 115] => lookup_1193_218(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 103, 105, 110, 101, 101, 114] => {
                lookup_1193_219(acc)
            }
            [110, 111] => lookup_1193_220(acc),
            [116, 101, 109, 112, 45, 100, 110, 115] => lookup_1193_221(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 116, 111, 111, 110, 115] => {
                lookup_1193_222(acc)
            }
            [105, 115, 45, 97, 45, 108, 97, 110, 100, 115, 99, 97, 112, 101, 114] => {
                lookup_1193_223(acc)
            }
            [105, 115, 45, 97, 45, 112, 108, 97, 121, 101, 114] => lookup_1193_224(acc),
            [99, 110] => lookup_1193_225(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_1193_226(acc),
            [102, 114, 111, 109, 45, 115, 99] => lookup_1193_227(acc),
            [116, 101, 97, 99, 104, 101, 115, 45, 121, 111, 103, 97] => lookup_1193_228(acc),
            [116, 111, 119, 110, 110, 101, 119, 115, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_1193_229(acc)
            }
            [112, 114, 103, 109, 114] => lookup_1193_230(info, labels, acc),
            [100, 114, 97, 121, 100, 100, 110, 115] => lookup_1193_231(acc),
            [102, 114, 111, 109, 45, 109, 100] => lookup_1193_232(acc),
            [115, 101, 108, 102, 105, 112] => lookup_1193_233(acc),
            [112, 105, 120, 111, 108, 105, 110, 111] => lookup_1193_234(acc),
            [49, 107, 97, 112, 112] => lookup_1193_235(acc),
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_1193_236(info, labels, acc),
            [97, 102, 114, 105, 99, 97] => lookup_1193_237(acc),
            [102, 114, 111, 109, 45, 111, 107] => lookup_1193_238(acc),
            [105, 115, 45, 108, 101, 101, 116] => lookup_1193_239(acc),
            [117, 121] => lookup_1193_240(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_1193_241(info, labels, acc)
            }
            [104, 117] => lookup_1193_242(acc),
            [115, 97, 118, 101, 115, 45, 116, 104, 101, 45, 119, 104, 97, 108, 101, 115] => {
                lookup_1193_243(acc)
            }
            [115, 101, 114, 118, 101, 104, 117, 109, 111, 117, 114] => lookup_1193_244(acc),
            [112, 103, 102, 111, 103] => lookup_1193_245(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_1193_246(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1193_247(acc)
            }
            [103, 111, 116, 112, 97, 110, 116, 104, 101, 111, 110] => lookup_1193_248(acc),
            [113, 97, 50] => lookup_1193_249(acc),
            [122, 97] => lookup_1193_250(acc),
            [105, 115, 45, 97, 45, 104, 117, 110, 116, 101, 114] => lookup_1193_251(acc),
            [109, 121, 100, 111, 98, 105, 115, 115] => lookup_1193_252(acc),
            [102, 114, 111, 109, 45, 110, 100] => lookup_1193_253(acc),
            [105, 115, 45, 110, 111, 116, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => {
                lookup_1193_254(acc)
            }
            [105, 115, 45, 97, 45, 116, 104, 101, 114, 97, 112, 105, 115, 116] => {
                lookup_1193_255(acc)
            }
            [100, 110, 115, 105, 115, 107, 105, 110, 107, 121] => lookup_1193_256(acc),
            [112, 97, 103, 101, 102, 114, 111, 110, 116, 97, 112, 112] => lookup_1193_257(acc),
            [100, 121, 110, 100, 110, 115, 45, 105, 112] => lookup_1193_258(acc),
            [119, 97, 102, 97, 105, 99, 108, 111, 117, 100] => lookup_1193_259(info, labels, acc),
            [105, 115, 45, 97, 110, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_1193_260(acc)
            }
            [110, 101, 116, 45, 102, 114, 101, 97, 107, 115] => lookup_1193_261(acc),
            [111, 114, 115, 105, 116, 101, 115] => lookup_1193_262(acc),
            [98, 97, 114, 115, 121, 99, 101, 110, 116, 101, 114] => lookup_1193_263(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1193_264(acc),
            [115, 101, 114, 118, 101, 98, 101, 101, 114] => lookup_1193_265(acc),
            [100, 121, 110, 100, 110, 115, 45, 102, 114, 101, 101] => lookup_1193_266(acc),
            [110, 101, 97, 116, 45, 117, 114, 108] => lookup_1193_267(acc),
            [119, 105, 116, 104, 103, 111, 111, 103, 108, 101] => lookup_1193_268(acc),
            [51, 117, 116, 105, 108, 105, 116, 105, 101, 115] => lookup_1193_269(acc),
            [112, 97, 103, 101, 120, 108] => lookup_1193_270(acc),
            [102, 114, 111, 109, 45, 118, 116] => lookup_1193_271(acc),
            [113, 117, 97, 108, 105, 102, 105, 111, 97, 112, 112] => lookup_1193_272(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => {
                lookup_1193_273(acc)
            }
            [105, 115, 45, 97, 45, 116, 101, 97, 99, 104, 101, 114] => lookup_1193_274(acc),
            [111, 110, 102, 97, 98, 114, 105, 99, 97] => lookup_1193_275(acc),
            [105, 115, 97, 45, 104, 111, 99, 107, 101, 121, 110, 117, 116] => lookup_1193_276(acc),
            [115, 116, 100, 108, 105, 98] => lookup_1193_277(info, labels, acc),
            [102, 114, 111, 109, 45, 119, 97] => lookup_1193_278(acc),
            [100, 121, 110, 45, 111, 45, 115, 97, 117, 114] => lookup_1193_279(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_1193_280(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120, 99, 100, 110] => lookup_1193_281(acc),
            [105, 115, 45, 97, 45, 108, 97, 119, 121, 101, 114] => lookup_1193_282(acc),
            [105, 115, 45, 97, 45, 108, 108, 97, 109, 97] => lookup_1193_283(acc),
            [114, 104, 99, 108, 111, 117, 100] => lookup_1193_284(acc),
            [105, 115, 45, 97, 45, 99, 117, 98, 105, 99, 108, 101, 45, 115, 108, 97, 118, 101] => {
                lookup_1193_285(acc)
            }
            [105, 115, 45, 97, 45, 103, 114, 101, 101, 110] => lookup_1193_286(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_1193_287(acc),
            [104, 105, 100, 111, 114, 97] => lookup_1193_288(acc),
            [104, 111, 115, 116, 101, 100, 112, 105] => lookup_1193_289(acc),
            [115, 101, 99, 117, 114, 105, 116, 121, 116, 97, 99, 116, 105, 99, 115] => {
                lookup_1193_290(acc)
            }
            [102, 114, 111, 109, 45, 110, 106] => lookup_1193_291(acc),
            [103, 111, 111, 103, 108, 101, 97, 112, 105, 115] => lookup_1193_292(acc),
            [97, 112, 112, 108, 105, 110, 122, 105] => lookup_1193_293(acc),
            [118, 105, 112, 115, 105, 110, 97, 97, 112, 112] => lookup_1193_294(acc),
            [105, 115, 45, 97, 45, 114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => {
                lookup_1193_295(acc)
            }
            [102, 114, 111, 109, 45, 110, 104] => lookup_1193_296(acc),
            [100, 97, 116, 116, 111, 119, 101, 98] => lookup_1193_297(acc),
            [100, 121, 110, 100, 110, 115, 45, 111, 102, 102, 105, 99, 101] => lookup_1193_298(acc),
            [105, 115, 45, 97, 45, 110, 117, 114, 115, 101] => lookup_1193_299(acc),
            [105, 115, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => lookup_1193_300(acc),
            [105, 107, 45, 115, 101, 114, 118, 101, 114] => lookup_1193_301(info, labels, acc),
            [115, 101, 114, 118, 101, 113, 117, 97, 107, 101] => lookup_1193_302(acc),
            [105, 115, 45, 97, 45, 99, 112, 97] => lookup_1193_303(acc),
            [102, 97, 115, 116, 108, 121, 45, 116, 101, 114, 114, 97, 114, 105, 117, 109] => {
                lookup_1193_304(acc)
            }
            [115, 101, 114, 118, 101, 104, 116, 116, 112] => lookup_1193_305(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 116, 101, 114, 116, 97, 105, 110, 101, 114] => {
                lookup_1193_306(acc)
            }
            [115, 109, 117, 115, 104, 99, 100, 110] => lookup_1193_307(acc),
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_1193_308(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 116, 97, 114, 105, 97, 110] => {
                lookup_1193_309(acc)
            }
            [98, 101, 116, 97, 105, 110, 97, 98, 111, 120] => lookup_1193_310(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 103, 97, 109, 101, 115] => lookup_1193_311(acc),
            [102, 114, 111, 109, 45, 99, 97] => lookup_1193_312(acc),
            [109, 121, 105, 112, 104, 111, 115, 116] => lookup_1193_313(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 114, 101, 115, 115] => lookup_1193_314(acc),
            [119, 112, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_1193_315(acc),
            [117, 110, 117, 115, 117, 97, 108, 112, 101, 114, 115, 111, 110] => {
                lookup_1193_316(acc)
            }
            [115, 101, 114, 118, 101, 109, 112, 51] => lookup_1193_317(acc),
            [99, 111] => lookup_1193_318(acc),
            [102, 114, 111, 109, 45, 116, 120] => lookup_1193_319(acc),
            [107, 97, 115, 115, 101, 114, 118, 101, 114] => lookup_1193_320(acc),
            [102, 114, 111, 109, 45, 110, 118] => lookup_1193_321(acc),
            [104, 101, 114, 111, 107, 117, 115, 115, 108] => lookup_1193_322(acc),
            [109, 121, 97, 115, 117, 115, 116, 111, 114] => lookup_1193_323(acc),
            [104, 107] => lookup_1193_324(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 115] => lookup_1193_325(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_1193_326(acc),
            [112, 97, 103, 101, 115, 112, 101, 101, 100, 109, 111, 98, 105, 108, 105, 122, 101, 114] => {
                lookup_1193_327(acc)
            }
            [98, 97, 108, 101, 110, 97, 45, 100, 101, 118, 105, 99, 101, 115] => {
                lookup_1193_328(acc)
            }
            [115, 101, 114, 118, 101, 105, 114, 99] => lookup_1193_329(acc),
            [105, 115, 45, 97, 45, 98, 111, 111, 107, 107, 101, 101, 112, 101, 114] => {
                lookup_1193_330(acc)
            }
            [105, 115, 45, 103, 111, 110, 101] => lookup_1193_331(acc),
            [100, 101] => lookup_1193_332(acc),
            [113, 99] => lookup_1193_333(acc),
            [104, 111, 115, 116, 101, 100, 45, 98, 121, 45, 112, 114, 101, 118, 105, 100, 101, 114] => {
                lookup_1193_334(info, labels, acc)
            }
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_1193_335(acc),
            [101, 118, 101, 110, 110, 111, 100, 101] => lookup_1193_336(info, labels, acc),
            [102, 114, 111, 109, 45, 111, 104] => lookup_1193_337(acc),
            [101, 117] => lookup_1193_338(acc),
            [105, 115, 45, 97, 45, 112, 101, 114, 115, 111, 110, 97, 108, 116, 114, 97, 105, 110, 101, 114] => {
                lookup_1193_339(acc)
            }
            [119, 114, 105, 116, 101, 115, 116, 104, 105, 115, 98, 108, 111, 103] => {
                lookup_1193_340(acc)
            }
            [97, 112, 112, 115, 112, 111, 116] => lookup_1193_341(labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1193_342(acc),
            [97, 112, 112, 99, 104, 105, 122, 105] => lookup_1193_343(acc),
            [119, 112, 101, 110, 103, 105, 110, 101, 112, 111, 119, 101, 114, 101, 100] => {
                lookup_1193_344(labels, acc)
            }
            [113, 117, 105, 99, 107, 115, 121, 116, 101, 115] => lookup_1193_345(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_1193_346(acc)
            }
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 109, 97, 99] => {
                lookup_1193_347(acc)
            }
            [102, 97, 115, 116, 118, 112, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_1193_348(acc)
            }
            [102, 114, 111, 109, 45, 105, 110] => lookup_1193_349(acc),
            [103, 105, 105, 122, 101] => lookup_1193_350(acc),
            [102, 114, 111, 109, 45, 97, 114] => lookup_1193_351(acc),
            [114, 117] => lookup_1193_352(acc),
            [105, 115, 45, 97, 45, 112, 97, 105, 110, 116, 101, 114] => lookup_1193_353(acc),
            [109, 121, 116, 104, 105, 99, 45, 98, 101, 97, 115, 116, 115] => {
                lookup_1193_354(info, labels, acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 114, 101, 109, 111, 116, 101] => {
                lookup_1193_355(acc)
            }
            [102, 114, 111, 109, 45, 116, 110] => lookup_1193_356(acc),
            [98, 108, 111, 103, 115, 121, 116, 101] => lookup_1193_357(acc),
            [115, 101, 114, 118, 101, 115, 97, 114, 99, 97, 115, 109] => lookup_1193_358(acc),
            [115, 101, 114, 118, 101, 104, 97, 108, 102, 108, 105, 102, 101] => {
                lookup_1193_359(acc)
            }
            [102, 114, 111, 109, 45, 112, 97] => lookup_1193_360(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1194() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1200() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1201() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1202_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1202<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 108, 111, 110] => lookup_1202_0(acc),
            [99, 111] => lookup_1202_1(acc),
            [97, 114, 118, 111] => lookup_1202_2(acc),
            [97, 122, 105, 109, 117, 116, 104] => lookup_1202_3(acc),
            [97, 108, 99, 101, 115] => lookup_1202_4(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1203() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1208() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1211() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1212() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1213() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1215<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_1215_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1216() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1217() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1218() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1222() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1227_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1227<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 122] => lookup_1227_0(acc),
            [97, 117, 115] => lookup_1227_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1228() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1230() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1231() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1232_0(acc),
            [101, 100, 117] => lookup_1232_1(acc),
            [99, 111, 109] => lookup_1232_2(acc),
            [111, 114, 103] => lookup_1232_3(acc),
            [103, 111, 118] => lookup_1232_4(acc),
            [110, 101, 116] => lookup_1232_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1233() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1236_0(acc),
            [101, 100, 117] => lookup_1236_1(acc),
            [110, 101, 116] => lookup_1236_2(acc),
            [103, 111, 118] => lookup_1236_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1237() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1238() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1239_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1239<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 105, 116, 104] => lookup_1239_0(acc),
            [102, 114, 111, 109] => lookup_1239_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1240_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 101, 114, 107, 97, 115, 115, 121] => lookup_1240_0(acc),
            [99, 118] => lookup_1240_1(acc),
            [99, 104, 101, 114, 110, 105, 104, 105, 118] => lookup_1240_2(acc),
            [108, 117, 103, 97, 110, 115, 107] => lookup_1240_3(acc),
            [112, 111, 108, 116, 97, 118, 97] => lookup_1240_4(acc),
            [114, 105, 118, 110, 101] => lookup_1240_5(acc),
            [108, 116, 100] => lookup_1240_6(acc),
            [107, 104, 109, 101, 108, 110, 105, 116, 115, 107, 105, 121] => lookup_1240_7(acc),
            [117, 122, 104, 103, 111, 114, 111, 100] => lookup_1240_8(acc),
            [122, 104, 121, 116, 111, 109, 121, 114] => lookup_1240_9(acc),
            [115, 101, 118, 97, 115, 116, 111, 112, 111, 108] => lookup_1240_10(acc),
            [105, 110] => lookup_1240_11(acc),
            [99, 104, 101, 114, 110, 105, 118, 116, 115, 105] => lookup_1240_12(acc),
            [99, 114] => lookup_1240_13(acc),
            [107, 104, 97, 114, 107, 111, 118] => lookup_1240_14(acc),
            [108, 118, 105, 118] => lookup_1240_15(acc),
            [118, 110] => lookup_1240_16(acc),
            [107, 121, 105, 118] => lookup_1240_17(acc),
            [111, 114, 103] => lookup_1240_18(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 101] => lookup_1240_19(acc),
            [99, 99] => lookup_1240_20(acc),
            [99, 120] => lookup_1240_21(acc),
            [114, 111, 118, 110, 111] => lookup_1240_22(acc),
            [100, 110, 105, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1240_23(acc)
            }
            [101, 100, 117] => lookup_1240_24(acc),
            [99, 104, 101, 114, 110, 111, 118, 116, 115, 121] => lookup_1240_25(acc),
            [107, 104, 97, 114, 107, 105, 118] => lookup_1240_26(acc),
            [100, 110, 101, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1240_27(acc)
            }
            [109, 107] => lookup_1240_28(acc),
            [99, 114, 105, 109, 101, 97] => lookup_1240_29(acc),
            [109, 121, 107, 111, 108, 97, 105, 118] => lookup_1240_30(acc),
            [107, 105, 114, 111, 118, 111, 103, 114, 97, 100] => lookup_1240_31(acc),
            [99, 111, 109] => lookup_1240_32(acc),
            [112, 108] => lookup_1240_33(acc),
            [122, 112] => lookup_1240_34(acc),
            [105, 118, 97, 110, 111, 45, 102, 114, 97, 110, 107, 105, 118, 115, 107] => {
                lookup_1240_35(acc)
            }
            [115, 101, 98, 97, 115, 116, 111, 112, 111, 108] => lookup_1240_36(acc),
            [115, 117, 109, 121] => lookup_1240_37(acc),
            [107, 104] => lookup_1240_38(acc),
            [114, 118] => lookup_1240_39(acc),
            [117, 122] => lookup_1240_40(acc),
            [108, 103] => lookup_1240_41(acc),
            [99, 110] => lookup_1240_42(acc),
            [105, 110, 102] => lookup_1240_43(acc),
            [99, 111] => lookup_1240_44(acc),
            [115, 109] => lookup_1240_45(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 105, 97] => lookup_1240_46(acc),
            [103, 111, 118] => lookup_1240_47(acc),
            [107, 104, 109, 101, 108, 110, 121, 116, 115, 107, 121, 105] => lookup_1240_48(acc),
            [116, 101] => lookup_1240_49(acc),
            [107, 105, 101, 118] => lookup_1240_50(acc),
            [107, 115] => lookup_1240_51(acc),
            [108, 116] => lookup_1240_52(acc),
            [122, 116] => lookup_1240_53(acc),
            [110, 101, 116] => lookup_1240_54(acc),
            [99, 104, 101, 114, 110, 105, 103, 111, 118] => lookup_1240_55(acc),
            [99, 107] => lookup_1240_56(acc),
            [111, 100, 101, 115, 115, 97] => lookup_1240_57(acc),
            [99, 104, 101, 114, 107, 97, 115, 121] => lookup_1240_58(acc),
            [105, 102] => lookup_1240_59(acc),
            [107, 114, 121, 109] => lookup_1240_60(acc),
            [108, 117, 116, 115, 107] => lookup_1240_61(acc),
            [122, 104, 105, 116, 111, 109, 105, 114] => lookup_1240_62(acc),
            [111, 100, 101, 115, 97] => lookup_1240_63(acc),
            [116, 101, 114, 110, 111, 112, 105, 108] => lookup_1240_64(acc),
            [98, 105, 122] => lookup_1240_65(acc),
            [115, 98] => lookup_1240_66(acc),
            [121, 97, 108, 116, 97] => lookup_1240_67(acc),
            [118, 105, 110, 110, 121, 116, 115, 105, 97] => lookup_1240_68(acc),
            [112, 112] => lookup_1240_69(acc),
            [107, 114] => lookup_1240_70(acc),
            [107, 109] => lookup_1240_71(acc),
            [107, 104, 101, 114, 115, 111, 110] => lookup_1240_72(acc),
            [110, 105, 107, 111, 108, 97, 101, 118] => lookup_1240_73(acc),
            [100, 110] => lookup_1240_74(acc),
            [118] => lookup_1240_75(acc),
            [100, 112] => lookup_1240_76(acc),
            [107, 118] => lookup_1240_77(acc),
            [108, 118] => lookup_1240_78(acc),
            [111, 100] => lookup_1240_79(acc),
            [118, 111, 108, 121, 110] => lookup_1240_80(acc),
            [100, 111, 110, 101, 116, 115, 107] => lookup_1240_81(acc),
            [118, 105, 110, 110, 105, 99, 97] => lookup_1240_82(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1241() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 108, 102, 105, 112] => lookup_1242_0(acc),
            [111, 114, 120] => lookup_1242_1(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1242_2(acc),
            [109, 121, 102, 116, 112] => lookup_1242_3(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_1242_4(acc),
            [109, 109, 97, 102, 97, 110] => lookup_1242_5(acc),
            [106, 111, 122, 105] => lookup_1242_6(acc),
            [110, 111, 45, 105, 112] => lookup_1242_7(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1242_8(acc),
            [102, 111, 114, 45, 98, 101, 116, 116, 101, 114] => lookup_1242_9(acc),
            [102, 111, 114, 45, 116, 104, 101] => lookup_1242_10(acc),
            [102, 111, 114, 45, 115, 111, 109, 101] => lookup_1242_11(acc),
            [102, 111, 114, 45, 109, 111, 114, 101] => lookup_1242_12(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1242_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1243_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_1243_0(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1243_1(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1243_2(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_1243_3(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1243_4(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1243_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1244() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1245() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1246() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1247() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1248() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1250_0(acc),
            [101, 100, 117] => lookup_1250_1(acc),
            [110, 97, 109, 101] => lookup_1250_2(acc),
            [111, 114, 103] => lookup_1250_3(acc),
            [99, 111, 109] => lookup_1250_4(acc),
            [115, 99, 104] => lookup_1250_5(acc),
            [110, 101, 116] => lookup_1250_6(acc),
            [103, 111, 118] => lookup_1250_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1251() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1253() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1258() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1259_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1259_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1259<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_1259_0(acc),
            [97, 110, 100] => lookup_1259_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1260() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1261() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1262() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1263_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1263_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1263<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109] => lookup_1263_0(acc),
            [116, 111] => lookup_1263_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1264() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1269() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1272() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 108, 117, 103, 97] => lookup_1273_0(acc),
            [98, 117, 107, 104, 97, 114, 97] => lookup_1273_1(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1273_2(acc),
            [107, 114, 97, 115, 110, 111, 100, 97, 114] => lookup_1273_3(acc),
            [107, 117, 114, 103, 97, 110] => lookup_1273_4(acc),
            [97, 122, 101, 114, 98, 97, 105, 106, 97, 110] => lookup_1273_5(acc),
            [108, 101, 110, 117, 103] => lookup_1273_6(acc),
            [97, 98, 107, 104, 97, 122, 105, 97] => lookup_1273_7(acc),
            [109, 117, 114, 109, 97, 110, 115, 107] => lookup_1273_8(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1273_9(acc),
            [111, 98, 110, 105, 110, 115, 107] => lookup_1273_10(acc),
            [116, 111, 103, 108, 105, 97, 116, 116, 105] => lookup_1273_11(acc),
            [110, 111, 118] => lookup_1273_12(acc),
            [107, 104, 97, 107, 97, 115, 115, 105, 97] => lookup_1273_13(acc),
            [97, 114, 107, 104, 97, 110, 103, 101, 108, 115, 107] => lookup_1273_14(acc),
            [101, 120, 110, 101, 116] => lookup_1273_15(acc),
            [107, 97, 114, 97, 99, 111, 108] => lookup_1273_16(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1273_17(acc),
            [107, 97, 114, 101, 108, 105, 97] => lookup_1273_18(acc),
            [116, 114, 111, 105, 116, 115, 107] => lookup_1273_19(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1273_20(acc),
            [118, 111, 108, 111, 103, 100, 97] => lookup_1273_21(acc),
            [110, 121, 109] => lookup_1273_22(acc),
            [109, 115, 107] => lookup_1273_23(acc),
            [106, 97, 109, 98, 121, 108] => lookup_1273_24(acc),
            [116, 117, 118, 97] => lookup_1273_25(acc),
            [112, 101, 110, 122, 97] => lookup_1273_26(acc),
            [110, 97, 118, 111, 105] => lookup_1273_27(acc),
            [116, 97, 115, 104, 107, 101, 110, 116] => lookup_1273_28(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1273_29(acc),
            [105, 118, 97, 110, 111, 118, 111] => lookup_1273_30(acc),
            [107, 97, 114, 97, 103, 97, 110, 100, 97] => lookup_1273_31(acc),
            [116, 117, 108, 97] => lookup_1273_32(acc),
            [98, 97, 108, 97, 115, 104, 111, 118] => lookup_1273_33(acc),
            [112, 111, 107, 114, 111, 118, 115, 107] => lookup_1273_34(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1273_35(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1273_36(acc),
            [110, 111, 114, 116, 104, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1273_37(acc)
            }
            [115, 111, 99, 104, 105] => lookup_1273_38(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1273_39(acc),
            [99, 104, 105, 109, 107, 101, 110, 116] => lookup_1273_40(acc),
            [97, 114, 109, 101, 110, 105, 97] => lookup_1273_41(acc),
            [101, 97, 115, 116, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1273_42(acc)
            }
            [110, 97, 108, 99, 104, 105, 107] => lookup_1273_43(acc),
            [116, 101, 114, 109, 101, 122] => lookup_1273_44(acc),
            [116, 115, 101, 108, 105, 110, 111, 103, 114, 97, 100] => lookup_1273_45(acc),
            [115, 112, 98] => lookup_1273_46(acc),
            [109, 97, 110, 103, 121, 115, 104, 108, 97, 107] => lookup_1273_47(acc),
            [98, 114, 121, 97, 110, 115, 107] => lookup_1273_48(acc),
            [97, 107, 116, 121, 117, 98, 105, 110, 115, 107] => lookup_1273_49(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1273_50(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1273_51(acc),
            [97, 115, 104, 103, 97, 98, 97, 100] => lookup_1273_52(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1274() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1275<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1275_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1276() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1277_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1277<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1277_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1278_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1278_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1278_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1278<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 111] => lookup_1278_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1279() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1280() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1281_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1281_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1281_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1281_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1281_0(acc),
            [98, 97, 114, 115, 121] => lookup_1281_1(acc),
            [103, 101, 110] => lookup_1281_2(acc),
            [101, 100, 117] => lookup_1281_3(acc),
            [102, 105, 114, 109] => lookup_1281_4(acc),
            [99, 111] => lookup_1281_5(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1281_6(acc),
            [103, 111, 118] => lookup_1281_7(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1281_8(acc),
            [110, 105, 99] => lookup_1281_9(acc),
            [114, 101, 115] => lookup_1281_10(acc),
            [109, 105, 108] => lookup_1281_11(acc),
            [105, 110, 100] => lookup_1281_12(acc),
            [111, 114, 103] => lookup_1281_13(acc),
            [119, 101, 98] => lookup_1281_14(acc),
            [110, 101, 116] => lookup_1281_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1282() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1283_0(acc),
            [99, 111, 109] => lookup_1283_1(acc),
            [101, 100, 117] => lookup_1283_2(acc),
            [110, 101, 116] => lookup_1283_3(acc),
            [103, 111, 118] => lookup_1283_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1284() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1285_0(acc),
            [110, 111, 109] => lookup_1285_1(acc),
            [101, 100, 117] => lookup_1285_2(acc),
            [112, 114, 100] => lookup_1285_3(acc),
            [116, 109] => lookup_1285_4(acc),
            [111, 114, 103] => lookup_1285_5(acc),
            [99, 111, 109] => lookup_1285_6(acc),
            [99, 111] => lookup_1285_7(acc),
            [103, 111, 118] => lookup_1285_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1286() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1287() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1291() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1292_0(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1292_1(acc),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_1292_2(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_1292_3(acc),
            [105, 100] => lookup_1292_4(acc),
            [99, 111] => lookup_1292_5(acc),
            [111, 114, 103] => lookup_1292_6(acc),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_1292_7(acc),
            [115, 99, 104] => lookup_1292_8(acc),
            [110, 101, 116] => lookup_1292_9(acc),
            [103, 111, 118] => lookup_1292_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1293_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1293_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1293_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1293_0(acc),
            [97, 115, 115, 111] => lookup_1293_1(acc),
            [111, 114] => lookup_1293_2(acc),
            [101, 100, 117] => lookup_1293_3(acc),
            [105, 110, 116] => lookup_1293_4(acc),
            [103, 111] => lookup_1293_5(acc),
            [109, 100] => lookup_1293_6(acc),
            [103, 111, 117, 118] => lookup_1293_7(acc),
            [110, 108] => lookup_1293_8(acc),
            [99, 111] => lookup_1293_9(acc),
            [99, 111, 109] => lookup_1293_10(acc),
            [120, 110, 45, 45, 97, 114, 111, 112, 111, 114, 116, 45, 98, 121, 97] => {
                lookup_1293_11(acc)
            }
            [102, 105, 110] => lookup_1293_12(acc),
            [97, 195, 169, 114, 111, 112, 111, 114, 116] => lookup_1293_13(acc),
            [111, 114, 103] => lookup_1293_14(acc),
            [101, 100] => lookup_1293_15(acc),
            [110, 101, 116] => lookup_1293_16(acc),
            [112, 114, 101, 115, 115, 101] => lookup_1293_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1294() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1296_0(acc),
            [101, 109, 98] => lookup_1296_1(acc),
            [111, 114, 103] => lookup_1296_2(acc),
            [101, 100, 117] => lookup_1296_3(acc),
            [99, 111, 109] => lookup_1296_4(acc),
            [103, 111, 118] => lookup_1296_5(acc),
            [105, 110, 100] => lookup_1296_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1297() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1299() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1300() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1301_0(acc),
            [101, 100, 117] => lookup_1301_1(acc),
            [97, 114, 116] => lookup_1301_2(acc),
            [103, 111, 98] => lookup_1301_3(acc),
            [115, 108, 100] => lookup_1301_4(acc),
            [111, 114, 103] => lookup_1301_5(acc),
            [99, 111, 109] => lookup_1301_6(acc),
            [119, 101, 98] => lookup_1301_7(acc),
            [110, 101, 116] => lookup_1301_8(acc),
            [103, 111, 118] => lookup_1301_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1302() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1303() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1305() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1306_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 110, 102] => lookup_1306_0(acc),
            [109, 105, 108] => lookup_1306_1(acc),
            [101, 100, 117] => lookup_1306_2(acc),
            [110, 111, 109] => lookup_1306_3(acc),
            [105, 100] => lookup_1306_4(acc),
            [97, 115, 110] => lookup_1306_5(acc),
            [111, 114, 103] => lookup_1306_6(acc),
            [99, 111, 109] => lookup_1306_7(acc),
            [110, 101, 116] => lookup_1306_8(acc),
            [103, 111, 118] => lookup_1306_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1307_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 115] => lookup_1307_0(acc),
            [103, 103] => lookup_1307_1(acc),
            [109, 99] => lookup_1307_2(acc),
            [117, 115] => lookup_1307_3(acc),
            [101, 117] => lookup_1307_4(acc),
            [99, 97, 116] => lookup_1307_5(acc),
            [120, 121] => lookup_1307_6(acc),
            [98, 101] => lookup_1307_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1308() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1312_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1312_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1312<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 119, 45, 100, 110, 115] => lookup_1312_0(acc),
            [110, 116, 100, 108, 108] => lookup_1312_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1313() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1316_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_1316_0(acc),
            [109, 105, 108] => lookup_1316_1(acc),
            [101, 100, 117] => lookup_1316_2(acc),
            [103, 111, 98] => lookup_1316_3(acc),
            [105, 110, 102, 111] => lookup_1316_4(acc),
            [109, 101, 100] => lookup_1316_5(acc),
            [110, 121, 109] => lookup_1316_6(acc),
            [107, 49, 50] => lookup_1316_7(acc),
            [99, 111, 109] => lookup_1316_8(acc),
            [102, 105, 110] => lookup_1316_9(acc),
            [111, 114, 103] => lookup_1316_10(acc),
            [110, 101, 116] => lookup_1316_11(acc),
            [103, 111, 118] => lookup_1316_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1317_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1317_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1317_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1317<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_1317_0(acc),
            [119, 101] => lookup_1317_1(acc),
            [109, 101] => lookup_1317_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1318_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1318_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1318<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 111, 114, 117, 109] => lookup_1318_0(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1318_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1319() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1321() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1322_0(acc),
            [101, 100, 117] => lookup_1322_1(acc),
            [98, 105, 122] => lookup_1322_2(acc),
            [99, 111, 109] => lookup_1322_3(acc),
            [103, 111, 118] => lookup_1322_4(acc),
            [110, 101, 116] => lookup_1322_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1323() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1324() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1325() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1326() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1327() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1328() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1329() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1331() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1332() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1333() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1334_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1334_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1334<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_1334_0(acc),
            [110, 111, 109] => lookup_1334_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1335_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1335_0(acc),
            [115, 99, 104] => lookup_1335_1(acc),
            [109, 105, 108] => lookup_1335_2(acc),
            [101, 100, 117] => lookup_1335_3(acc),
            [105, 110, 102, 111] => lookup_1335_4(acc),
            [99, 111] => lookup_1335_5(acc),
            [99, 111, 109] => lookup_1335_6(acc),
            [98, 105, 122] => lookup_1335_7(acc),
            [111, 114, 103] => lookup_1335_8(acc),
            [103, 111, 118] => lookup_1335_9(acc),
            [110, 101, 116] => lookup_1335_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1336_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1336<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_1336_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1337() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [119, 119, 119] => lookup_1339_1(acc),
            wild => lookup_1339_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1340() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1341() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1342() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1344() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1346() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1347() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1349_0(acc),
            [99, 111] => lookup_1349_1(acc),
            [111, 114, 103] => lookup_1349_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1350_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1350_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1350_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1350<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 101, 114, 97] => lookup_1350_0(acc),
            [99, 121, 111, 110] => lookup_1350_1(acc),
            [102, 110, 119, 107] => lookup_1350_2(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1350_3(acc),
            [106, 101, 108, 101] => lookup_1350_4(acc),
            [98, 97, 114, 115, 121] => lookup_1350_5(acc),
            [102, 111, 108, 105, 111, 110, 101, 116, 119, 111, 114, 107] => lookup_1350_6(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 115, 104] => lookup_1350_7(info, labels, acc),
            [109, 105, 110, 116, 101, 114, 101] => lookup_1350_8(acc),
            [108, 101, 108, 117, 120] => lookup_1350_9(acc),
            [111, 109, 110, 105, 119, 101] => lookup_1350_10(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1350_11(acc),
            [111, 112, 101, 110, 115, 111, 99, 105, 97, 108] => lookup_1350_12(acc),
            [98, 121, 101, 110] => lookup_1350_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1351_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1351_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1351_0(acc),
            [109, 105, 108] => lookup_1351_1(acc),
            [101, 100, 117] => lookup_1351_2(acc),
            [99, 111, 109] => lookup_1351_3(acc),
            [111, 114, 103] => lookup_1351_4(acc),
            [103, 111, 118] => lookup_1351_5(acc),
            [110, 101, 116] => lookup_1351_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1352() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1353() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1354() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1355_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 114, 101, 97, 117] => lookup_1355_0(acc),
            [103, 111, 117, 118] => lookup_1355_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1355_2(acc),
            [97, 115, 115, 111] => lookup_1355_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1356() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1357() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1358() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1360<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1360_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1361_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1361_0(acc),
            [101, 100, 117] => lookup_1361_1(acc),
            [105, 110, 116] => lookup_1361_2(acc),
            [99, 111, 111, 112] => lookup_1361_3(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1361_4(acc),
            [99, 111] => lookup_1361_5(acc),
            [99, 111, 109] => lookup_1361_6(acc),
            [98, 105, 122] => lookup_1361_7(acc),
            [111, 114, 103] => lookup_1361_8(acc),
            [103, 111, 118] => lookup_1361_9(acc),
            [110, 101, 116] => lookup_1361_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1362_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1362_0(acc),
            [101, 100, 117] => lookup_1362_1(acc),
            [99, 111, 109] => lookup_1362_2(acc),
            [111, 114, 103] => lookup_1362_3(acc),
            [103, 111, 118] => lookup_1362_4(acc),
            [110, 101, 116] => lookup_1362_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1363() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1365_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1365_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_1365_0_0(acc),
            [115, 105, 116, 101, 115] => lookup_1365_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1365<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_1365_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1366() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1367<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1367_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1368() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1369() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1370() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1371() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1372() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1373_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_1373_0_0(acc),
            [116, 110] => lookup_1373_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_1373_1_0(acc),
            [100, 101] => lookup_1373_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1373_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1373_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49, 45, 101, 117, 114] => lookup_1373_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1373_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_1373_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1373_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_12_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_12_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_1373_12_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_12_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 114] => lookup_1373_12_1_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_1373_12_0(acc),
            [97, 114, 117, 98, 97] => lookup_1373_12_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1373_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 115, 45, 49] => lookup_1373_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 105, 112] => lookup_1373_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_1373_18_0(acc),
            [99, 97] => lookup_1373_18_1(acc),
            [117, 115] => lookup_1373_18_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1373_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1373<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 120, 97] => lookup_1373_0(labels, acc),
            [116, 114, 101, 110, 100, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_1373_1(info, labels, acc)
            }
            [108, 105, 110, 107, 121, 97, 114, 100] => lookup_1373_2(acc),
            [115, 116, 97, 116, 105, 99, 115] => lookup_1373_3(info, labels, acc),
            [106, 101, 108, 101] => lookup_1373_4(acc),
            [98, 97, 110, 122, 97, 105] => lookup_1373_5(info, labels, acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97, 98, 105, 122] => {
                lookup_1373_6(info, labels, acc)
            }
            [109, 97, 103, 101, 110, 116, 111, 115, 105, 116, 101] => {
                lookup_1373_7(info, labels, acc)
            }
            [118, 97, 112, 111, 114] => lookup_1373_8(acc),
            [112, 114, 105, 109, 101, 116, 101, 108] => lookup_1373_9(labels, acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_1373_10(acc),
            [111, 110, 45, 114, 97, 110, 99, 104, 101, 114] => lookup_1373_11(info, labels, acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97] => lookup_1373_12(info, labels, acc),
            [115, 101, 110, 115, 105, 111, 115, 105, 116, 101] => lookup_1373_13(info, labels, acc),
            [97, 120, 97, 114, 110, 101, 116] => lookup_1373_14(info, labels, acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1373_15(info, labels, acc),
            [100, 105, 97, 100, 101, 109] => lookup_1373_16(acc),
            [117, 114, 111, 119, 110] => lookup_1373_17(acc),
            [114, 101, 99, 108, 97, 105, 109] => lookup_1373_18(info, labels, acc),
            [118, 111, 111, 114, 108, 111, 112, 101, 114] => lookup_1373_19(acc),
            [112, 101, 114, 115, 112, 101, 99, 116, 97] => lookup_1373_20(acc),
            [116, 114, 97, 102, 102, 105, 99, 112, 108, 101, 120] => lookup_1373_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1374() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1375() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1377_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1377<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 105, 99, 101, 97, 98, 108, 101] => lookup_1377_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1378() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1379() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1380_0(acc),
            [99, 111, 109] => lookup_1380_1(acc),
            [103, 111, 118] => lookup_1380_2(acc),
            [110, 101, 116] => lookup_1380_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116, 100] => lookup_1381_0(acc),
            [99, 111, 109] => lookup_1381_1(acc),
            [101, 100, 117] => lookup_1381_2(acc),
            [111, 114, 103] => lookup_1381_3(acc),
            [103, 111, 118] => lookup_1381_4(acc),
            [109, 111, 100] => lookup_1381_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1382() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1383_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1383_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1383_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1383_0(acc),
            [101, 100, 117] => lookup_1383_1(acc),
            [102, 105, 101] => lookup_1383_2(acc),
            [109, 101, 100] => lookup_1383_3(acc),
            [97, 105, 112] => lookup_1383_4(acc),
            [99, 111, 109] => lookup_1383_5(labels, acc),
            [114, 105, 105, 107] => lookup_1383_6(acc),
            [111, 114, 103] => lookup_1383_7(acc),
            [103, 111, 118] => lookup_1383_8(acc),
            [112, 114, 105] => lookup_1383_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1384() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1385() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1386() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1387() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 109] => lookup_1388_6_4_0(acc),
            [100, 104] => lookup_1388_6_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1388_6_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1388_6_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1388_6_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_1388_6_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1388_6_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 104, 45, 115, 101, 114, 118] => lookup_1388_6_0(acc),
            [98, 97, 114, 115, 121] => lookup_1388_6_1(acc),
            [110, 111, 45, 105, 112] => lookup_1388_6_2(acc),
            [103, 119, 105, 100, 100, 108, 101] => lookup_1388_6_3(acc),
            [98, 121, 116, 101, 109, 97, 114, 107] => lookup_1388_6_4(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1388_6_5(acc),
            [114, 101, 116, 114, 111, 115, 110, 117, 98] => lookup_1388_6_6(info, labels, acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => {
                lookup_1388_6_7(acc)
            }
            [108, 97, 121, 101, 114, 115, 104, 105, 102, 116] => lookup_1388_6_8(info, labels, acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1388_6_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1388_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 109, 101, 111, 102, 102, 105, 99, 101] => lookup_1388_9_0(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_1388_9_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1388_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_12_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 108, 117, 103] => lookup_1388_12_0(acc),
            [108, 117, 103] => lookup_1388_12_1(acc),
            [108, 117, 103, 115] => lookup_1388_12_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1388_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1388_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1388_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1388_0(acc),
            [98, 97, 114, 115, 121] => lookup_1388_1(acc),
            [112, 111, 108, 105, 99, 101] => lookup_1388_2(acc),
            [110, 104, 115] => lookup_1388_3(acc),
            [112, 108, 99] => lookup_1388_4(acc),
            [109, 101] => lookup_1388_5(acc),
            [99, 111] => lookup_1388_6(labels, acc),
            [99, 111, 112, 114, 111] => lookup_1388_7(acc),
            [108, 116, 100] => lookup_1388_8(acc),
            [103, 111, 118] => lookup_1388_9(labels, acc),
            [99, 111, 110, 110] => lookup_1388_10(acc),
            [112, 121, 109, 110, 116] => lookup_1388_11(acc),
            [111, 114, 103] => lookup_1388_12(labels, acc),
            [115, 99, 104] => lookup_1388_13(info, labels, acc),
            [110, 101, 116] => lookup_1388_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1389() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1390() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1391() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1392() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1393() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1394() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1395() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1396() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1397_0(acc),
            [105, 110, 116] => lookup_1397_1(acc),
            [102, 105, 114, 109] => lookup_1397_2(acc),
            [97, 114, 116, 115] => lookup_1397_3(acc),
            [114, 101, 99] => lookup_1397_4(acc),
            [99, 111] => lookup_1397_5(acc),
            [99, 111, 109] => lookup_1397_6(acc),
            [116, 101, 99] => lookup_1397_7(acc),
            [103, 111, 118] => lookup_1397_8(acc),
            [115, 116, 111, 114, 101] => lookup_1397_9(acc),
            [109, 105, 108] => lookup_1397_10(acc),
            [103, 111, 98] => lookup_1397_11(acc),
            [105, 110, 102, 111] => lookup_1397_12(acc),
            [111, 114, 103] => lookup_1397_13(acc),
            [101, 49, 50] => lookup_1397_14(acc),
            [119, 101, 98] => lookup_1397_15(acc),
            [110, 101, 116] => lookup_1397_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1398() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1400() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1401() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1402() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1404() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1405_0(acc),
            [99, 111, 109] => lookup_1405_1(acc),
            [111, 114, 103] => lookup_1405_2(acc),
            [110, 101, 116] => lookup_1405_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1406_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 103, 111] => lookup_1406_0(acc),
            [109, 105, 108] => lookup_1406_1(acc),
            [101, 100, 117] => lookup_1406_2(acc),
            [105] => lookup_1406_3(acc),
            [111, 114, 103] => lookup_1406_4(acc),
            [99, 111, 109] => lookup_1406_5(acc),
            [110, 101, 116] => lookup_1406_6(acc),
            [103, 111, 118] => lookup_1406_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1407() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1409() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1410_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_3_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_3_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1410_3_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1410_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 118, 99] => lookup_1410_3_1(info, labels, acc),
            wild => lookup_1410_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1410_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_4_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_4_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 49] => lookup_1410_4_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1410_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 101, 110, 103, 105, 110, 101] => lookup_1410_4_0(acc),
            [97, 101] => lookup_1410_4_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1410_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1410<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 116, 100, 110, 115] => lookup_1410_0(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_1410_1(acc),
            [50, 105, 120] => lookup_1410_2(acc),
            [102, 105, 114, 101, 110, 101, 116] => lookup_1410_3(info, labels, acc),
            [102, 108, 111, 119] => lookup_1410_4(info, labels, acc),
            [100, 110, 115, 107, 105, 110, 103] => lookup_1410_5(acc),
            [108, 105, 110, 107, 121, 97, 114, 100, 45, 99, 108, 111, 117, 100] => {
                lookup_1410_6(acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1410_7(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_1410_8(acc),
            [49, 50, 104, 112] => lookup_1410_9(acc),
            [52, 108, 105, 109, 97] => lookup_1410_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1411() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1412() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1413() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1415() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1416() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1417() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1418() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1419() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1421() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1423() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1424() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1425() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1426() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1427() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1429() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1430() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1432() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117] => lookup_1433_1_0(acc),
            [105, 122, 117, 110, 111, 107, 117, 110, 105] => lookup_1433_1_1(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_1433_1_2(acc),
            [109, 97, 107, 105, 110, 111, 104, 97, 114, 97] => lookup_1433_1_3(acc),
            [115, 104, 105, 109, 111, 100, 97] => lookup_1433_1_4(acc),
            [115, 117, 115, 111, 110, 111] => lookup_1433_1_5(acc),
            [107, 97, 119, 97, 122, 117] => lookup_1433_1_6(acc),
            [107, 97, 110, 110, 97, 109, 105] => lookup_1433_1_7(acc),
            [102, 117, 106, 105, 110, 111, 109, 105, 121, 97] => lookup_1433_1_8(acc),
            [104, 97, 105, 98, 97, 114, 97] => lookup_1433_1_9(acc),
            [105, 119, 97, 116, 97] => lookup_1433_1_10(acc),
            [102, 117, 106, 105] => lookup_1433_1_11(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_1433_1_12(acc),
            [110, 105, 115, 104, 105, 105, 122, 117] => lookup_1433_1_13(acc),
            [109, 105, 110, 97, 109, 105, 105, 122, 117] => lookup_1433_1_14(acc),
            [115, 104, 105, 109, 97, 100, 97] => lookup_1433_1_15(acc),
            [104, 97, 109, 97, 109, 97, 116, 115, 117] => lookup_1433_1_16(acc),
            [111, 109, 97, 101, 122, 97, 107, 105] => lookup_1433_1_17(acc),
            [102, 117, 107, 117, 114, 111, 105] => lookup_1433_1_18(acc),
            [103, 111, 116, 101, 109, 98, 97] => lookup_1433_1_19(acc),
            [107, 97, 119, 97, 110, 101, 104, 111, 110] => lookup_1433_1_20(acc),
            [97, 116, 97, 109, 105] => lookup_1433_1_21(acc),
            [110, 117, 109, 97, 122, 117] => lookup_1433_1_22(acc),
            [97, 114, 97, 105] => lookup_1433_1_23(acc),
            [107, 105, 107, 117, 103, 97, 119, 97] => lookup_1433_1_24(acc),
            [121, 97, 105, 122, 117] => lookup_1433_1_25(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_1433_1_26(acc),
            [107, 111, 115, 97, 105] => lookup_1433_1_27(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_1433_1_28(acc),
            [109, 111, 114, 105, 109, 97, 99, 104, 105] => lookup_1433_1_29(acc),
            [105, 122, 117] => lookup_1433_1_30(acc),
            [109, 97, 116, 115, 117, 122, 97, 107, 105] => lookup_1433_1_31(acc),
            [102, 117, 106, 105, 101, 100, 97] => lookup_1433_1_32(acc),
            [105, 116, 111] => lookup_1433_1_33(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_1433_1_34(acc),
            [107, 97, 107, 101, 103, 97, 119, 97] => lookup_1433_1_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 115, 117, 107, 117, 98, 97] => lookup_1433_2_0(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 109, 105, 121, 97] => lookup_1433_2_1(acc),
            [105, 110, 97] => lookup_1433_2_2(acc),
            [105, 116, 97, 107, 111] => lookup_1433_2_3(acc),
            [109, 105, 104, 111] => lookup_1433_2_4(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_1433_2_5(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 109, 97] => lookup_1433_2_6(acc),
            [105, 119, 97, 109, 97] => lookup_1433_2_7(acc),
            [116, 111, 114, 105, 100, 101] => lookup_1433_2_8(acc),
            [104, 105, 116, 97, 99, 104, 105] => lookup_1433_2_9(acc),
            [116, 115, 117, 99, 104, 105, 117, 114, 97] => lookup_1433_2_10(acc),
            [109, 105, 116, 111] => lookup_1433_2_11(acc),
            [117, 115, 104, 105, 107, 117] => lookup_1433_2_12(acc),
            [100, 97, 105, 103, 111] => lookup_1433_2_13(acc),
            [114, 121, 117, 103, 97, 115, 97, 107, 105] => lookup_1433_2_14(acc),
            [116, 97, 109, 97, 116, 115, 117, 107, 117, 114, 105] => lookup_1433_2_15(acc),
            [115, 117, 105, 102, 117] => lookup_1433_2_16(acc),
            [111, 109, 105, 116, 97, 109, 97] => lookup_1433_2_17(acc),
            [117, 99, 104, 105, 104, 97, 114, 97] => lookup_1433_2_18(acc),
            [105, 110, 97, 115, 104, 105, 107, 105] => lookup_1433_2_19(acc),
            [116, 111, 109, 111, 98, 101] => lookup_1433_2_20(acc),
            [107, 97, 115, 97, 109, 97] => lookup_1433_2_21(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_1433_2_22(acc),
            [107, 97, 115, 117, 109, 105, 103, 97, 117, 114, 97] => lookup_1433_2_23(acc),
            [99, 104, 105, 107, 117, 115, 101, 105] => lookup_1433_2_24(acc),
            [97, 115, 97, 104, 105] => lookup_1433_2_25(acc),
            [106, 111, 115, 111] => lookup_1433_2_26(acc),
            [110, 97, 107, 97] => lookup_1433_2_27(acc),
            [102, 117, 106, 105, 115, 104, 105, 114, 111] => lookup_1433_2_28(acc),
            [98, 97, 110, 100, 111] => lookup_1433_2_29(acc),
            [104, 105, 116, 97, 99, 104, 105, 110, 97, 107, 97] => lookup_1433_2_30(acc),
            [115, 97, 107, 97, 105] => lookup_1433_2_31(acc),
            [115, 111, 119, 97] => lookup_1433_2_32(acc),
            [116, 111, 107, 97, 105] => lookup_1433_2_33(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 116, 97] => lookup_1433_2_34(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_1433_2_35(acc),
            [111, 103, 97, 119, 97] => lookup_1433_2_36(acc),
            [97, 109, 105] => lookup_1433_2_37(acc),
            [107, 97, 109, 105, 115, 117] => lookup_1433_2_38(acc),
            [107, 111, 103, 97] => lookup_1433_2_39(acc),
            [109, 111, 114, 105, 121, 97] => lookup_1433_2_40(acc),
            [111, 97, 114, 97, 105] => lookup_1433_2_41(acc),
            [110, 97, 109, 101, 103, 97, 116, 97] => lookup_1433_2_42(acc),
            [115, 97, 107, 117, 114, 97, 103, 97, 119, 97] => lookup_1433_2_43(acc),
            [116, 111, 110, 101] => lookup_1433_2_44(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_1433_2_45(acc),
            [121, 97, 119, 97, 114, 97] => lookup_1433_2_46(acc),
            [121, 117, 107, 105] => lookup_1433_2_47(acc),
            [115, 104, 105, 109, 111, 100, 97, 116, 101] => lookup_1433_2_48(acc),
            [115, 104, 105, 114, 111, 115, 97, 116, 111] => lookup_1433_2_49(acc),
            [116, 97, 107, 97, 104, 97, 103, 105] => lookup_1433_2_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 101, 110, 101, 105] => lookup_1433_6_0(acc),
            [110, 105, 115, 104, 105, 97, 105, 122, 117] => lookup_1433_6_1(acc),
            [102, 117, 116, 97, 98, 97] => lookup_1433_6_2(acc),
            [110, 97, 110, 103, 111] => lookup_1433_6_3(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_1433_6_4(acc),
            [115, 104, 105, 109, 111, 103, 111] => lookup_1433_6_5(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_1433_6_6(acc),
            [115, 104, 111, 119, 97] => lookup_1433_6_7(acc),
            [97, 115, 97, 107, 97, 119, 97] => lookup_1433_6_8(acc),
            [111, 110, 111] => lookup_1433_6_9(acc),
            [116, 97, 109, 97, 107, 97, 119, 97] => lookup_1433_6_10(acc),
            [100, 97, 116, 101] => lookup_1433_6_11(acc),
            [97, 105, 122, 117, 98, 97, 110, 103, 101] => lookup_1433_6_12(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_1433_6_13(acc),
            [116, 97, 110, 97, 103, 117, 114, 97] => lookup_1433_6_14(acc),
            [105, 119, 97, 107, 105] => lookup_1433_6_15(acc),
            [107, 97, 103, 97, 109, 105, 105, 115, 104, 105] => lookup_1433_6_16(acc),
            [115, 117, 107, 97, 103, 97, 119, 97] => lookup_1433_6_17(acc),
            [121, 97, 98, 117, 107, 105] => lookup_1433_6_18(acc),
            [121, 97, 109, 97, 116, 115, 117, 114, 105] => lookup_1433_6_19(acc),
            [121, 97, 110, 97, 105, 122, 117] => lookup_1433_6_20(acc),
            [105, 122, 117, 109, 105, 122, 97, 107, 105] => lookup_1433_6_21(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_1433_6_22(acc),
            [105, 110, 97, 119, 97, 115, 104, 105, 114, 111] => lookup_1433_6_23(acc),
            [116, 97, 105, 115, 104, 105, 110] => lookup_1433_6_24(acc),
            [102, 117, 114, 117, 100, 111, 110, 111] => lookup_1433_6_25(acc),
            [107, 105, 116, 97, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_1433_6_26(acc),
            [98, 97, 110, 100, 97, 105] => lookup_1433_6_27(acc),
            [110, 105, 115, 104, 105, 103, 111] => lookup_1433_6_28(acc),
            [111, 107, 117, 109, 97] => lookup_1433_6_29(acc),
            [97, 105, 122, 117, 109, 105, 115, 97, 116, 111] => lookup_1433_6_30(acc),
            [107, 117, 110, 105, 109, 105] => lookup_1433_6_31(acc),
            [109, 105, 104, 97, 114, 117] => lookup_1433_6_32(acc),
            [105, 105, 116, 97, 116, 101] => lookup_1433_6_33(acc),
            [97, 105, 122, 117, 119, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_1433_6_34(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_1433_6_35(acc),
            [104, 105, 114, 97, 116, 97] => lookup_1433_6_36(acc),
            [115, 97, 109, 101, 103, 97, 119, 97] => lookup_1433_6_37(acc),
            [121, 117, 103, 97, 119, 97] => lookup_1433_6_38(acc),
            [110, 97, 109, 105, 101] => lookup_1433_6_39(acc),
            [111, 109, 111, 116, 101, 103, 111] => lookup_1433_6_40(acc),
            [121, 97, 109, 97, 116, 111] => lookup_1433_6_41(acc),
            [107, 97, 119, 97, 109, 97, 116, 97] => lookup_1433_6_42(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_1433_6_43(acc),
            [107, 111, 114, 105, 121, 97, 109, 97] => lookup_1433_6_44(acc),
            [104, 105, 114, 111, 110, 111] => lookup_1433_6_45(acc),
            [107, 111, 111, 114, 105] => lookup_1433_6_46(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_1433_6_47(acc),
            [104, 97, 110, 97, 119, 97] => lookup_1433_6_48(acc),
            [115, 111, 109, 97] => lookup_1433_6_49(acc),
            [111, 116, 97, 109, 97] => lookup_1433_6_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 107, 101, 100, 97] => lookup_1433_7_0(acc),
            [115, 97, 121, 97, 109, 97] => lookup_1433_7_1(acc),
            [115, 117, 105, 116, 97] => lookup_1433_7_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 117, 109, 105, 121, 111, 115, 104, 105] => {
                lookup_1433_7_3(acc)
            }
            [116, 97, 105, 115, 104, 105] => lookup_1433_7_4(acc),
            [109, 105, 115, 97, 107, 105] => lookup_1433_7_5(acc),
            [105, 122, 117, 109, 105] => lookup_1433_7_6(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_1433_7_7(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_1433_7_8(acc),
            [104, 97, 110, 110, 97, 110] => lookup_1433_7_9(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 100, 111, 103, 97, 119, 97] => {
                lookup_1433_7_10(acc)
            }
            [107, 97, 105, 122, 117, 107, 97] => lookup_1433_7_11(acc),
            [105, 122, 117, 109, 105, 115, 97, 110, 111] => lookup_1433_7_12(acc),
            [107, 97, 100, 111, 109, 97] => lookup_1433_7_13(acc),
            [107, 117, 109, 97, 116, 111, 114, 105] => lookup_1433_7_14(acc),
            [109, 111, 114, 105, 103, 117, 99, 104, 105] => lookup_1433_7_15(acc),
            [121, 97, 111] => lookup_1433_7_16(acc),
            [110, 101, 121, 97, 103, 97, 119, 97] => lookup_1433_7_17(acc),
            [104, 105, 114, 97, 107, 97, 116, 97] => lookup_1433_7_18(acc),
            [99, 104, 117, 111] => lookup_1433_7_19(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 115, 97, 107, 97] => lookup_1433_7_20(acc),
            [109, 97, 116, 115, 117, 98, 97, 114, 97] => lookup_1433_7_21(acc),
            [109, 105, 110, 97, 116, 111] => lookup_1433_7_22(acc),
            [102, 117, 106, 105, 105, 100, 101, 114, 97] => lookup_1433_7_23(acc),
            [110, 105, 115, 104, 105] => lookup_1433_7_24(acc),
            [110, 111, 115, 101] => lookup_1433_7_25(acc),
            [115, 101, 116, 116, 115, 117] => lookup_1433_7_26(acc),
            [116, 97, 106, 105, 114, 105] => lookup_1433_7_27(acc),
            [116, 111, 110, 100, 97, 98, 97, 121, 97, 115, 104, 105] => lookup_1433_7_28(acc),
            [107, 97, 116, 97, 110, 111] => lookup_1433_7_29(acc),
            [115, 97, 107, 97, 105] => lookup_1433_7_30(acc),
            [107, 105, 116, 97] => lookup_1433_7_31(acc),
            [97, 98, 101, 110, 111] => lookup_1433_7_32(acc),
            [111, 115, 97, 107, 97, 115, 97, 121, 97, 109, 97] => lookup_1433_7_33(acc),
            [104, 97, 98, 105, 107, 105, 110, 111] => lookup_1433_7_34(acc),
            [99, 104, 105, 104, 97, 121, 97, 97, 107, 97, 115, 97, 107, 97] => {
                lookup_1433_7_35(acc)
            }
            [115, 104, 105, 106, 111, 110, 97, 119, 97, 116, 101] => lookup_1433_7_36(acc),
            [116, 97, 107, 97, 105, 115, 104, 105] => lookup_1433_7_37(acc),
            [105, 122, 117, 109, 105, 111, 116, 115, 117] => lookup_1433_7_38(acc),
            [115, 101, 110, 110, 97, 110] => lookup_1433_7_39(acc),
            [100, 97, 105, 116, 111] => lookup_1433_7_40(acc),
            [116, 111, 121, 111, 110, 97, 107, 97] => lookup_1433_7_41(acc),
            [107, 105, 115, 104, 105, 119, 97, 100, 97] => lookup_1433_7_42(acc),
            [109, 105, 110, 111, 104] => lookup_1433_7_43(acc),
            [107, 97, 119, 97, 99, 104, 105, 110, 97, 103, 97, 110, 111] => lookup_1433_7_44(acc),
            [115, 104, 105, 109, 97, 109, 111, 116, 111] => lookup_1433_7_45(acc),
            [116, 111, 121, 111, 110, 111] => lookup_1433_7_46(acc),
            [107, 97, 115, 104, 105, 119, 97, 114, 97] => lookup_1433_7_47(acc),
            [107, 97, 110, 97, 110] => lookup_1433_7_48(acc),
            [116, 97, 100, 97, 111, 107, 97] => lookup_1433_7_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 107, 101, 100, 97] => lookup_1433_8_0(acc),
            [97, 110, 112, 97, 99, 104, 105] => lookup_1433_8_1(acc),
            [116, 97, 114, 117, 105] => lookup_1433_8_2(acc),
            [103, 111, 100, 111] => lookup_1433_8_3(acc),
            [107, 97, 107, 97, 109, 105, 103, 97, 104, 97, 114, 97] => lookup_1433_8_4(acc),
            [104, 97, 115, 104, 105, 109, 97] => lookup_1433_8_5(acc),
            [104, 105, 99, 104, 105, 115, 111] => lookup_1433_8_6(acc),
            [115, 101, 107, 105] => lookup_1433_8_7(acc),
            [121, 111, 114, 111] => lookup_1433_8_8(acc),
            [104, 105, 100, 97] => lookup_1433_8_9(acc),
            [103, 105, 102, 117] => lookup_1433_8_10(acc),
            [103, 117, 106, 111] => lookup_1433_8_11(acc),
            [109, 105, 122, 117, 110, 97, 109, 105] => lookup_1433_8_12(acc),
            [107, 97, 110, 105] => lookup_1433_8_13(acc),
            [107, 97, 115, 97, 109, 97, 116, 115, 117] => lookup_1433_8_14(acc),
            [107, 97, 115, 97, 104, 97, 114, 97] => lookup_1433_8_15(acc),
            [103, 105, 110, 97, 110] => lookup_1433_8_16(acc),
            [107, 97, 119, 97, 117, 101] => lookup_1433_8_17(acc),
            [109, 105, 110, 111, 107, 97, 109, 111] => lookup_1433_8_18(acc),
            [109, 105, 116, 97, 107, 101] => lookup_1433_8_19(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_1433_8_20(acc),
            [109, 105, 110, 111] => lookup_1433_8_21(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_1433_8_22(acc),
            [116, 97, 106, 105, 109, 105] => lookup_1433_8_23(acc),
            [110, 97, 107, 97, 116, 115, 117, 103, 97, 119, 97] => lookup_1433_8_24(acc),
            [116, 111, 107, 105] => lookup_1433_8_25(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 104, 105, 114, 97, 107, 97, 119, 97] => {
                lookup_1433_8_26(acc)
            }
            [115, 97, 107, 97, 104, 111, 103, 105] => lookup_1433_8_27(acc),
            [111, 103, 97, 107, 105] => lookup_1433_8_28(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_1433_8_29(acc),
            [116, 111, 109, 105, 107, 97] => lookup_1433_8_30(acc),
            [101, 110, 97] => lookup_1433_8_31(acc),
            [105, 98, 105, 103, 97, 119, 97] => lookup_1433_8_32(acc),
            [119, 97, 110, 111, 117, 99, 104, 105] => lookup_1433_8_33(acc),
            [109, 111, 116, 111, 115, 117] => lookup_1433_8_34(acc),
            [121, 97, 111, 116, 115, 117] => lookup_1433_8_35(acc),
            [115, 101, 107, 105, 103, 97, 104, 97, 114, 97] => lookup_1433_8_36(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_1433_8_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 114, 97, 121, 97, 115, 117] => lookup_1433_10_0(acc),
            [107, 97, 109, 97, 103, 97, 121, 97] => lookup_1433_10_1(acc),
            [109, 97, 116, 115, 117, 100, 111] => lookup_1433_10_2(acc),
            [115, 104, 105, 109, 111, 102, 117, 115, 97] => lookup_1433_10_3(acc),
            [121, 111, 107, 111, 115, 104, 105, 98, 97, 104, 105, 107, 97, 114, 105] => {
                lookup_1433_10_4(acc)
            }
            [111, 116, 97, 107, 105] => lookup_1433_10_5(acc),
            [121, 111, 116, 115, 117, 107, 97, 105, 100, 111] => lookup_1433_10_6(acc),
            [107, 105, 109, 105, 116, 115, 117] => lookup_1433_10_7(acc),
            [107, 97, 116, 115, 117, 117, 114, 97] => lookup_1433_10_8(acc),
            [99, 104, 111, 110, 97, 110] => lookup_1433_10_9(acc),
            [107, 105, 115, 97, 114, 97, 122, 117] => lookup_1433_10_10(acc),
            [110, 97, 114, 97, 115, 104, 105, 110, 111] => lookup_1433_10_11(acc),
            [111, 110, 106, 117, 107, 117] => lookup_1433_10_12(acc),
            [121, 111, 107, 97, 105, 99, 104, 105, 98, 97] => lookup_1433_10_13(acc),
            [110, 97, 114, 105, 116, 97] => lookup_1433_10_14(acc),
            [107, 97, 115, 104, 105, 119, 97] => lookup_1433_10_15(acc),
            [99, 104, 117, 111] => lookup_1433_10_16(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_1433_10_17(acc),
            [107, 121, 111, 110, 97, 110] => lookup_1433_10_18(acc),
            [115, 104, 105, 115, 117, 105] => lookup_1433_10_19(acc),
            [105, 110, 122, 97, 105] => lookup_1433_10_20(acc),
            [97, 98, 105, 107, 111] => lookup_1433_10_21(acc),
            [109, 117, 116, 115, 117, 122, 97, 119, 97] => lookup_1433_10_22(acc),
            [121, 97, 99, 104, 105, 109, 97, 116, 97] => lookup_1433_10_23(acc),
            [110, 97, 103, 97, 114, 97] => lookup_1433_10_24(acc),
            [116, 111, 109, 105, 115, 97, 116, 111] => lookup_1433_10_25(acc),
            [97, 115, 97, 104, 105] => lookup_1433_10_26(acc),
            [102, 117, 110, 97, 98, 97, 115, 104, 105] => lookup_1433_10_27(acc),
            [109, 111, 98, 97, 114, 97] => lookup_1433_10_28(acc),
            [116, 111, 104, 110, 111, 115, 104, 111] => lookup_1433_10_29(acc),
            [109, 105, 110, 97, 109, 105, 98, 111, 115, 111] => lookup_1433_10_30(acc),
            [111, 97, 109, 105, 115, 104, 105, 114, 97, 115, 97, 116, 111] => {
                lookup_1433_10_31(acc)
            }
            [105, 99, 104, 105, 104, 97, 114, 97] => lookup_1433_10_32(acc),
            [104, 97, 110, 97, 109, 105, 103, 97, 119, 97] => lookup_1433_10_33(acc),
            [110, 97, 103, 97, 114, 101, 121, 97, 109, 97] => lookup_1433_10_34(acc),
            [115, 97, 107, 97, 101] => lookup_1433_10_35(acc),
            [115, 104, 105, 114, 111, 105] => lookup_1433_10_36(acc),
            [109, 105, 104, 97, 109, 97] => lookup_1433_10_37(acc),
            [115, 111, 115, 97] => lookup_1433_10_38(acc),
            [102, 117, 116, 116, 115, 117] => lookup_1433_10_39(acc),
            [107, 117, 106, 117, 107, 117, 114, 105] => lookup_1433_10_40(acc),
            [107, 97, 116, 111, 114, 105] => lookup_1433_10_41(acc),
            [110, 111, 100, 97] => lookup_1433_10_42(acc),
            [116, 111, 103, 97, 110, 101] => lookup_1433_10_43(acc),
            [99, 104, 111, 115, 104, 105] => lookup_1433_10_44(acc),
            [109, 105, 100, 111, 114, 105] => lookup_1433_10_45(acc),
            [107, 111, 122, 97, 107, 105] => lookup_1433_10_46(acc),
            [115, 111, 100, 101, 103, 97, 117, 114, 97] => lookup_1433_10_47(acc),
            [115, 104, 105, 114, 97, 107, 111] => lookup_1433_10_48(acc),
            [99, 104, 111, 115, 101, 105] => lookup_1433_10_49(acc),
            [105, 115, 117, 109, 105] => lookup_1433_10_50(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_1433_10_51(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_1433_10_52(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_1433_10_53(acc),
            [115, 97, 107, 117, 114, 97] => lookup_1433_10_54(acc),
            [116, 97, 107, 111] => lookup_1433_10_55(acc),
            [107, 97, 109, 111, 103, 97, 119, 97] => lookup_1433_10_56(acc),
            [111, 109, 105, 103, 97, 119, 97] => lookup_1433_10_57(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 122, 111] => lookup_1433_14_0(acc),
            [107, 111, 117, 110, 111, 115, 117] => lookup_1433_14_1(acc),
            [115, 97, 121, 97, 109, 97] => lookup_1433_14_2(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_1433_14_3(acc),
            [110, 105, 105, 122, 97] => lookup_1433_14_4(acc),
            [107, 97, 115, 117, 107, 97, 98, 101] => lookup_1433_14_5(acc),
            [99, 104, 105, 99, 104, 105, 98, 117] => lookup_1433_14_6(acc),
            [111, 107, 101, 103, 97, 119, 97] => lookup_1433_14_7(acc),
            [111, 116, 97, 107, 105] => lookup_1433_14_8(acc),
            [104, 97, 110, 121, 117] => lookup_1433_14_9(acc),
            [102, 117, 106, 105, 109, 105, 110, 111] => lookup_1433_14_10(acc),
            [115, 97, 107, 97, 100, 111] => lookup_1433_14_11(acc),
            [107, 117, 109, 97, 103, 97, 121, 97] => lookup_1433_14_12(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_1433_14_13(acc),
            [121, 111, 110, 111] => lookup_1433_14_14(acc),
            [116, 111, 107, 111, 114, 111, 122, 97, 119, 97] => lookup_1433_14_15(acc),
            [121, 111, 115, 104, 105, 107, 97, 119, 97] => lookup_1433_14_16(acc),
            [105, 119, 97, 116, 115, 117, 107, 105] => lookup_1433_14_17(acc),
            [116, 111, 107, 105, 103, 97, 119, 97] => lookup_1433_14_18(acc),
            [121, 111, 115, 104, 105, 109, 105] => lookup_1433_14_19(acc),
            [111, 109, 105, 121, 97] => lookup_1433_14_20(acc),
            [109, 97, 116, 115, 117, 98, 117, 115, 104, 105] => lookup_1433_14_21(acc),
            [104, 111, 110, 106, 111] => lookup_1433_14_22(acc),
            [111, 103, 97, 119, 97] => lookup_1433_14_23(acc),
            [114, 121, 111, 107, 97, 109, 105] => lookup_1433_14_24(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_1433_14_25(acc),
            [102, 117, 107, 97, 121, 97] => lookup_1433_14_26(acc),
            [104, 97, 116, 111, 121, 97, 109, 97] => lookup_1433_14_27(acc),
            [111, 103, 111, 115, 101] => lookup_1433_14_28(acc),
            [115, 104, 105, 107, 105] => lookup_1433_14_29(acc),
            [114, 97, 110, 122, 97, 110] => lookup_1433_14_30(acc),
            [104, 97, 115, 117, 100, 97] => lookup_1433_14_31(acc),
            [107, 97, 119, 97, 103, 117, 99, 104, 105] => lookup_1433_14_32(acc),
            [115, 117, 103, 105, 116, 111] => lookup_1433_14_33(acc),
            [121, 97, 115, 104, 105, 111] => lookup_1433_14_34(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_1433_14_35(acc),
            [110, 97, 109, 101, 103, 97, 119, 97] => lookup_1433_14_36(acc),
            [105, 110, 97] => lookup_1433_14_37(acc),
            [104, 97, 116, 111, 103, 97, 121, 97] => lookup_1433_14_38(acc),
            [109, 105, 121, 97, 115, 104, 105, 114, 111] => lookup_1433_14_39(acc),
            [107, 97, 119, 97, 106, 105, 109, 97] => lookup_1433_14_40(acc),
            [110, 97, 103, 97, 116, 111, 114, 111] => lookup_1433_14_41(acc),
            [105, 114, 117, 109, 97] => lookup_1433_14_42(acc),
            [104, 97, 110, 110, 111] => lookup_1433_14_43(acc),
            [97, 115, 97, 107, 97] => lookup_1433_14_44(acc),
            [109, 105, 110, 97, 110, 111] => lookup_1433_14_45(acc),
            [107, 105, 116, 97, 109, 111, 116, 111] => lookup_1433_14_46(acc),
            [109, 105, 115, 97, 116, 111] => lookup_1433_14_47(acc),
            [115, 104, 105, 114, 97, 111, 107, 97] => lookup_1433_14_48(acc),
            [119, 97, 114, 97, 98, 105] => lookup_1433_14_49(acc),
            [109, 111, 114, 111, 121, 97, 109, 97] => lookup_1433_14_50(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_1433_14_51(acc),
            [121, 111, 114, 105, 105] => lookup_1433_14_52(acc),
            [107, 117, 107, 105] => lookup_1433_14_53(acc),
            [104, 105, 103, 97, 115, 104, 105, 99, 104, 105, 99, 104, 105, 98, 117] => {
                lookup_1433_14_54(acc)
            }
            [102, 117, 106, 105, 109, 105] => lookup_1433_14_55(acc),
            [104, 105, 100, 97, 107, 97] => lookup_1433_14_56(acc),
            [107, 97, 109, 105, 115, 97, 116, 111] => lookup_1433_14_57(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_1433_14_58(acc),
            [111, 103, 97, 110, 111] => lookup_1433_14_59(acc),
            [116, 111, 100, 97] => lookup_1433_14_60(acc),
            [115, 111, 107, 97] => lookup_1433_14_61(acc),
            [117, 114, 97, 119, 97] => lookup_1433_14_62(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 121, 97, 109, 97] => {
                lookup_1433_14_63(acc)
            }
            [107, 111, 115, 104, 105, 103, 97, 121, 97] => lookup_1433_14_64(acc),
            [116, 115, 117, 114, 117, 103, 97, 115, 104, 105, 109, 97] => lookup_1433_14_65(acc),
            [121, 111, 107, 111, 122, 101] => lookup_1433_14_66(acc),
            [115, 97, 116, 116, 101] => lookup_1433_14_67(acc),
            [107, 97, 109, 105, 105, 122, 117, 109, 105] => lookup_1433_14_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_1433_19_0(acc),
            [107, 97, 109, 97, 107, 117, 114, 97] => lookup_1433_19_1(acc),
            [121, 97, 109, 97, 107, 105, 116, 97] => lookup_1433_19_2(acc),
            [97, 121, 97, 115, 101] => lookup_1433_19_3(acc),
            [101, 98, 105, 110, 97] => lookup_1433_19_4(acc),
            [116, 115, 117, 107, 117, 105] => lookup_1433_19_5(acc),
            [99, 104, 105, 103, 97, 115, 97, 107, 105] => lookup_1433_19_6(acc),
            [110, 105, 110, 111, 109, 105, 121, 97] => lookup_1433_19_7(acc),
            [104, 97, 100, 97, 110, 111] => lookup_1433_19_8(acc),
            [109, 105, 110, 97, 109, 105, 97, 115, 104, 105, 103, 97, 114, 97] => {
                lookup_1433_19_9(acc)
            }
            [109, 105, 117, 114, 97] => lookup_1433_19_10(acc),
            [104, 105, 114, 97, 116, 115, 117, 107, 97] => lookup_1433_19_11(acc),
            [121, 117, 103, 97, 119, 97, 114, 97] => lookup_1433_19_12(acc),
            [122, 117, 115, 104, 105] => lookup_1433_19_13(acc),
            [111, 100, 97, 119, 97, 114, 97] => lookup_1433_19_14(acc),
            [115, 97, 109, 117, 107, 97, 119, 97] => lookup_1433_19_15(acc),
            [105, 115, 101, 104, 97, 114, 97] => lookup_1433_19_16(acc),
            [109, 97, 116, 115, 117, 100, 97] => lookup_1433_19_17(acc),
            [107, 105, 121, 111, 107, 97, 119, 97] => lookup_1433_19_18(acc),
            [104, 97, 107, 111, 110, 101] => lookup_1433_19_19(acc),
            [121, 97, 109, 97, 116, 111] => lookup_1433_19_20(acc),
            [122, 97, 109, 97] => lookup_1433_19_21(acc),
            [97, 116, 115, 117, 103, 105] => lookup_1433_19_22(acc),
            [111, 105] => lookup_1433_19_23(acc),
            [121, 111, 107, 111, 115, 117, 107, 97] => lookup_1433_19_24(acc),
            [115, 97, 103, 97, 109, 105, 104, 97, 114, 97] => lookup_1433_19_25(acc),
            [110, 97, 107, 97, 105] => lookup_1433_19_26(acc),
            [111, 105, 115, 111] => lookup_1433_19_27(acc),
            [97, 105, 107, 97, 119, 97] => lookup_1433_19_28(acc),
            [107, 97, 105, 115, 101, 105] => lookup_1433_19_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_20_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1433_20_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_1433_20_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1433_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 101, 105, 110, 101, 116] => lookup_1433_20_0(info, labels, acc),
            [103, 101, 104, 105, 114, 110] => lookup_1433_20_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 109, 105] => lookup_1433_21_0(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_1433_21_1(acc),
            [110, 97, 114, 117, 116, 111] => lookup_1433_21_2(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 103, 101] => lookup_1433_21_3(acc),
            [107, 97, 105, 110, 97, 110] => lookup_1433_21_4(acc),
            [109, 117, 103, 105] => lookup_1433_21_5(acc),
            [115, 97, 110, 97, 103, 111, 99, 104, 105] => lookup_1433_21_6(acc),
            [107, 111, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_1433_21_7(acc),
            [109, 105, 110, 97, 109, 105] => lookup_1433_21_8(acc),
            [105, 99, 104, 105, 98, 97] => lookup_1433_21_9(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_1433_21_10(acc),
            [115, 104, 105, 115, 104, 105, 107, 117, 105] => lookup_1433_21_11(acc),
            [97, 110, 97, 110] => lookup_1433_21_12(acc),
            [119, 97, 106, 105, 107, 105] => lookup_1433_21_13(acc),
            [105, 116, 97, 110, 111] => lookup_1433_21_14(acc),
            [109, 105, 109, 97] => lookup_1433_21_15(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_1433_21_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_22_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_22_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_1433_22_1(acc),
            wild => lookup_1433_22_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 111, 110, 105] => lookup_1433_23_0(acc),
            [116, 101, 110, 107, 97, 119, 97] => lookup_1433_23_1(acc),
            [116, 101, 110, 114, 105] => lookup_1433_23_2(acc),
            [109, 105, 116, 115, 117, 101] => lookup_1433_23_3(acc),
            [116, 97, 107, 97, 116, 111, 114, 105] => lookup_1433_23_4(acc),
            [115, 104, 105, 110, 106, 111] => lookup_1433_23_5(acc),
            [111, 117, 100, 97] => lookup_1433_23_6(acc),
            [115, 97, 107, 117, 114, 97, 105] => lookup_1433_23_7(acc),
            [115, 104, 105, 109, 111, 105, 99, 104, 105] => lookup_1433_23_8(acc),
            [107, 97, 109, 105, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_1433_23_9(acc),
            [107, 97, 110, 109, 97, 107, 105] => lookup_1433_23_10(acc),
            [105, 107, 111, 109, 97] => lookup_1433_23_11(acc),
            [117, 100, 97] => lookup_1433_23_12(acc),
            [107, 117, 114, 111, 116, 97, 107, 105] => lookup_1433_23_13(acc),
            [107, 111, 114, 121, 111] => lookup_1433_23_14(acc),
            [121, 97, 109, 97, 116, 111, 116, 97, 107, 97, 100, 97] => lookup_1433_23_15(acc),
            [105, 107, 97, 114, 117, 103, 97] => lookup_1433_23_16(acc),
            [116, 97, 119, 97, 114, 97, 109, 111, 116, 111] => lookup_1433_23_17(acc),
            [121, 97, 109, 97, 122, 111, 101] => lookup_1433_23_18(acc),
            [103, 111, 115, 101] => lookup_1433_23_19(acc),
            [97, 110, 100, 111] => lookup_1433_23_20(acc),
            [115, 97, 110, 103, 111] => lookup_1433_23_21(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_1433_23_22(acc),
            [110, 97, 114, 97] => lookup_1433_23_23(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_1433_23_24(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_1433_23_25(acc),
            [111, 121, 111, 100, 111] => lookup_1433_23_26(acc),
            [110, 111, 115, 101, 103, 97, 119, 97] => lookup_1433_23_27(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 115, 104, 105, 110, 111] => {
                lookup_1433_23_28(acc)
            }
            [107, 97, 115, 104, 105, 104, 97, 114, 97] => lookup_1433_23_29(acc),
            [107, 97, 119, 97, 105] => lookup_1433_23_30(acc),
            [121, 111, 115, 104, 105, 110, 111] => lookup_1433_23_31(acc),
            [104, 101, 103, 117, 114, 105] => lookup_1433_23_32(acc),
            [121, 97, 109, 97, 116, 111, 107, 111, 114, 105, 121, 97, 109, 97] => {
                lookup_1433_23_33(acc)
            }
            [109, 105, 121, 97, 107, 101] => lookup_1433_23_34(acc),
            [107, 97, 115, 104, 105, 98, 97] => lookup_1433_23_35(acc),
            [115, 104, 105, 109, 111, 107, 105, 116, 97, 121, 97, 109, 97] => {
                lookup_1433_23_36(acc)
            }
            [111, 106, 105] => lookup_1433_23_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 110, 117, 109, 97] => lookup_1433_37_0(acc),
            [104, 97, 103, 97] => lookup_1433_37_1(acc),
            [117, 106, 105, 105, 101] => lookup_1433_37_2(acc),
            [111, 104, 116, 97, 119, 97, 114, 97] => lookup_1433_37_3(acc),
            [97, 115, 104, 105, 107, 97, 103, 97] => lookup_1433_37_4(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 97] => lookup_1433_37_5(acc),
            [111, 121, 97, 109, 97] => lookup_1433_37_6(acc),
            [121, 97, 105, 116, 97] => lookup_1433_37_7(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 107, 101] => lookup_1433_37_8(acc),
            [110, 97, 115, 117, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_1433_37_9(acc),
            [115, 104, 105, 111, 121, 97] => lookup_1433_37_10(acc),
            [98, 97, 116, 111] => lookup_1433_37_11(acc),
            [107, 97, 109, 105, 110, 111, 107, 97, 119, 97] => lookup_1433_37_12(acc),
            [107, 97, 114, 97, 115, 117, 121, 97, 109, 97] => lookup_1433_37_13(acc),
            [107, 117, 114, 111, 105, 115, 111] => lookup_1433_37_14(acc),
            [105, 119, 97, 102, 117, 110, 101] => lookup_1433_37_15(acc),
            [110, 97, 115, 117] => lookup_1433_37_16(acc),
            [117, 116, 115, 117, 110, 111, 109, 105, 121, 97] => lookup_1433_37_17(acc),
            [105, 99, 104, 105, 107, 97, 105] => lookup_1433_37_18(acc),
            [109, 105, 98, 117] => lookup_1433_37_19(acc),
            [110, 111, 103, 105] => lookup_1433_37_20(acc),
            [111, 104, 105, 114, 97] => lookup_1433_37_21(acc),
            [116, 115, 117, 103, 97] => lookup_1433_37_22(acc),
            [109, 111, 116, 101, 103, 105] => lookup_1433_37_23(acc),
            [116, 97, 107, 97, 110, 101, 122, 97, 119, 97] => lookup_1433_37_24(acc),
            [115, 97, 107, 117, 114, 97] => lookup_1433_37_25(acc),
            [115, 97, 110, 111] => lookup_1433_37_26(acc),
            [109, 97, 115, 104, 105, 107, 111] => lookup_1433_37_27(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_1433_37_28(acc),
            [110, 105, 107, 107, 111] => lookup_1433_37_29(acc),
            [109, 111, 107, 97] => lookup_1433_37_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 107, 97, 111, 107, 97] => lookup_1433_38_0(acc),
            [106, 111, 104, 97, 110, 97] => lookup_1433_38_1(acc),
            [107, 117, 114, 111, 98, 101] => lookup_1433_38_2(acc),
            [97, 115, 97, 104, 105] => lookup_1433_38_3(acc),
            [117, 110, 97, 122, 117, 107, 105] => lookup_1433_38_4(acc),
            [117, 111, 122, 117] => lookup_1433_38_5(acc),
            [121, 97, 109, 97, 100, 97] => lookup_1433_38_6(acc),
            [110, 97, 109, 101, 114, 105, 107, 97, 119, 97] => lookup_1433_38_7(acc),
            [102, 117, 99, 104, 117] => lookup_1433_38_8(acc),
            [105, 110, 97, 109, 105] => lookup_1433_38_9(acc),
            [110, 97, 110, 116, 111] => lookup_1433_38_10(acc),
            [104, 105, 109, 105] => lookup_1433_38_11(acc),
            [102, 117, 107, 117, 109, 105, 116, 115, 117] => lookup_1433_38_12(acc),
            [110, 97, 107, 97, 110, 105, 105, 107, 97, 119, 97] => lookup_1433_38_13(acc),
            [110, 121, 117, 122, 101, 110] => lookup_1433_38_14(acc),
            [102, 117, 110, 97, 104, 97, 115, 104, 105] => lookup_1433_38_15(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_1433_38_16(acc),
            [111, 121, 97, 98, 101] => lookup_1433_38_17(acc),
            [116, 111, 103, 97] => lookup_1433_38_18(acc),
            [116, 111, 110, 97, 109, 105] => lookup_1433_38_19(acc),
            [116, 111, 121, 97, 109, 97] => lookup_1433_38_20(acc),
            [107, 97, 109, 105, 105, 99, 104, 105] => lookup_1433_38_21(acc),
            [116, 97, 105, 114, 97] => lookup_1433_38_22(acc),
            [105, 109, 105, 122, 117] => lookup_1433_38_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_1433_40_0(acc),
            [109, 105, 121, 97, 107, 111, 110, 111, 106, 111] => lookup_1433_40_1(acc),
            [116, 115, 117, 110, 111] => lookup_1433_40_2(acc),
            [97, 121, 97] => lookup_1433_40_3(acc),
            [101, 98, 105, 110, 111] => lookup_1433_40_4(acc),
            [107, 97, 100, 111, 103, 97, 119, 97] => lookup_1433_40_5(acc),
            [115, 104, 105, 110, 116, 111, 109, 105] => lookup_1433_40_6(acc),
            [116, 97, 107, 97, 110, 97, 98, 101] => lookup_1433_40_7(acc),
            [110, 105, 115, 104, 105, 109, 101, 114, 97] => lookup_1433_40_8(acc),
            [116, 97, 107, 97, 122, 97, 107, 105] => lookup_1433_40_9(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_1433_40_10(acc),
            [103, 111, 107, 97, 115, 101] => lookup_1433_40_11(acc),
            [109, 105, 109, 97, 116, 97] => lookup_1433_40_12(acc),
            [107, 105, 106, 111] => lookup_1433_40_13(acc),
            [104, 121, 117, 103, 97] => lookup_1433_40_14(acc),
            [115, 104, 105, 105, 98, 97] => lookup_1433_40_15(acc),
            [115, 97, 105, 116, 111] => lookup_1433_40_16(acc),
            [116, 97, 107, 97, 104, 97, 114, 117] => lookup_1433_40_17(acc),
            [107, 117, 110, 105, 116, 111, 109, 105] => lookup_1433_40_18(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_1433_40_19(acc),
            [109, 111, 114, 111, 116, 115, 117, 107, 97] => lookup_1433_40_20(acc),
            [110, 111, 98, 101, 111, 107, 97] => lookup_1433_40_21(acc),
            [107, 105, 116, 97, 117, 114, 97] => lookup_1433_40_22(acc),
            [107, 97, 119, 97, 109, 105, 110, 97, 109, 105] => lookup_1433_40_23(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_1433_40_24(acc),
            [107, 111, 98, 97, 121, 97, 115, 104, 105] => lookup_1433_40_25(acc),
            [107, 117, 115, 104, 105, 109, 97] => lookup_1433_40_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 114, 117, 107, 97, 119, 97] => lookup_1433_44_0(acc),
            [105, 115, 104, 105, 110, 111, 109, 97, 107, 105] => lookup_1433_44_1(acc),
            [109, 117, 114, 97, 116, 97] => lookup_1433_44_2(acc),
            [111, 103, 97, 119, 97, 114, 97] => lookup_1433_44_3(acc),
            [116, 111, 109, 101] => lookup_1433_44_4(acc),
            [109, 105, 115, 97, 116, 111] => lookup_1433_44_5(acc),
            [111, 110, 97, 103, 97, 119, 97] => lookup_1433_44_6(acc),
            [115, 104, 105, 99, 104, 105, 107, 97, 115, 104, 117, 107, 117] => {
                lookup_1433_44_7(acc)
            }
            [116, 97, 103, 97, 106, 111] => lookup_1433_44_8(acc),
            [105, 119, 97, 110, 117, 109, 97] => lookup_1433_44_9(acc),
            [111, 115, 97, 107, 105] => lookup_1433_44_10(acc),
            [115, 104, 105, 107, 97, 109, 97] => lookup_1433_44_11(acc),
            [109, 97, 114, 117, 109, 111, 114, 105] => lookup_1433_44_12(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_1433_44_13(acc),
            [107, 97, 109, 105] => lookup_1433_44_14(acc),
            [121, 97, 109, 97, 109, 111, 116, 111] => lookup_1433_44_15(acc),
            [115, 101, 109, 105, 110, 101] => lookup_1433_44_16(acc),
            [107, 97, 107, 117, 100, 97] => lookup_1433_44_17(acc),
            [119, 97, 107, 117, 121, 97] => lookup_1433_44_18(acc),
            [114, 105, 102, 117] => lookup_1433_44_19(acc),
            [119, 97, 116, 97, 114, 105] => lookup_1433_44_20(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_1433_44_21(acc),
            [122, 97, 111] => lookup_1433_44_22(acc),
            [109, 105, 110, 97, 109, 105, 115, 97, 110, 114, 105, 107, 117] => {
                lookup_1433_44_23(acc)
            }
            [110, 97, 116, 111, 114, 105] => lookup_1433_44_24(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => {
                lookup_1433_44_25(acc)
            }
            [115, 104, 105, 98, 97, 116, 97] => lookup_1433_44_26(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_1433_44_27(acc),
            [111, 104, 105, 114, 97] => lookup_1433_44_28(acc),
            [116, 111, 109, 105, 121, 97] => lookup_1433_44_29(acc),
            [115, 104, 105, 111, 103, 97, 109, 97] => lookup_1433_44_30(acc),
            [116, 97, 105, 119, 97] => lookup_1433_44_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 109, 101, 111, 107, 97] => lookup_1433_56_0(acc),
            [107, 97, 109, 111] => lookup_1433_56_1(acc),
            [115, 101, 105, 107, 97] => lookup_1433_56_2(acc),
            [111, 121, 97, 109, 97, 122, 97, 107, 105] => lookup_1433_56_3(acc),
            [107, 121, 111, 116, 97, 109, 98, 97] => lookup_1433_56_4(acc),
            [106, 111, 121, 111] => lookup_1433_56_5(acc),
            [110, 97, 107, 97, 103, 121, 111] => lookup_1433_56_6(acc),
            [102, 117, 107, 117, 99, 104, 105, 121, 97, 109, 97] => lookup_1433_56_7(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97] => lookup_1433_56_8(acc),
            [109, 117, 107, 111] => lookup_1433_56_9(acc),
            [116, 97, 110, 97, 98, 101] => lookup_1433_56_10(acc),
            [121, 97, 119, 97, 116, 97] => lookup_1433_56_11(acc),
            [110, 97, 103, 97, 111, 107, 97, 107, 121, 111] => lookup_1433_56_12(acc),
            [115, 97, 107, 121, 111] => lookup_1433_56_13(acc),
            [105, 110, 101] => lookup_1433_56_14(acc),
            [107, 117, 109, 105, 121, 97, 109, 97] => lookup_1433_56_15(acc),
            [117, 106, 105, 116, 97, 119, 97, 114, 97] => lookup_1433_56_16(acc),
            [121, 97, 109, 97, 115, 104, 105, 110, 97] => lookup_1433_56_17(acc),
            [107, 105, 116, 97] => lookup_1433_56_18(acc),
            [107, 105, 122, 117] => lookup_1433_56_19(acc),
            [109, 105, 110, 97, 109, 105, 121, 97, 109, 97, 115, 104, 105, 114, 111] => {
                lookup_1433_56_20(acc)
            }
            [109, 105, 110, 97, 109, 105] => lookup_1433_56_21(acc),
            [107, 121, 111, 116, 97, 110, 103, 111] => lookup_1433_56_22(acc),
            [109, 97, 105, 122, 117, 114, 117] => lookup_1433_56_23(acc),
            [119, 97, 122, 117, 107, 97] => lookup_1433_56_24(acc),
            [97, 121, 97, 98, 101] => lookup_1433_56_25(acc),
            [107, 121, 111, 116, 97, 110, 97, 98, 101] => lookup_1433_56_26(acc),
            [110, 97, 110, 116, 97, 110] => lookup_1433_56_27(acc),
            [105, 100, 101] => lookup_1433_56_28(acc),
            [109, 105, 121, 97, 122, 117] => lookup_1433_56_29(acc),
            [117, 106, 105] => lookup_1433_56_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_57_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_57_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_57<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_1433_57_1(acc),
            wild => lookup_1433_57_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 117, 105, 107, 97] => lookup_1433_58_0(acc),
            [115, 101, 105, 114, 111] => lookup_1433_58_1(acc),
            [107, 97, 109, 111] => lookup_1433_58_2(acc),
            [115, 101, 105, 114, 111, 117] => lookup_1433_58_3(acc),
            [116, 111, 99, 104, 105, 111] => lookup_1433_58_4(acc),
            [111, 106, 105, 121, 97] => lookup_1433_58_5(acc),
            [109, 117, 114, 97, 107, 97, 109, 105] => lookup_1433_58_6(acc),
            [97, 103, 97] => lookup_1433_58_7(acc),
            [115, 97, 110, 106, 111] => lookup_1433_58_8(acc),
            [103, 111, 115, 101, 110] => lookup_1433_58_9(acc),
            [117, 111, 110, 117, 109, 97] => lookup_1433_58_10(acc),
            [109, 121, 111, 107, 111] => lookup_1433_58_11(acc),
            [121, 111, 105, 116, 97] => lookup_1433_58_12(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_1433_58_13(acc),
            [111, 109, 105] => lookup_1433_58_14(acc),
            [109, 105, 116, 115, 117, 107, 101] => lookup_1433_58_15(acc),
            [121, 117, 122, 97, 119, 97] => lookup_1433_58_16(acc),
            [115, 97, 100, 111] => lookup_1433_58_17(acc),
            [107, 97, 114, 105, 119, 97] => lookup_1433_58_18(acc),
            [116, 97, 105, 110, 97, 105] => lookup_1433_58_19(acc),
            [105, 116, 111, 105, 103, 97, 119, 97] => lookup_1433_58_20(acc),
            [109, 105, 110, 97, 109, 105, 117, 111, 110, 117, 109, 97] => lookup_1433_58_21(acc),
            [107, 97, 115, 104, 105, 119, 97, 122, 97, 107, 105] => lookup_1433_58_22(acc),
            [115, 101, 107, 105, 107, 97, 119, 97] => lookup_1433_58_23(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_1433_58_24(acc),
            [116, 115, 117, 110, 97, 110] => lookup_1433_58_25(acc),
            [116, 115, 117, 98, 97, 109, 101] => lookup_1433_58_26(acc),
            [116, 97, 103, 97, 109, 105] => lookup_1433_58_27(acc),
            [110, 97, 103, 97, 111, 107, 97] => lookup_1433_58_28(acc),
            [97, 103, 97, 110, 111] => lookup_1433_58_29(acc),
            [121, 97, 104, 105, 107, 111] => lookup_1433_58_30(acc),
            [105, 122, 117, 109, 111, 122, 97, 107, 105] => lookup_1433_58_31(acc),
            [116, 111, 107, 97, 109, 97, 99, 104, 105] => lookup_1433_58_32(acc),
            [106, 111, 101, 116, 115, 117] => lookup_1433_58_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_62_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_62_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_62<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_1433_62_1(acc),
            wild => lookup_1433_62_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 107, 101, 100, 97] => lookup_1433_63_0(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_1433_63_1(acc),
            [101, 99, 104, 105, 122, 101, 110] => lookup_1433_63_2(acc),
            [115, 97, 107, 97, 105] => lookup_1433_63_3(acc),
            [109, 105, 104, 97, 109, 97] => lookup_1433_63_4(acc),
            [102, 117, 107, 117, 105] => lookup_1433_63_5(acc),
            [111, 110, 111] => lookup_1433_63_6(acc),
            [111, 104, 105] => lookup_1433_63_7(acc),
            [119, 97, 107, 97, 115, 97] => lookup_1433_63_8(acc),
            [116, 115, 117, 114, 117, 103, 97] => lookup_1433_63_9(acc),
            [109, 105, 110, 97, 109, 105, 101, 99, 104, 105, 122, 101, 110] => {
                lookup_1433_63_10(acc)
            }
            [111, 98, 97, 109, 97] => lookup_1433_63_11(acc),
            [115, 97, 98, 97, 101] => lookup_1433_63_12(acc),
            [101, 105, 104, 101, 105, 106, 105] => lookup_1433_63_13(acc),
            [107, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_1433_63_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_1433_64_0(acc),
            [107, 111, 116, 97] => lookup_1433_64_1(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_1433_64_2(acc),
            [115, 104, 105, 107, 97, 116, 115, 117] => lookup_1433_64_3(acc),
            [109, 105, 104, 97, 109, 97] => lookup_1433_64_4(acc),
            [104, 105, 103, 97, 115, 104, 105, 117, 114, 97] => lookup_1433_64_5(acc),
            [110, 105, 115, 104, 105, 111] => lookup_1433_64_6(acc),
            [111, 104, 97, 114, 117] => lookup_1433_64_7(acc),
            [105, 119, 97, 107, 117, 114, 97] => lookup_1433_64_8(acc),
            [104, 97, 122, 117] => lookup_1433_64_9(acc),
            [107, 111, 110, 97, 110] => lookup_1433_64_10(acc),
            [116, 97, 104, 97, 114, 97] => lookup_1433_64_11(acc),
            [111, 103, 117, 99, 104, 105] => lookup_1433_64_12(acc),
            [105, 110, 97, 122, 97, 119, 97] => lookup_1433_64_13(acc),
            [111, 107, 97, 122, 97, 107, 105] => lookup_1433_64_14(acc),
            [111, 119, 97, 114, 105, 97, 115, 97, 104, 105] => lookup_1433_64_15(acc),
            [116, 111, 101, 105] => lookup_1433_64_16(acc),
            [116, 111, 121, 111, 97, 107, 101] => lookup_1433_64_17(acc),
            [116, 111, 121, 111, 107, 97, 119, 97] => lookup_1433_64_18(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_1433_64_19(acc),
            [104, 101, 107, 105, 110, 97, 110] => lookup_1433_64_20(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_1433_64_21(acc),
            [105, 115, 115, 104, 105, 107, 105] => lookup_1433_64_22(acc),
            [105, 110, 117, 121, 97, 109, 97] => lookup_1433_64_23(acc),
            [107, 105, 121, 111, 115, 117] => lookup_1433_64_24(acc),
            [116, 111, 121, 111, 110, 101] => lookup_1433_64_25(acc),
            [107, 97, 115, 117, 103, 97, 105] => lookup_1433_64_26(acc),
            [107, 97, 114, 105, 121, 97] => lookup_1433_64_27(acc),
            [102, 117, 115, 111] => lookup_1433_64_28(acc),
            [103, 97, 109, 97, 103, 111, 114, 105] => lookup_1433_64_29(acc),
            [99, 104, 105, 114, 121, 117] => lookup_1433_64_30(acc),
            [97, 115, 117, 107, 101] => lookup_1433_64_31(acc),
            [107, 105, 114, 97] => lookup_1433_64_32(acc),
            [115, 101, 116, 111] => lookup_1433_64_33(acc),
            [116, 111, 98, 105, 115, 104, 105, 109, 97] => lookup_1433_64_34(acc),
            [116, 111, 107, 97, 105] => lookup_1433_64_35(acc),
            [110, 105, 115, 115, 104, 105, 110] => lookup_1433_64_36(acc),
            [99, 104, 105, 116, 97] => lookup_1433_64_37(acc),
            [97, 105, 115, 97, 105] => lookup_1433_64_38(acc),
            [116, 111, 103, 111] => lookup_1433_64_39(acc),
            [107, 111, 109, 97, 107, 105] => lookup_1433_64_40(acc),
            [97, 110, 106, 111] => lookup_1433_64_41(acc),
            [104, 97, 110, 100, 97] => lookup_1433_64_42(acc),
            [107, 97, 110, 105, 101] => lookup_1433_64_43(acc),
            [116, 111, 121, 111, 116, 97] => lookup_1433_64_44(acc),
            [115, 104, 105, 110, 115, 104, 105, 114, 111] => lookup_1433_64_45(acc),
            [97, 109, 97] => lookup_1433_64_46(acc),
            [111, 98, 117] => lookup_1433_64_47(acc),
            [116, 111, 107, 111, 110, 97, 109, 101] => lookup_1433_64_48(acc),
            [116, 111, 121, 111, 104, 97, 115, 104, 105] => lookup_1433_64_49(acc),
            [115, 104, 105, 116, 97, 114, 97] => lookup_1433_64_50(acc),
            [121, 97, 116, 111, 109, 105] => lookup_1433_64_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 107, 97, 103, 105] => lookup_1433_65_0(acc),
            [116, 111, 103, 97, 107, 117, 115, 104, 105] => lookup_1433_65_1(acc),
            [109, 111, 99, 104, 105, 122, 117, 107, 105] => lookup_1433_65_2(acc),
            [107, 105, 115, 111, 102, 117, 107, 117, 115, 104, 105, 109, 97] => {
                lookup_1433_65_3(acc)
            }
            [111, 109, 97, 99, 104, 105] => lookup_1433_65_4(acc),
            [97, 99, 104, 105] => lookup_1433_65_5(acc),
            [115, 97, 107, 117, 104, 111] => lookup_1433_65_6(acc),
            [110, 97, 103, 105, 115, 111] => lookup_1433_65_7(acc),
            [109, 105, 110, 97, 109, 105, 109, 97, 107, 105] => lookup_1433_65_8(acc),
            [109, 105, 121, 97, 100, 97] => lookup_1433_65_9(acc),
            [111, 116, 97, 107, 105] => lookup_1433_65_10(acc),
            [111, 98, 117, 115, 101] => lookup_1433_65_11(acc),
            [119, 97, 100, 97] => lookup_1433_65_12(acc),
            [109, 105, 97, 115, 97] => lookup_1433_65_13(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_1433_65_14(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_1433_65_15(acc),
            [97, 111, 107, 105] => lookup_1433_65_16(acc),
            [104, 97, 107, 117, 98, 97] => lookup_1433_65_17(acc),
            [97, 115, 97, 104, 105] => lookup_1433_65_18(acc),
            [109, 105, 110, 97, 109, 105, 109, 105, 110, 111, 119, 97] => lookup_1433_65_19(acc),
            [110, 97, 107, 97, 110, 111] => lookup_1433_65_20(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_1433_65_21(acc),
            [121, 97, 115, 97, 107, 97] => lookup_1433_65_22(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_1433_65_23(acc),
            [115, 117, 122, 97, 107, 97] => lookup_1433_65_24(acc),
            [111, 103, 97, 119, 97] => lookup_1433_65_25(acc),
            [97, 122, 117, 109, 105, 110, 111] => lookup_1433_65_26(acc),
            [105, 107, 117, 115, 97, 107, 97] => lookup_1433_65_27(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_1433_65_28(acc),
            [97, 110, 97, 110] => lookup_1433_65_29(acc),
            [115, 97, 107, 97, 101] => lookup_1433_65_30(acc),
            [111, 107, 97, 121, 97] => lookup_1433_65_31(acc),
            [115, 117, 119, 97] => lookup_1433_65_32(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_1433_65_33(acc),
            [105, 105, 122, 117, 110, 97] => lookup_1433_65_34(acc),
            [97, 103, 101, 109, 97, 116, 115, 117] => lookup_1433_65_35(acc),
            [107, 111, 109, 97, 103, 97, 110, 101] => lookup_1433_65_36(acc),
            [116, 97, 116, 101, 115, 104, 105, 110, 97] => lookup_1433_65_37(acc),
            [121, 97, 109, 97, 110, 111, 117, 99, 104, 105] => lookup_1433_65_38(acc),
            [121, 97, 115, 117, 111, 107, 97] => lookup_1433_65_39(acc),
            [107, 97, 114, 117, 105, 122, 97, 119, 97] => lookup_1433_65_40(acc),
            [105, 107, 101, 100, 97] => lookup_1433_65_41(acc),
            [105, 105, 121, 97, 109, 97] => lookup_1433_65_42(acc),
            [104, 105, 114, 97, 121, 97] => lookup_1433_65_43(acc),
            [105, 110, 97] => lookup_1433_65_44(acc),
            [109, 105, 121, 111, 116, 97] => lookup_1433_65_45(acc),
            [115, 97, 107, 117] => lookup_1433_65_46(acc),
            [117, 101, 100, 97] => lookup_1433_65_47(acc),
            [109, 105, 110, 97, 109, 105, 97, 105, 107, 105] => lookup_1433_65_48(acc),
            [115, 97, 107, 97, 107, 105] => lookup_1433_65_49(acc),
            [115, 104, 105, 111, 106, 105, 114, 105] => lookup_1433_65_50(acc),
            [111, 111, 115, 104, 105, 107, 97] => lookup_1433_65_51(acc),
            [110, 97, 103, 97, 119, 97] => lookup_1433_65_52(acc),
            [99, 104, 105, 107, 117, 109, 97] => lookup_1433_65_53(acc),
            [116, 111, 103, 117, 114, 97] => lookup_1433_65_54(acc),
            [111, 111, 107, 117, 119, 97] => lookup_1433_65_55(acc),
            [115, 104, 105, 109, 111, 115, 117, 119, 97] => lookup_1433_65_56(acc),
            [111, 116, 97, 114, 105] => lookup_1433_65_57(acc),
            [111, 109, 105] => lookup_1433_65_58(acc),
            [109, 105, 110, 111, 119, 97] => lookup_1433_65_59(acc),
            [99, 104, 105, 107, 117, 104, 111, 107, 117] => lookup_1433_65_60(acc),
            [107, 105, 115, 111] => lookup_1433_65_61(acc),
            [102, 117, 106, 105, 109, 105] => lookup_1433_65_62(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_1433_65_63(acc),
            [107, 105, 116, 97, 97, 105, 107, 105] => lookup_1433_65_64(acc),
            [109, 97, 116, 115, 117, 107, 97, 119, 97] => lookup_1433_65_65(acc),
            [110, 97, 103, 97, 110, 111] => lookup_1433_65_66(acc),
            [116, 111, 109, 105] => lookup_1433_65_67(acc),
            [110, 111, 122, 97, 119, 97, 111, 110, 115, 101, 110] => lookup_1433_65_68(acc),
            [104, 97, 114, 97] => lookup_1433_65_69(acc),
            [99, 104, 105, 110, 111] => lookup_1433_65_70(acc),
            [105, 105, 106, 105, 109, 97] => lookup_1433_65_71(acc),
            [107, 111, 109, 111, 114, 111] => lookup_1433_65_72(acc),
            [105, 105, 100, 97] => lookup_1433_65_73(acc),
            [115, 104, 105, 110, 97, 110, 111, 109, 97, 99, 104, 105] => lookup_1433_65_74(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 105, 115, 104, 105, 107, 97, 116, 115, 117, 114, 97] => lookup_1433_67_0(acc),
            [111, 115, 104, 105, 110, 111] => lookup_1433_67_1(acc),
            [110, 105, 114, 97, 115, 97, 107, 105] => lookup_1433_67_2(acc),
            [107, 111, 115, 104, 117] => lookup_1433_67_3(acc),
            [111, 116, 115, 117, 107, 105] => lookup_1433_67_4(acc),
            [115, 104, 111, 119, 97] => lookup_1433_67_5(acc),
            [116, 97, 98, 97, 121, 97, 109, 97] => lookup_1433_67_6(acc),
            [117, 101, 110, 111, 104, 97, 114, 97] => lookup_1433_67_7(acc),
            [116, 115, 117, 114, 117] => lookup_1433_67_8(acc),
            [121, 97, 109, 97, 110, 97, 107, 97, 107, 111] => lookup_1433_67_9(acc),
            [102, 117, 106, 105, 107, 97, 119, 97, 103, 117, 99, 104, 105, 107, 111] => {
                lookup_1433_67_10(acc)
            }
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_1433_67_11(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_1433_67_12(acc),
            [104, 97, 121, 97, 107, 97, 119, 97] => lookup_1433_67_13(acc),
            [102, 117, 106, 105, 121, 111, 115, 104, 105, 100, 97] => lookup_1433_67_14(acc),
            [107, 111, 102, 117] => lookup_1433_67_15(acc),
            [107, 111, 115, 117, 103, 101] => lookup_1433_67_16(acc),
            [100, 111, 115, 104, 105] => lookup_1433_67_17(acc),
            [105, 99, 104, 105, 107, 97, 119, 97, 109, 105, 115, 97, 116, 111] => {
                lookup_1433_67_18(acc)
            }
            [107, 97, 105] => lookup_1433_67_19(acc),
            [99, 104, 117, 111] => lookup_1433_67_20(acc),
            [102, 117, 101, 102, 117, 107, 105] => lookup_1433_67_21(acc),
            [104, 111, 107, 117, 116, 111] => lookup_1433_67_22(acc),
            [109, 105, 110, 97, 109, 105, 45, 97, 108, 112, 115] => lookup_1433_67_23(acc),
            [109, 105, 110, 111, 98, 117] => lookup_1433_67_24(acc),
            [110, 97, 107, 97, 109, 105, 99, 104, 105] => lookup_1433_67_25(acc),
            [110, 97, 110, 98, 117] => lookup_1433_67_26(acc),
            [110, 97, 114, 117, 115, 97, 119, 97] => lookup_1433_67_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_70<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 107, 97, 103, 97, 119, 97] => lookup_1433_70_0(acc),
            [109, 117, 114, 111, 114, 97, 110] => lookup_1433_70_1(acc),
            [110, 117, 109, 97, 116, 97] => lookup_1433_70_2(acc),
            [97, 116, 115, 117, 109, 97] => lookup_1433_70_3(acc),
            [117, 114, 97, 107, 97, 119, 97] => lookup_1433_70_4(acc),
            [98, 105, 101, 105] => lookup_1433_70_5(acc),
            [97, 115, 97, 104, 105, 107, 97, 119, 97] => lookup_1433_70_6(acc),
            [110, 105, 105, 107, 97, 112, 112, 117] => lookup_1433_70_7(acc),
            [114, 101, 98, 117, 110] => lookup_1433_70_8(acc),
            [115, 104, 105, 98, 101, 116, 115, 117] => lookup_1433_70_9(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_1433_70_10(acc),
            [99, 104, 105, 116, 111, 115, 101] => lookup_1433_70_11(acc),
            [104, 97, 107, 111, 100, 97, 116, 101] => lookup_1433_70_12(acc),
            [115, 104, 97, 114, 105] => lookup_1433_70_13(acc),
            [110, 97, 107, 97, 115, 97, 116, 115, 117, 110, 97, 105] => lookup_1433_70_14(acc),
            [115, 104, 105, 110, 116, 111, 107, 117] => lookup_1433_70_15(acc),
            [98, 105, 104, 111, 114, 111] => lookup_1433_70_16(acc),
            [117, 116, 97, 115, 104, 105, 110, 97, 105] => lookup_1433_70_17(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 119, 97] => lookup_1433_70_18(acc),
            [105, 119, 97, 110, 97, 105] => lookup_1433_70_19(acc),
            [109, 105, 110, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_1433_70_20(acc),
            [101, 110, 105, 119, 97] => lookup_1433_70_21(acc),
            [115, 104, 105, 114, 97, 110, 117, 107, 97] => lookup_1433_70_22(acc),
            [107, 121, 111, 119, 97] => lookup_1433_70_23(acc),
            [119, 97, 115, 115, 97, 109, 117] => lookup_1433_70_24(acc),
            [107, 117, 110, 110, 101, 112, 112, 117] => lookup_1433_70_25(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_1433_70_26(acc),
            [116, 115, 117, 107, 105, 103, 97, 116, 97] => lookup_1433_70_27(acc),
            [101, 114, 105, 109, 111] => lookup_1433_70_28(acc),
            [115, 104, 105, 109, 111, 107, 97, 119, 97] => lookup_1433_70_29(acc),
            [109, 111, 115, 101, 117, 115, 104, 105] => lookup_1433_70_30(acc),
            [111, 98, 105, 104, 105, 114, 111] => lookup_1433_70_31(acc),
            [102, 117, 114, 117, 98, 105, 114, 97] => lookup_1433_70_32(acc),
            [98, 105, 102, 117, 107, 97] => lookup_1433_70_33(acc),
            [105, 107, 101, 100, 97] => lookup_1433_70_34(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 117, 114, 97] => {
                lookup_1433_70_35(acc)
            }
            [107, 117, 114, 105, 121, 97, 109, 97] => lookup_1433_70_36(acc),
            [104, 111, 114, 111, 107, 97, 110, 97, 105] => lookup_1433_70_37(acc),
            [98, 105, 114, 97, 116, 111, 114, 105] => lookup_1433_70_38(acc),
            [104, 111, 110, 98, 101, 116, 115, 117] => lookup_1433_70_39(acc),
            [97, 105, 98, 101, 116, 115, 117] => lookup_1433_70_40(acc),
            [107, 117, 115, 104, 105, 114, 111] => lookup_1433_70_41(acc),
            [109, 97, 115, 104, 105, 107, 101] => lookup_1433_70_42(acc),
            [114, 105, 107, 117, 98, 101, 116, 115, 117] => lookup_1433_70_43(acc),
            [119, 97, 107, 107, 97, 110, 97, 105] => lookup_1433_70_44(acc),
            [116, 111, 121, 111, 116, 111, 109, 105] => lookup_1433_70_45(acc),
            [116, 115, 117, 98, 101, 116, 115, 117] => lookup_1433_70_46(acc),
            [107, 111, 115, 104, 105, 109, 105, 122, 117] => lookup_1433_70_47(acc),
            [115, 104, 105, 98, 101, 99, 104, 97] => lookup_1433_70_48(acc),
            [116, 97, 107, 97, 115, 117] => lookup_1433_70_49(acc),
            [110, 97, 121, 111, 114, 111] => lookup_1433_70_50(acc),
            [104, 105, 100, 97, 107, 97] => lookup_1433_70_51(acc),
            [104, 111, 107, 117, 114, 121, 117] => lookup_1433_70_52(acc),
            [104, 105, 114, 111, 111] => lookup_1433_70_53(acc),
            [107, 97, 109, 105, 115, 117, 110, 97, 103, 97, 119, 97] => lookup_1433_70_54(acc),
            [107, 97, 109, 111, 101, 110, 97, 105] => lookup_1433_70_55(acc),
            [107, 105, 116, 97, 109, 105] => lookup_1433_70_56(acc),
            [116, 111, 121, 111, 117, 114, 97] => lookup_1433_70_57(acc),
            [97, 115, 115, 97, 98, 117] => lookup_1433_70_58(acc),
            [116, 111, 121, 97, 107, 111] => lookup_1433_70_59(acc),
            [104, 111, 107, 117, 116, 111] => lookup_1433_70_60(acc),
            [111, 116, 111, 98, 101] => lookup_1433_70_61(acc),
            [121, 111, 105, 99, 104, 105] => lookup_1433_70_62(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_1433_70_63(acc),
            [115, 97, 114, 117, 102, 117, 116, 115, 117] => lookup_1433_70_64(acc),
            [114, 105, 115, 104, 105, 114, 105, 102, 117, 106, 105] => lookup_1433_70_65(acc),
            [110, 97, 110, 112, 111, 114, 111] => lookup_1433_70_66(acc),
            [110, 111, 98, 111, 114, 105, 98, 101, 116, 115, 117] => lookup_1433_70_67(acc),
            [115, 104, 97, 107, 111, 116, 97, 110] => lookup_1433_70_68(acc),
            [100, 97, 116, 101] => lookup_1433_70_69(acc),
            [115, 111, 98, 101, 116, 115, 117] => lookup_1433_70_70(acc),
            [115, 104, 105, 109, 97, 109, 97, 107, 105] => lookup_1433_70_71(acc),
            [121, 97, 107, 117, 109, 111] => lookup_1433_70_72(acc),
            [104, 97, 109, 97, 116, 111, 110, 98, 101, 116, 115, 117] => lookup_1433_70_73(acc),
            [107, 105, 121, 111, 115, 97, 116, 111] => lookup_1433_70_74(acc),
            [107, 101, 109, 98, 117, 99, 104, 105] => lookup_1433_70_75(acc),
            [107, 105, 109, 111, 98, 101, 116, 115, 117] => lookup_1433_70_76(acc),
            [109, 97, 116, 115, 117, 109, 97, 101] => lookup_1433_70_77(acc),
            [111, 98, 105, 114, 97] => lookup_1433_70_78(acc),
            [115, 104, 105, 107, 97, 98, 101] => lookup_1433_70_79(acc),
            [105, 119, 97, 109, 105, 122, 97, 119, 97] => lookup_1433_70_80(acc),
            [107, 97, 109, 105, 115, 104, 105, 104, 111, 114, 111] => lookup_1433_70_81(acc),
            [116, 97, 107, 105, 107, 97, 119, 97] => lookup_1433_70_82(acc),
            [111, 117, 109, 117] => lookup_1433_70_83(acc),
            [114, 105, 115, 104, 105, 114, 105] => lookup_1433_70_84(acc),
            [117, 114, 97, 117, 115, 117] => lookup_1433_70_85(acc),
            [110, 97, 105, 101] => lookup_1433_70_86(acc),
            [114, 97, 110, 107, 111, 115, 104, 105] => lookup_1433_70_87(acc),
            [116, 111, 109, 97, 107, 111, 109, 97, 105] => lookup_1433_70_88(acc),
            [107, 97, 121, 97, 98, 101] => lookup_1433_70_89(acc),
            [110, 105, 107, 105] => lookup_1433_70_90(acc),
            [102, 117, 114, 97, 110, 111] => lookup_1433_70_91(acc),
            [97, 115, 104, 105, 98, 101, 116, 115, 117] => lookup_1433_70_92(acc),
            [116, 97, 107, 105, 110, 111, 117, 101] => lookup_1433_70_93(acc),
            [104, 111, 114, 111, 110, 111, 98, 101] => lookup_1433_70_94(acc),
            [109, 105, 107, 97, 115, 97] => lookup_1433_70_95(acc),
            [107, 105, 107, 111, 110, 97, 105] => lookup_1433_70_96(acc),
            [110, 97, 110, 97, 101] => lookup_1433_70_97(acc),
            [115, 104, 105, 110, 115, 104, 105, 110, 111, 116, 115, 117] => lookup_1433_70_98(acc),
            [101, 98, 101, 116, 115, 117] => lookup_1433_70_99(acc),
            [116, 111, 121, 97] => lookup_1433_70_100(acc),
            [101, 109, 98, 101, 116, 115, 117] => lookup_1433_70_101(acc),
            [105, 109, 97, 107, 97, 110, 101] => lookup_1433_70_102(acc),
            [115, 117, 110, 97, 103, 97, 119, 97] => lookup_1433_70_103(acc),
            [115, 104, 105, 114, 105, 117, 99, 104, 105] => lookup_1433_70_104(acc),
            [111, 122, 111, 114, 97] => lookup_1433_70_105(acc),
            [97, 115, 104, 111, 114, 111] => lookup_1433_70_106(acc),
            [97, 107, 97, 98, 105, 114, 97] => lookup_1433_70_107(acc),
            [112, 105, 112, 112, 117] => lookup_1433_70_108(acc),
            [116, 97, 105, 107, 105] => lookup_1433_70_109(acc),
            [111, 116, 97, 114, 117] => lookup_1433_70_110(acc),
            [97, 98, 105, 114, 97] => lookup_1433_70_111(acc),
            [115, 104, 105, 107, 97, 111, 105] => lookup_1433_70_112(acc),
            [111, 116, 111, 105, 110, 101, 112, 112, 117] => lookup_1433_70_113(acc),
            [101, 115, 97, 115, 104, 105] => lookup_1433_70_114(acc),
            [107, 105, 116, 97, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_1433_70_115(acc)
            }
            [109, 111, 109, 98, 101, 116, 115, 117] => lookup_1433_70_116(acc),
            [115, 97, 114, 111, 109, 97] => lookup_1433_70_117(acc),
            [99, 104, 105, 112, 112, 117, 98, 101, 116, 115, 117] => lookup_1433_70_118(acc),
            [97, 98, 97, 115, 104, 105, 114, 105] => lookup_1433_70_119(acc),
            [111, 107, 101, 116, 111] => lookup_1433_70_120(acc),
            [101, 115, 97, 110] => lookup_1433_70_121(acc),
            [104, 97, 98, 111, 114, 111] => lookup_1433_70_122(acc),
            [111, 107, 111, 112, 112, 101] => lookup_1433_70_123(acc),
            [111, 116, 111, 102, 117, 107, 101] => lookup_1433_70_124(acc),
            [110, 101, 109, 117, 114, 111] => lookup_1433_70_125(acc),
            [97, 107, 107, 101, 115, 104, 105] => lookup_1433_70_126(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_1433_70_127(acc),
            [107, 117, 114, 111, 109, 97, 116, 115, 117, 110, 97, 105] => lookup_1433_70_128(acc),
            [115, 104, 105, 114, 97, 111, 105] => lookup_1433_70_129(acc),
            [116, 111, 109, 97, 114, 105] => lookup_1433_70_130(acc),
            [107, 117, 116, 99, 104, 97, 110] => lookup_1433_70_131(acc),
            [109, 117, 107, 97, 119, 97] => lookup_1433_70_132(acc),
            [107, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_1433_70_133(acc),
            [116, 111, 98, 101, 116, 115, 117] => lookup_1433_70_134(acc),
            [116, 111, 104, 109, 97] => lookup_1433_70_135(acc),
            [117, 114, 121, 117] => lookup_1433_70_136(acc),
            [105, 115, 104, 105, 107, 97, 114, 105] => lookup_1433_70_137(acc),
            [98, 105, 98, 97, 105] => lookup_1433_70_138(acc),
            [110, 97, 107, 97, 116, 111, 109, 98, 101, 116, 115, 117] => lookup_1433_70_139(acc),
            [110, 105, 115, 104, 105, 111, 107, 111, 112, 112, 101] => lookup_1433_70_140(acc),
            [116, 101, 115, 104, 105, 107, 97, 103, 97] => lookup_1433_70_141(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_72_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_72_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_72<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_1433_72_1(acc),
            wild => lookup_1433_72_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_73_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_73<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 112, 112, 117] => lookup_1433_73_0(acc),
            [98, 117, 110, 103, 111, 116, 97, 107, 97, 100, 97] => lookup_1433_73_1(acc),
            [104, 97, 115, 97, 109, 97] => lookup_1433_73_2(acc),
            [104, 105, 106, 105] => lookup_1433_73_3(acc),
            [107, 111, 107, 111, 110, 111, 101] => lookup_1433_73_4(acc),
            [104, 105, 109, 101, 115, 104, 105, 109, 97] => lookup_1433_73_5(acc),
            [107, 117, 115, 117] => lookup_1433_73_6(acc),
            [115, 97, 105, 107, 105] => lookup_1433_73_7(acc),
            [117, 115, 117, 107, 105] => lookup_1433_73_8(acc),
            [116, 115, 117, 107, 117, 109, 105] => lookup_1433_73_9(acc),
            [107, 117, 110, 105, 115, 97, 107, 105] => lookup_1433_73_10(acc),
            [107, 97, 109, 105, 116, 115, 117, 101] => lookup_1433_73_11(acc),
            [111, 105, 116, 97] => lookup_1433_73_12(acc),
            [117, 115, 97] => lookup_1433_73_13(acc),
            [98, 117, 110, 103, 111, 111, 110, 111] => lookup_1433_73_14(acc),
            [121, 117, 102, 117] => lookup_1433_73_15(acc),
            [104, 105, 116, 97] => lookup_1433_73_16(acc),
            [116, 97, 107, 101, 116, 97] => lookup_1433_73_17(acc),
            [107, 117, 106, 117] => lookup_1433_73_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_76<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 104, 100, 97] => lookup_1433_76_0(acc),
            [103, 111, 116, 115, 117] => lookup_1433_76_1(acc),
            [107, 97, 107, 105, 110, 111, 107, 105] => lookup_1433_76_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117, 109, 111] => lookup_1433_76_3(acc),
            [111, 107, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_1433_76_4(acc),
            [121, 97, 107, 117, 109, 111] => lookup_1433_76_5(acc),
            [109, 105, 115, 97, 116, 111] => lookup_1433_76_6(acc),
            [121, 97, 115, 117, 103, 105] => lookup_1433_76_7(acc),
            [109, 97, 115, 117, 100, 97] => lookup_1433_76_8(acc),
            [104, 97, 109, 97, 100, 97] => lookup_1433_76_9(acc),
            [105, 122, 117, 109, 111] => lookup_1433_76_10(acc),
            [104, 105, 107, 105, 109, 105] => lookup_1433_76_11(acc),
            [117, 110, 110, 97, 110] => lookup_1433_76_12(acc),
            [121, 97, 116, 115, 117, 107, 97] => lookup_1433_76_13(acc),
            [110, 105, 115, 104, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_1433_76_14(acc),
            [97, 107, 97, 103, 105] => lookup_1433_76_15(acc),
            [104, 105, 107, 97, 119, 97] => lookup_1433_76_16(acc),
            [116, 97, 109, 97, 121, 117] => lookup_1433_76_17(acc),
            [97, 109, 97] => lookup_1433_76_18(acc),
            [111, 107, 117, 105, 122, 117, 109, 111] => lookup_1433_76_19(acc),
            [109, 97, 116, 115, 117, 101] => lookup_1433_76_20(acc),
            [116, 115, 117, 119, 97, 110, 111] => lookup_1433_76_21(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_1433_76_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_78<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 111, 99, 104, 105] => lookup_1433_78_0(acc),
            [110, 105, 115, 104, 105, 116, 111, 115, 97] => lookup_1433_78_1(acc),
            [111, 107, 97, 119, 97] => lookup_1433_78_2(acc),
            [117, 109, 97, 106, 105] => lookup_1433_78_3(acc),
            [110, 105, 121, 111, 100, 111, 103, 97, 119, 97] => lookup_1433_78_4(acc),
            [109, 105, 104, 97, 114, 97] => lookup_1433_78_5(acc),
            [110, 97, 107, 97, 109, 117, 114, 97] => lookup_1433_78_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_1433_78_7(acc),
            [116, 111, 121, 111] => lookup_1433_78_8(acc),
            [107, 97, 103, 97, 109, 105] => lookup_1433_78_9(acc),
            [116, 111, 115, 97] => lookup_1433_78_10(acc),
            [109, 117, 114, 111, 116, 111] => lookup_1433_78_11(acc),
            [115, 117, 107, 117, 109, 111] => lookup_1433_78_12(acc),
            [116, 115, 117, 110, 111] => lookup_1433_78_13(acc),
            [107, 97, 109, 105] => lookup_1433_78_14(acc),
            [111, 99, 104, 105] => lookup_1433_78_15(acc),
            [115, 97, 107, 97, 119, 97] => lookup_1433_78_16(acc),
            [105, 110, 111] => lookup_1433_78_17(acc),
            [115, 117, 115, 97, 107, 105] => lookup_1433_78_18(acc),
            [110, 97, 110, 107, 111, 107, 117] => lookup_1433_78_19(acc),
            [104, 105, 100, 97, 107, 97] => lookup_1433_78_20(acc),
            [111, 116, 111, 121, 111] => lookup_1433_78_21(acc),
            [116, 111, 115, 97, 115, 104, 105, 109, 105, 122, 117] => lookup_1433_78_22(acc),
            [121, 117, 115, 117, 104, 97, 114, 97] => lookup_1433_78_23(acc),
            [104, 105, 103, 97, 115, 104, 105, 116, 115, 117, 110, 111] => lookup_1433_78_24(acc),
            [103, 101, 105, 115, 101, 105] => lookup_1433_78_25(acc),
            [109, 111, 116, 111, 121, 97, 109, 97] => lookup_1433_78_26(acc),
            [97, 107, 105] => lookup_1433_78_27(acc),
            [111, 116, 115, 117, 107, 105] => lookup_1433_78_28(acc),
            [110, 97, 104, 97, 114, 105] => lookup_1433_78_29(acc),
            [121, 97, 115, 117, 100, 97] => lookup_1433_78_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_79<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97, 103, 97] => lookup_1433_79_0(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_1433_79_1(acc),
            [107, 105, 116, 97, 104, 97, 116, 97] => lookup_1433_79_2(acc),
            [111, 103, 105] => lookup_1433_79_3(acc),
            [107, 97, 110, 122, 97, 107, 105] => lookup_1433_79_4(acc),
            [105, 109, 97, 114, 105] => lookup_1433_79_5(acc),
            [111, 109, 97, 99, 104, 105] => lookup_1433_79_6(acc),
            [97, 114, 105, 97, 107, 101] => lookup_1433_79_7(acc),
            [107, 111, 117, 104, 111, 107, 117] => lookup_1433_79_8(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_1433_79_9(acc),
            [116, 97, 107, 117] => lookup_1433_79_10(acc),
            [102, 117, 107, 117, 100, 111, 109, 105] => lookup_1433_79_11(acc),
            [104, 105, 122, 101, 110] => lookup_1433_79_12(acc),
            [116, 97, 114, 97] => lookup_1433_79_13(acc),
            [116, 111, 115, 117] => lookup_1433_79_14(acc),
            [110, 105, 115, 104, 105, 97, 114, 105, 116, 97] => lookup_1433_79_15(acc),
            [107, 105, 121, 97, 109, 97] => lookup_1433_79_16(acc),
            [103, 101, 110, 107, 97, 105] => lookup_1433_79_17(acc),
            [107, 97, 114, 97, 116, 115, 117] => lookup_1433_79_18(acc),
            [121, 111, 115, 104, 105, 110, 111, 103, 97, 114, 105] => lookup_1433_79_19(acc),
            [107, 97, 109, 105, 109, 105, 110, 101] => lookup_1433_79_20(acc),
            [97, 114, 105, 116, 97] => lookup_1433_79_21(acc),
            [111, 117, 99, 104, 105] => lookup_1433_79_22(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_1433_79_23(acc),
            [104, 97, 109, 97, 116, 97, 109, 97] => lookup_1433_79_24(acc),
            [107, 121, 117, 114, 97, 103, 105] => lookup_1433_79_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_80_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_80<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 107, 105] => lookup_1433_80_0(acc),
            [111, 109, 117, 114, 97] => lookup_1433_80_1(acc),
            [117, 110, 122, 101, 110] => lookup_1433_80_2(acc),
            [115, 97, 105, 107, 97, 105] => lookup_1433_80_3(acc),
            [104, 97, 115, 97, 109, 105] => lookup_1433_80_4(acc),
            [115, 104, 105, 109, 97, 98, 97, 114, 97] => lookup_1433_80_5(acc),
            [111, 115, 101, 116, 111] => lookup_1433_80_6(acc),
            [102, 117, 116, 115, 117] => lookup_1433_80_7(acc),
            [99, 104, 105, 106, 105, 119, 97] => lookup_1433_80_8(acc),
            [103, 111, 116, 111] => lookup_1433_80_9(acc),
            [104, 105, 114, 97, 100, 111] => lookup_1433_80_10(acc),
            [115, 104, 105, 110, 107, 97, 109, 105, 103, 111, 116, 111] => lookup_1433_80_11(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_1433_80_12(acc),
            [111, 98, 97, 109, 97] => lookup_1433_80_13(acc),
            [107, 117, 99, 104, 105, 110, 111, 116, 115, 117] => lookup_1433_80_14(acc),
            [115, 101, 105, 104, 105] => lookup_1433_80_15(acc),
            [116, 111, 103, 105, 116, 115, 117] => lookup_1433_80_16(acc),
            [109, 97, 116, 115, 117, 117, 114, 97] => lookup_1433_80_17(acc),
            [115, 97, 115, 101, 98, 111] => lookup_1433_80_18(acc),
            [105, 115, 97, 104, 97, 121, 97] => lookup_1433_80_19(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_1433_80_20(acc),
            [107, 97, 119, 97, 116, 97, 110, 97] => lookup_1433_80_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_84<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 104, 111, 107, 117] => lookup_1433_84_0(acc),
            [107, 97, 110, 97, 122, 97, 119, 97] => lookup_1433_84_1(acc),
            [110, 97, 107, 97, 110, 111, 116, 111] => lookup_1433_84_2(acc),
            [116, 115, 117, 98, 97, 116, 97] => lookup_1433_84_3(acc),
            [110, 97, 110, 97, 111] => lookup_1433_84_4(acc),
            [115, 104, 105, 107, 97] => lookup_1433_84_5(acc),
            [110, 111, 110, 111, 105, 99, 104, 105] => lookup_1433_84_6(acc),
            [107, 97, 103, 97] => lookup_1433_84_7(acc),
            [104, 97, 107, 117, 105] => lookup_1433_84_8(acc),
            [115, 117, 122, 117] => lookup_1433_84_9(acc),
            [104, 97, 107, 117, 115, 97, 110] => lookup_1433_84_10(acc),
            [107, 97, 119, 97, 107, 105, 116, 97] => lookup_1433_84_11(acc),
            [97, 110, 97, 109, 105, 122, 117] => lookup_1433_84_12(acc),
            [116, 115, 117, 114, 117, 103, 105] => lookup_1433_84_13(acc),
            [110, 111, 109, 105] => lookup_1433_84_14(acc),
            [117, 99, 104, 105, 110, 97, 100, 97] => lookup_1433_84_15(acc),
            [110, 111, 116, 111] => lookup_1433_84_16(acc),
            [107, 111, 109, 97, 116, 115, 117] => lookup_1433_84_17(acc),
            [119, 97, 106, 105, 109, 97] => lookup_1433_84_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_86_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_86_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_86<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_1433_86_1(acc),
            wild => lookup_1433_86_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_87_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_87_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_87<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_1433_87_1(acc),
            wild => lookup_1433_87_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_91<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 109, 97, 109, 117, 114, 97] => lookup_1433_91_0(acc),
            [109, 101, 105, 119, 97] => lookup_1433_91_1(acc),
            [110, 117, 109, 97, 116, 97] => lookup_1433_91_2(acc),
            [115, 104, 111, 119, 97] => lookup_1433_91_3(acc),
            [107, 97, 116, 97, 115, 104, 105, 110, 97] => lookup_1433_91_4(acc),
            [116, 111, 109, 105, 111, 107, 97] => lookup_1433_91_5(acc),
            [107, 105, 114, 121, 117] => lookup_1433_91_6(acc),
            [102, 117, 106, 105, 111, 107, 97] => lookup_1433_91_7(acc),
            [115, 104, 105, 110, 116, 111] => lookup_1433_91_8(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_1433_91_9(acc),
            [111, 105, 122, 117, 109, 105] => lookup_1433_91_10(acc),
            [104, 105, 103, 97, 115, 104, 105, 97, 103, 97, 116, 115, 117, 109, 97] => {
                lookup_1433_91_11(acc)
            }
            [105, 116, 97, 107, 117, 114, 97] => lookup_1433_91_12(acc),
            [107, 97, 110, 114, 97] => lookup_1433_91_13(acc),
            [116, 115, 117, 107, 105, 121, 111, 110, 111] => lookup_1433_91_14(acc),
            [110, 97, 103, 97, 110, 111, 104, 97, 114, 97] => lookup_1433_91_15(acc),
            [109, 105, 100, 111, 114, 105] => lookup_1433_91_16(acc),
            [97, 110, 110, 97, 107, 97] => lookup_1433_91_17(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_1433_91_18(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_1433_91_19(acc),
            [110, 97, 110, 109, 111, 107, 117] => lookup_1433_91_20(acc),
            [115, 104, 105, 98, 117, 107, 97, 119, 97] => lookup_1433_91_21(acc),
            [107, 97, 119, 97, 98, 97] => lookup_1433_91_22(acc),
            [117, 101, 110, 111] => lookup_1433_91_23(acc),
            [109, 97, 101, 98, 97, 115, 104, 105] => lookup_1433_91_24(acc),
            [110, 97, 107, 97, 110, 111, 106, 111] => lookup_1433_91_25(acc),
            [116, 97, 116, 101, 98, 97, 121, 97, 115, 104, 105] => lookup_1433_91_26(acc),
            [116, 97, 107, 97, 115, 97, 107, 105] => lookup_1433_91_27(acc),
            [111, 116, 97] => lookup_1433_91_28(acc),
            [121, 111, 115, 104, 105, 111, 107, 97] => lookup_1433_91_29(acc),
            [111, 114, 97] => lookup_1433_91_30(acc),
            [109, 105, 110, 97, 107, 97, 109, 105] => lookup_1433_91_31(acc),
            [115, 104, 105, 109, 111, 110, 105, 116, 97] => lookup_1433_91_32(acc),
            [105, 115, 101, 115, 97, 107, 105] => lookup_1433_91_33(acc),
            [107, 97, 110, 110, 97] => lookup_1433_91_34(acc),
            [116, 115, 117, 109, 97, 103, 111, 105] => lookup_1433_91_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_97<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 110, 106, 121, 111] => lookup_1433_97_0(acc),
            [110, 111, 115, 104, 105, 114, 111] => lookup_1433_97_1(acc),
            [111, 100, 97, 116, 101] => lookup_1433_97_2(acc),
            [107, 121, 111, 119, 97] => lookup_1433_97_3(acc),
            [110, 105, 107, 97, 104, 111] => lookup_1433_97_4(acc),
            [107, 97, 109, 105, 107, 111, 97, 110, 105] => lookup_1433_97_5(acc),
            [115, 101, 109, 98, 111, 107, 117] => lookup_1433_97_6(acc),
            [121, 111, 107, 111, 116, 101] => lookup_1433_97_7(acc),
            [121, 117, 114, 105, 104, 111, 110, 106, 111] => lookup_1433_97_8(acc),
            [105, 107, 97, 119, 97] => lookup_1433_97_9(acc),
            [109, 105, 115, 97, 116, 111] => lookup_1433_97_10(acc),
            [104, 111, 110, 106, 111] => lookup_1433_97_11(acc),
            [102, 117, 106, 105, 115, 97, 116, 111] => lookup_1433_97_12(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 97, 114, 117, 115, 101] => {
                lookup_1433_97_13(acc)
            }
            [107, 97, 122, 117, 110, 111] => lookup_1433_97_14(acc),
            [104, 97, 99, 104, 105, 114, 111, 103, 97, 116, 97] => lookup_1433_97_15(acc),
            [107, 105, 116, 97, 97, 107, 105, 116, 97] => lookup_1433_97_16(acc),
            [109, 105, 116, 97, 110, 101] => lookup_1433_97_17(acc),
            [109, 111, 114, 105, 121, 111, 115, 104, 105] => lookup_1433_97_18(acc),
            [111, 103, 97] => lookup_1433_97_19(acc),
            [103, 111, 106, 111, 109, 101] => lookup_1433_97_20(acc),
            [111, 103, 97, 116, 97] => lookup_1433_97_21(acc),
            [107, 111, 115, 97, 107, 97] => lookup_1433_97_22(acc),
            [104, 97, 112, 112, 111, 117] => lookup_1433_97_23(acc),
            [107, 97, 109, 105, 111, 107, 97] => lookup_1433_97_24(acc),
            [107, 97, 116, 97, 103, 97, 109, 105] => lookup_1433_97_25(acc),
            [97, 107, 105, 116, 97] => lookup_1433_97_26(acc),
            [100, 97, 105, 115, 101, 110] => lookup_1433_97_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_98_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_98<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 97, 103, 105] => lookup_1433_98_0(acc),
            [109, 105, 116, 111, 117] => lookup_1433_98_1(acc),
            [110, 97, 103, 97, 116, 111] => lookup_1433_98_2(acc),
            [116, 97, 98, 117, 115, 101] => lookup_1433_98_3(acc),
            [121, 117, 117] => lookup_1433_98_4(acc),
            [104, 105, 107, 97, 114, 105] => lookup_1433_98_5(acc),
            [116, 111, 107, 117, 121, 97, 109, 97] => lookup_1433_98_6(acc),
            [117, 98, 101] => lookup_1433_98_7(acc),
            [115, 104, 105, 109, 111, 110, 111, 115, 101, 107, 105] => lookup_1433_98_8(acc),
            [105, 119, 97, 107, 117, 110, 105] => lookup_1433_98_9(acc),
            [97, 98, 117] => lookup_1433_98_10(acc),
            [116, 111, 121, 111, 116, 97] => lookup_1433_98_11(acc),
            [115, 104, 117, 110, 97, 110] => lookup_1433_98_12(acc),
            [111, 115, 104, 105, 109, 97] => lookup_1433_98_13(acc),
            [107, 117, 100, 97, 109, 97, 116, 115, 117] => lookup_1433_98_14(acc),
            [104, 111, 102, 117] => lookup_1433_98_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_101_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_101_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_101<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_1433_101_1(acc),
            wild => lookup_1433_101_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_103<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 116, 115, 117] => lookup_1433_103_0(acc),
            [110, 97, 103, 97, 104, 97, 109, 97] => lookup_1433_103_1(acc),
            [110, 105, 115, 104, 105, 97, 122, 97, 105] => lookup_1433_103_2(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_1433_103_3(acc),
            [97, 105, 115, 104, 111] => lookup_1433_103_4(acc),
            [121, 97, 115, 117] => lookup_1433_103_5(acc),
            [107, 111, 115, 101, 105] => lookup_1433_103_6(acc),
            [103, 97, 109, 111] => lookup_1433_103_7(acc),
            [104, 105, 107, 111, 110, 101] => lookup_1433_103_8(acc),
            [114, 105, 116, 116, 111] => lookup_1433_103_9(acc),
            [107, 111, 110, 97, 110] => lookup_1433_103_10(acc),
            [109, 97, 105, 98, 97, 114, 97] => lookup_1433_103_11(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 109, 105] => lookup_1433_103_12(acc),
            [114, 121, 117, 111, 104] => lookup_1433_103_13(acc),
            [116, 111, 121, 111, 115, 97, 116, 111] => lookup_1433_103_14(acc),
            [111, 109, 105, 104, 97, 99, 104, 105, 109, 97, 110] => lookup_1433_103_15(acc),
            [107, 111, 116, 111] => lookup_1433_103_16(acc),
            [116, 97, 107, 97, 115, 104, 105, 109, 97] => lookup_1433_103_17(acc),
            [109, 111, 114, 105, 121, 97, 109, 97] => lookup_1433_103_18(acc),
            [116, 111, 114, 97, 104, 105, 109, 101] => lookup_1433_103_19(acc),
            [110, 111, 116, 111, 103, 97, 119, 97] => lookup_1433_103_20(acc),
            [107, 111, 107, 97] => lookup_1433_103_21(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_1433_103_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_109<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 97, 115, 104, 105, 109, 111, 116, 111] => lookup_1433_109_0(acc),
            [121, 117, 97, 115, 97] => lookup_1433_109_1(acc),
            [107, 117, 100, 111, 121, 97, 109, 97] => lookup_1433_109_2(acc),
            [107, 97, 105, 110, 97, 110] => lookup_1433_109_3(acc),
            [109, 105, 104, 97, 109, 97] => lookup_1433_109_4(acc),
            [107, 111, 121, 97] => lookup_1433_109_5(acc),
            [109, 105, 115, 97, 116, 111] => lookup_1433_109_6(acc),
            [116, 97, 110, 97, 98, 101] => lookup_1433_109_7(acc),
            [116, 97, 105, 106, 105] => lookup_1433_109_8(acc),
            [115, 104, 105, 114, 97, 104, 97, 109, 97] => lookup_1433_109_9(acc),
            [107, 105, 110, 111, 107, 97, 119, 97] => lookup_1433_109_10(acc),
            [115, 104, 105, 110, 103, 117] => lookup_1433_109_11(acc),
            [110, 97, 99, 104, 105, 107, 97, 116, 115, 117, 117, 114, 97] => {
                lookup_1433_109_12(acc)
            }
            [107, 105, 116, 97, 121, 97, 109, 97] => lookup_1433_109_13(acc),
            [107, 117, 115, 104, 105, 109, 111, 116, 111] => lookup_1433_109_14(acc),
            [103, 111, 98, 111] => lookup_1433_109_15(acc),
            [97, 114, 105, 100, 97] => lookup_1433_109_16(acc),
            [104, 105, 100, 97, 107, 97] => lookup_1433_109_17(acc),
            [104, 105, 114, 111, 103, 97, 119, 97] => lookup_1433_109_18(acc),
            [107, 105, 109, 105, 110, 111] => lookup_1433_109_19(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_1433_109_20(acc),
            [97, 114, 105, 100, 97, 103, 97, 119, 97] => lookup_1433_109_21(acc),
            [107, 111, 122, 97] => lookup_1433_109_22(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_1433_109_23(acc),
            [105, 110, 97, 109, 105] => lookup_1433_109_24(acc),
            [121, 117, 114, 97] => lookup_1433_109_25(acc),
            [107, 111, 122, 97, 103, 97, 119, 97] => lookup_1433_109_26(acc),
            [105, 119, 97, 100, 101] => lookup_1433_109_27(acc),
            [107, 97, 109, 105, 116, 111, 110, 100, 97] => lookup_1433_109_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_111<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111, 122, 97, 119, 97] => lookup_1433_111_0(acc),
            [115, 104, 105, 114, 97, 116, 97, 107, 97] => lookup_1433_111_1(acc),
            [109, 97, 109, 117, 114, 111, 103, 97, 119, 97] => lookup_1433_111_2(acc),
            [121, 111, 110, 101, 122, 97, 119, 97] => lookup_1433_111_3(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_1433_111_4(acc),
            [110, 97, 107, 97, 121, 97, 109, 97] => lookup_1433_111_5(acc),
            [116, 115, 117, 114, 117, 111, 107, 97] => lookup_1433_111_6(acc),
            [110, 97, 110, 121, 111] => lookup_1433_111_7(acc),
            [115, 104, 105, 110, 106, 111] => lookup_1433_111_8(acc),
            [110, 105, 115, 104, 105, 107, 97, 119, 97] => lookup_1433_111_9(acc),
            [111, 103, 117, 110, 105] => lookup_1433_111_10(acc),
            [115, 104, 111, 110, 97, 105] => lookup_1433_111_11(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 101] => lookup_1433_111_12(acc),
            [109, 105, 107, 97, 119, 97] => lookup_1433_111_13(acc),
            [105, 105, 100, 101] => lookup_1433_111_14(acc),
            [107, 97, 109, 105, 110, 111, 121, 97, 109, 97] => lookup_1433_111_15(acc),
            [121, 97, 109, 97, 110, 111, 98, 101] => lookup_1433_111_16(acc),
            [107, 97, 104, 111, 107, 117] => lookup_1433_111_17(acc),
            [111, 105, 115, 104, 105, 100, 97] => lookup_1433_111_18(acc),
            [97, 115, 97, 104, 105] => lookup_1433_111_19(acc),
            [110, 97, 103, 97, 105] => lookup_1433_111_20(acc),
            [115, 97, 107, 101, 103, 97, 119, 97] => lookup_1433_111_21(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_1433_111_22(acc),
            [102, 117, 110, 97, 103, 97, 116, 97] => lookup_1433_111_23(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_1433_111_24(acc),
            [111, 104, 107, 117, 114, 97] => lookup_1433_111_25(acc),
            [116, 101, 110, 100, 111] => lookup_1433_111_26(acc),
            [121, 117, 122, 97] => lookup_1433_111_27(acc),
            [115, 97, 107, 97, 116, 97] => lookup_1433_111_28(acc),
            [109, 117, 114, 97, 121, 97, 109, 97] => lookup_1433_111_29(acc),
            [111, 101] => lookup_1433_111_30(acc),
            [116, 97, 107, 97, 104, 97, 116, 97] => lookup_1433_111_31(acc),
            [111, 98, 97, 110, 97, 122, 97, 119, 97] => lookup_1433_111_32(acc),
            [115, 97, 103, 97, 101] => lookup_1433_111_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_112_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_112<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 105, 119, 97] => lookup_1433_112_0(acc),
            [110, 105, 115, 104, 105, 97, 119, 97, 107, 117, 114, 97] => lookup_1433_112_1(acc),
            [110, 105, 105, 109, 105] => lookup_1433_112_2(acc),
            [107, 97, 115, 97, 111, 107, 97] => lookup_1433_112_3(acc),
            [116, 97, 107, 97, 104, 97, 115, 104, 105] => lookup_1433_112_4(acc),
            [109, 105, 115, 97, 107, 105] => lookup_1433_112_5(acc),
            [104, 97, 121, 97, 115, 104, 105, 109, 97] => lookup_1433_112_6(acc),
            [115, 101, 116, 111, 117, 99, 104, 105] => lookup_1433_112_7(acc),
            [119, 97, 107, 101] => lookup_1433_112_8(acc),
            [115, 111, 106, 97] => lookup_1433_112_9(acc),
            [121, 97, 107, 97, 103, 101] => lookup_1433_112_10(acc),
            [115, 104, 105, 110, 106, 111] => lookup_1433_112_11(acc),
            [115, 104, 111, 111] => lookup_1433_112_12(acc),
            [105, 98, 97, 114, 97] => lookup_1433_112_13(acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_1433_112_14(acc),
            [107, 117, 114, 97, 115, 104, 105, 107, 105] => lookup_1433_112_15(acc),
            [116, 115, 117, 121, 97, 109, 97] => lookup_1433_112_16(acc),
            [116, 97, 109, 97, 110, 111] => lookup_1433_112_17(acc),
            [110, 97, 103, 105] => lookup_1433_112_18(acc),
            [115, 97, 116, 111, 115, 104, 111] => lookup_1433_112_19(acc),
            [98, 105, 122, 101, 110] => lookup_1433_112_20(acc),
            [107, 105, 98, 105, 99, 104, 117, 111] => lookup_1433_112_21(acc),
            [109, 97, 110, 105, 119, 97] => lookup_1433_112_22(acc),
            [97, 115, 97, 107, 117, 99, 104, 105] => lookup_1433_112_23(acc),
            [107, 117, 109, 101, 110, 97, 110] => lookup_1433_112_24(acc),
            [107, 97, 103, 97, 109, 105, 110, 111] => lookup_1433_112_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_121<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 111, 102, 117] => lookup_1433_121_0(acc),
            [105, 110, 97, 103, 105] => lookup_1433_121_1(acc),
            [109, 117, 115, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_1433_121_2(acc)
            }
            [115, 101, 116, 97, 103, 97, 121, 97] => lookup_1433_121_3(acc),
            [107, 111, 117, 122, 117, 115, 104, 105, 109, 97] => lookup_1433_121_4(acc),
            [104, 97, 109, 117, 114, 97] => lookup_1433_121_5(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_1433_121_6(acc),
            [116, 97, 109, 97] => lookup_1433_121_7(acc),
            [116, 97, 99, 104, 105, 107, 97, 119, 97] => lookup_1433_121_8(acc),
            [99, 104, 117, 111] => lookup_1433_121_9(acc),
            [115, 117, 109, 105, 100, 97] => lookup_1433_121_10(acc),
            [101, 100, 111, 103, 97, 119, 97] => lookup_1433_121_11(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_1433_121_12(acc)
            }
            [97, 111, 103, 97, 115, 104, 105, 109, 97] => lookup_1433_121_13(acc),
            [110, 101, 114, 105, 109, 97] => lookup_1433_121_14(acc),
            [97, 100, 97, 99, 104, 105] => lookup_1433_121_15(acc),
            [97, 107, 105, 115, 104, 105, 109, 97] => lookup_1433_121_16(acc),
            [107, 111, 100, 97, 105, 114, 97] => lookup_1433_121_17(acc),
            [115, 104, 105, 110, 97, 103, 97, 119, 97] => lookup_1433_121_18(acc),
            [107, 105, 116, 97] => lookup_1433_121_19(acc),
            [111, 103, 97, 115, 97, 119, 97, 114, 97] => lookup_1433_121_20(acc),
            [104, 105, 110, 111] => lookup_1433_121_21(acc),
            [110, 97, 107, 97, 110, 111] => lookup_1433_121_22(acc),
            [115, 104, 105, 110, 106, 117, 107, 117] => lookup_1433_121_23(acc),
            [109, 105, 122, 117, 104, 111] => lookup_1433_121_24(acc),
            [102, 117, 115, 115, 97] => lookup_1433_121_25(acc),
            [107, 111, 103, 97, 110, 101, 105] => lookup_1433_121_26(acc),
            [98, 117, 110, 107, 121, 111] => lookup_1433_121_27(acc),
            [111, 115, 104, 105, 109, 97] => lookup_1433_121_28(acc),
            [109, 101, 103, 117, 114, 111] => lookup_1433_121_29(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97, 116, 111] => {
                lookup_1433_121_30(acc)
            }
            [102, 117, 99, 104, 117] => lookup_1433_121_31(acc),
            [104, 97, 99, 104, 105, 106, 111] => lookup_1433_121_32(acc),
            [105, 116, 97, 98, 97, 115, 104, 105] => lookup_1433_121_33(acc),
            [111, 107, 117, 116, 97, 109, 97] => lookup_1433_121_34(acc),
            [107, 111, 116, 111] => lookup_1433_121_35(acc),
            [107, 117, 110, 105, 116, 97, 99, 104, 105] => lookup_1433_121_36(acc),
            [116, 97, 105, 116, 111] => lookup_1433_121_37(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_1433_121_38(acc),
            [109, 105, 110, 97, 116, 111] => lookup_1433_121_39(acc),
            [107, 97, 116, 115, 117, 115, 104, 105, 107, 97] => lookup_1433_121_40(acc),
            [111, 109, 101] => lookup_1433_121_41(acc),
            [116, 111, 115, 104, 105, 109, 97] => lookup_1433_121_42(acc),
            [107, 111, 109, 97, 101] => lookup_1433_121_43(acc),
            [115, 117, 103, 105, 110, 97, 109, 105] => lookup_1433_121_44(acc),
            [104, 105, 110, 111, 100, 101] => lookup_1433_121_45(acc),
            [107, 111, 107, 117, 98, 117, 110, 106, 105] => lookup_1433_121_46(acc),
            [109, 117, 115, 97, 115, 104, 105, 110, 111] => lookup_1433_121_47(acc),
            [111, 116, 97] => lookup_1433_121_48(acc),
            [109, 105, 116, 97, 107, 97] => lookup_1433_121_49(acc),
            [97, 107, 105, 114, 117, 110, 111] => lookup_1433_121_50(acc),
            [104, 97, 99, 104, 105, 111, 106, 105] => lookup_1433_121_51(acc),
            [107, 105, 121, 111, 115, 101] => lookup_1433_121_52(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 117, 114, 117, 109, 101] => {
                lookup_1433_121_53(acc)
            }
            [104, 105, 110, 111, 104, 97, 114, 97] => lookup_1433_121_54(acc),
            [115, 104, 105, 98, 117, 121, 97] => lookup_1433_121_55(acc),
            [109, 97, 99, 104, 105, 100, 97] => lookup_1433_121_56(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_125<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 115, 104, 105, 103, 97, 107, 105] => lookup_1433_125_0(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_1433_125_1(acc),
            [110, 97, 110, 106, 111] => lookup_1433_125_2(acc),
            [116, 111, 109, 105, 103, 117, 115, 117, 107, 117] => lookup_1433_125_3(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_1433_125_4(acc),
            [107, 117, 110, 105, 103, 97, 109, 105] => lookup_1433_125_5(acc),
            [107, 97, 100, 101, 110, 97] => lookup_1433_125_6(acc),
            [116, 111, 110, 97, 107, 105] => lookup_1433_125_7(acc),
            [115, 104, 105, 109, 111, 106, 105] => lookup_1433_125_8(acc),
            [109, 111, 116, 111, 98, 117] => lookup_1433_125_9(acc),
            [104, 105, 114, 97, 114, 97] => lookup_1433_125_10(acc),
            [110, 97, 104, 97] => lookup_1433_125_11(acc),
            [121, 111, 110, 97, 98, 97, 114, 117] => lookup_1433_125_12(acc),
            [103, 105, 110, 111, 119, 97, 110] => lookup_1433_125_13(acc),
            [109, 105, 110, 97, 109, 105, 100, 97, 105, 116, 111] => lookup_1433_125_14(acc),
            [105, 122, 101, 110, 97] => lookup_1433_125_15(acc),
            [122, 97, 109, 97, 109, 105] => lookup_1433_125_16(acc),
            [104, 97, 101, 98, 97, 114, 117] => lookup_1433_125_17(acc),
            [103, 105, 110, 111, 122, 97] => lookup_1433_125_18(acc),
            [117, 114, 117, 109, 97] => lookup_1433_125_19(acc),
            [107, 105, 116, 97, 110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => {
                lookup_1433_125_20(acc)
            }
            [121, 111, 109, 105, 116, 97, 110] => lookup_1433_125_21(acc),
            [110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => lookup_1433_125_22(acc),
            [107, 105, 110] => lookup_1433_125_23(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_1433_125_24(acc),
            [107, 117, 109, 101, 106, 105, 109, 97] => lookup_1433_125_25(acc),
            [117, 114, 97, 115, 111, 101] => lookup_1433_125_26(acc),
            [110, 97, 107, 105, 106, 105, 110] => lookup_1433_125_27(acc),
            [116, 97, 114, 97, 109, 97] => lookup_1433_125_28(acc),
            [116, 111, 107, 97, 115, 104, 105, 107, 105] => lookup_1433_125_29(acc),
            [105, 104, 101, 121, 97] => lookup_1433_125_30(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_1433_125_31(acc),
            [107, 105, 116, 97, 100, 97, 105, 116, 111] => lookup_1433_125_32(acc),
            [111, 103, 105, 109, 105] => lookup_1433_125_33(acc),
            [103, 117, 115, 104, 105, 107, 97, 109, 105] => lookup_1433_125_34(acc),
            [116, 97, 107, 101, 116, 111, 109, 105] => lookup_1433_125_35(acc),
            [121, 97, 101, 115, 101] => lookup_1433_125_36(acc),
            [97, 103, 117, 110, 105] => lookup_1433_125_37(acc),
            [105, 116, 111, 109, 97, 110] => lookup_1433_125_38(acc),
            [110, 97, 103, 111] => lookup_1433_125_39(acc),
            [111, 110, 110, 97] => lookup_1433_125_40(acc),
            [121, 111, 110, 97, 103, 117, 110, 105] => lookup_1433_125_41(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_126_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_126<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111, 98, 101] => lookup_1433_126_0(acc),
            [121, 97, 119, 97, 116, 97, 104, 97, 109, 97] => lookup_1433_126_1(acc),
            [115, 101, 105, 121, 111] => lookup_1433_126_2(acc),
            [104, 111, 110, 97, 105] => lookup_1433_126_3(acc),
            [109, 97, 116, 115, 117, 110, 111] => lookup_1433_126_4(acc),
            [111, 122, 117] => lookup_1433_126_5(acc),
            [97, 105, 110, 97, 110] => lookup_1433_126_6(acc),
            [116, 111, 111, 110] => lookup_1433_126_7(acc),
            [105, 109, 97, 98, 97, 114, 105] => lookup_1433_126_8(acc),
            [117, 99, 104, 105, 107, 111] => lookup_1433_126_9(acc),
            [109, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_1433_126_10(acc),
            [110, 97, 109, 105, 107, 97, 116, 97] => lookup_1433_126_11(acc),
            [107, 105, 104, 111, 107, 117] => lookup_1433_126_12(acc),
            [115, 97, 105, 106, 111] => lookup_1433_126_13(acc),
            [110, 105, 105, 104, 97, 109, 97] => lookup_1433_126_14(acc),
            [115, 104, 105, 107, 111, 107, 117, 99, 104, 117, 111] => lookup_1433_126_15(acc),
            [117, 119, 97, 106, 105, 109, 97] => lookup_1433_126_16(acc),
            [109, 97, 115, 97, 107, 105] => lookup_1433_126_17(acc),
            [105, 107, 97, 116, 97] => lookup_1433_126_18(acc),
            [107, 97, 109, 105, 106, 105, 109, 97] => lookup_1433_126_19(acc),
            [105, 121, 111] => lookup_1433_126_20(acc),
            [107, 117, 109, 97, 107, 111, 103, 101, 110] => lookup_1433_126_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_127_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_127<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101, 105, 119, 97] => lookup_1433_127_0(acc),
            [105, 110, 97, 98, 101] => lookup_1433_127_1(acc),
            [109, 105, 104, 97, 109, 97] => lookup_1433_127_2(acc),
            [117, 100, 111, 110, 111] => lookup_1433_127_3(acc),
            [107, 105, 119, 97] => lookup_1433_127_4(acc),
            [107, 105, 115, 111, 115, 97, 107, 105] => lookup_1433_127_5(acc),
            [116, 97, 105, 107, 105] => lookup_1433_127_6(acc),
            [121, 111, 107, 107, 97, 105, 99, 104, 105] => lookup_1433_127_7(acc),
            [116, 97, 107, 105] => lookup_1433_127_8(acc),
            [110, 97, 98, 97, 114, 105] => lookup_1433_127_9(acc),
            [117, 114, 101, 115, 104, 105, 110, 111] => lookup_1433_127_10(acc),
            [109, 105, 121, 97, 109, 97] => lookup_1433_127_11(acc),
            [109, 105, 115, 117, 103, 105] => lookup_1433_127_12(acc),
            [107, 97, 109, 101, 121, 97, 109, 97] => lookup_1433_127_13(acc),
            [107, 117, 119, 97, 110, 97] => lookup_1433_127_14(acc),
            [97, 115, 97, 104, 105] => lookup_1433_127_15(acc),
            [105, 115, 101] => lookup_1433_127_16(acc),
            [119, 97, 116, 97, 114, 97, 105] => lookup_1433_127_17(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_1433_127_18(acc),
            [115, 117, 122, 117, 107, 97] => lookup_1433_127_19(acc),
            [107, 105, 104, 111] => lookup_1433_127_20(acc),
            [116, 97, 109, 97, 107, 105] => lookup_1433_127_21(acc),
            [116, 111, 98, 97] => lookup_1433_127_22(acc),
            [107, 117, 109, 97, 110, 111] => lookup_1433_127_23(acc),
            [115, 104, 105, 109, 97] => lookup_1433_127_24(acc),
            [109, 105, 110, 97, 109, 105, 105, 115, 101] => lookup_1433_127_25(acc),
            [107, 111, 109, 111, 110, 111] => lookup_1433_127_26(acc),
            [116, 115, 117] => lookup_1433_127_27(acc),
            [116, 97, 100, 111] => lookup_1433_127_28(acc),
            [109, 97, 116, 115, 117, 115, 97, 107, 97] => lookup_1433_127_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_130<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111, 110, 111, 115, 104, 111] => lookup_1433_130_0(acc),
            [117, 99, 104, 105, 110, 111, 109, 105] => lookup_1433_130_1(acc),
            [117, 116, 97, 122, 117] => lookup_1433_130_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 97, 119, 97] => lookup_1433_130_3(acc),
            [116, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_1433_130_4(acc),
            [115, 97, 110, 117, 107, 105] => lookup_1433_130_5(acc),
            [107, 97, 110, 111, 110, 106, 105] => lookup_1433_130_6(acc),
            [122, 101, 110, 116, 115, 117, 106, 105] => lookup_1433_130_7(acc),
            [109, 97, 114, 117, 103, 97, 109, 101] => lookup_1433_130_8(acc),
            [109, 105, 116, 111, 121, 111] => lookup_1433_130_9(acc),
            [109, 97, 110, 110, 111] => lookup_1433_130_10(acc),
            [107, 111, 116, 111, 104, 105, 114, 97] => lookup_1433_130_11(acc),
            [116, 97, 100, 111, 116, 115, 117] => lookup_1433_130_12(acc),
            [97, 121, 97, 103, 97, 119, 97] => lookup_1433_130_13(acc),
            [110, 97, 111, 115, 104, 105, 109, 97] => lookup_1433_130_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_132<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 105, 119, 97] => lookup_1433_132_0(acc),
            [111, 116, 115, 117, 99, 104, 105] => lookup_1433_132_1(acc),
            [109, 105, 122, 117, 115, 97, 119, 97] => lookup_1433_132_2(acc),
            [111, 115, 104, 117] => lookup_1433_132_3(acc),
            [105, 99, 104, 105, 110, 111, 115, 101, 107, 105] => lookup_1433_132_4(acc),
            [104, 97, 110, 97, 109, 97, 107, 105] => lookup_1433_132_5(acc),
            [121, 97, 109, 97, 100, 97] => lookup_1433_132_6(acc),
            [104, 105, 114, 97, 105, 122, 117, 109, 105] => lookup_1433_132_7(acc),
            [107, 117, 110, 111, 104, 101] => lookup_1433_132_8(acc),
            [110, 111, 100, 97] => lookup_1433_132_9(acc),
            [105, 119, 97, 116, 101] => lookup_1433_132_10(acc),
            [107, 105, 116, 97, 107, 97, 109, 105] => lookup_1433_132_11(acc),
            [115, 104, 105, 122, 117, 107, 117, 105, 115, 104, 105] => lookup_1433_132_12(acc),
            [107, 97, 109, 97, 105, 115, 104, 105] => lookup_1433_132_13(acc),
            [111, 102, 117, 110, 97, 116, 111] => lookup_1433_132_14(acc),
            [107, 97, 110, 101, 103, 97, 115, 97, 107, 105] => lookup_1433_132_15(acc),
            [115, 117, 109, 105, 116, 97] => lookup_1433_132_16(acc),
            [105, 119, 97, 105, 122, 117, 109, 105] => lookup_1433_132_17(acc),
            [107, 117, 122, 117, 109, 97, 107, 105] => lookup_1433_132_18(acc),
            [121, 97, 104, 97, 98, 97] => lookup_1433_132_19(acc),
            [107, 97, 114, 117, 109, 97, 105] => lookup_1433_132_20(acc),
            [102, 117, 100, 97, 105] => lookup_1433_132_21(acc),
            [109, 105, 121, 97, 107, 111] => lookup_1433_132_22(acc),
            [116, 111, 110, 111] => lookup_1433_132_23(acc),
            [110, 105, 110, 111, 104, 101] => lookup_1433_132_24(acc),
            [106, 111, 98, 111, 106, 105] => lookup_1433_132_25(acc),
            [107, 97, 119, 97, 105] => lookup_1433_132_26(acc),
            [104, 105, 114, 111, 110, 111] => lookup_1433_132_27(acc),
            [107, 117, 106, 105] => lookup_1433_132_28(acc),
            [114, 105, 107, 117, 122, 101, 110, 116, 97, 107, 97, 116, 97] => {
                lookup_1433_132_29(acc)
            }
            [116, 97, 110, 111, 104, 97, 116, 97] => lookup_1433_132_30(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_1433_132_31(acc),
            [105, 99, 104, 105, 110, 111, 104, 101] => lookup_1433_132_32(acc),
            [109, 111, 114, 105, 111, 107, 97] => lookup_1433_132_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_135<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 110, 103, 111] => lookup_1433_135_0(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_1433_135_1(acc),
            [100, 97, 105, 119, 97] => lookup_1433_135_2(acc),
            [110, 97, 107, 97] => lookup_1433_135_3(acc),
            [106, 105, 110, 115, 101, 107, 105, 107, 111, 103, 101, 110] => lookup_1433_135_4(acc),
            [102, 117, 107, 117, 121, 97, 109, 97] => lookup_1433_135_5(acc),
            [109, 105, 104, 97, 114, 97] => lookup_1433_135_6(acc),
            [104, 97, 116, 115, 117, 107, 97, 105, 99, 104, 105] => lookup_1433_135_7(acc),
            [102, 117, 99, 104, 117] => lookup_1433_135_8(acc),
            [111, 116, 97, 107, 101] => lookup_1433_135_9(acc),
            [115, 101, 114, 97, 110, 105, 115, 104, 105] => lookup_1433_135_10(acc),
            [115, 97, 107, 97] => lookup_1433_135_11(acc),
            [107, 117, 109, 97, 110, 111] => lookup_1433_135_12(acc),
            [107, 117, 105] => lookup_1433_135_13(acc),
            [97, 115, 97, 109, 105, 110, 97, 109, 105] => lookup_1433_135_14(acc),
            [101, 116, 97, 106, 105, 109, 97] => lookup_1433_135_15(acc),
            [111, 110, 111, 109, 105, 99, 104, 105] => lookup_1433_135_16(acc),
            [107, 97, 105, 116, 97] => lookup_1433_135_17(acc),
            [115, 101, 114, 97] => lookup_1433_135_18(acc),
            [115, 104, 105, 110, 105, 99, 104, 105] => lookup_1433_135_19(acc),
            [111, 115, 97, 107, 105, 107, 97, 109, 105, 106, 105, 109, 97] => {
                lookup_1433_135_20(acc)
            }
            [115, 104, 111, 98, 97, 114, 97] => lookup_1433_135_21(acc),
            [116, 97, 107, 101, 104, 97, 114, 97] => lookup_1433_135_22(acc),
            [107, 117, 114, 101] => lookup_1433_135_23(acc),
            [104, 105, 103, 97, 115, 104, 105, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_1433_135_24(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_138<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 107, 117, 110, 111, 104, 101] => lookup_1433_138_0(acc),
            [110, 97, 107, 97, 100, 111, 109, 97, 114, 105] => lookup_1433_138_1(acc),
            [104, 105, 114, 111, 115, 97, 107, 105] => lookup_1433_138_2(acc),
            [103, 111, 110, 111, 104, 101] => lookup_1433_138_3(acc),
            [104, 97, 99, 104, 105, 110, 111, 104, 101] => lookup_1433_138_4(acc),
            [111, 119, 97, 110, 105] => lookup_1433_138_5(acc),
            [116, 111, 119, 97, 100, 97] => lookup_1433_138_6(acc),
            [110, 111, 104, 101, 106, 105] => lookup_1433_138_7(acc),
            [104, 97, 115, 104, 105, 107, 97, 109, 105] => lookup_1433_138_8(acc),
            [116, 115, 117, 114, 117, 116, 97] => lookup_1433_138_9(acc),
            [111, 105, 114, 97, 115, 101] => lookup_1433_138_10(acc),
            [109, 105, 115, 97, 119, 97] => lookup_1433_138_11(acc),
            [107, 117, 114, 111, 105, 115, 104, 105] => lookup_1433_138_12(acc),
            [115, 104, 105, 99, 104, 105, 110, 111, 104, 101] => lookup_1433_138_13(acc),
            [115, 97, 110, 110, 111, 104, 101] => lookup_1433_138_14(acc),
            [109, 117, 116, 115, 117] => lookup_1433_138_15(acc),
            [116, 97, 107, 107, 111] => lookup_1433_138_16(acc),
            [104, 105, 114, 97, 110, 97, 105] => lookup_1433_138_17(acc),
            [115, 104, 105, 110, 103, 111] => lookup_1433_138_18(acc),
            [116, 115, 117, 103, 97, 114, 117] => lookup_1433_138_19(acc),
            [105, 116, 97, 121, 97, 110, 97, 103, 105] => lookup_1433_138_20(acc),
            [97, 111, 109, 111, 114, 105] => lookup_1433_138_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_143<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 97, 107, 97, 115, 97] => lookup_1433_143_0(acc),
            [115, 97, 107, 97, 105, 109, 105, 110, 97, 116, 111] => lookup_1433_143_1(acc),
            [121, 111, 110, 97, 103, 111] => lookup_1433_143_2(acc),
            [109, 105, 115, 97, 115, 97] => lookup_1433_143_3(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_1433_143_4(acc),
            [121, 97, 122, 117] => lookup_1433_143_5(acc),
            [99, 104, 105, 122, 117] => lookup_1433_143_6(acc),
            [104, 105, 110, 111] => lookup_1433_143_7(acc),
            [107, 97, 119, 97, 104, 97, 114, 97] => lookup_1433_143_8(acc),
            [107, 111, 103, 101] => lookup_1433_143_9(acc),
            [110, 97, 110, 98, 117] => lookup_1433_143_10(acc),
            [107, 111, 116, 111, 117, 114, 97] => lookup_1433_143_11(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_1433_143_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_144_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_144<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 103, 111] => lookup_1433_144_0(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_1433_144_1(acc),
            [107, 97, 109, 105, 103, 111, 114, 105] => lookup_1433_144_2(acc),
            [110, 105, 115, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_1433_144_3(acc),
            [105, 116, 97, 109, 105] => lookup_1433_144_4(acc),
            [109, 105, 110, 97, 109, 105, 97, 119, 97, 106, 105] => lookup_1433_144_5(acc),
            [115, 97, 110, 110, 97, 110] => lookup_1433_144_6(acc),
            [115, 97, 115, 97, 121, 97, 109, 97] => lookup_1433_144_7(acc),
            [111, 110, 111] => lookup_1433_144_8(acc),
            [115, 104, 105, 110, 111, 110, 115, 101, 110] => lookup_1433_144_9(acc),
            [116, 97, 105, 115, 104, 105] => lookup_1433_144_10(acc),
            [116, 97, 107, 97] => lookup_1433_144_11(acc),
            [110, 105, 115, 104, 105, 119, 97, 107, 105] => lookup_1433_144_12(acc),
            [116, 97, 107, 97, 115, 97, 103, 111] => lookup_1433_144_13(acc),
            [121, 111, 107, 97, 119, 97] => lookup_1433_144_14(acc),
            [121, 97, 98, 117] => lookup_1433_144_15(acc),
            [97, 111, 103, 97, 107, 105] => lookup_1433_144_16(acc),
            [103, 111, 115, 104, 105, 107, 105] => lookup_1433_144_17(acc),
            [107, 97, 107, 111, 103, 97, 119, 97] => lookup_1433_144_18(acc),
            [97, 119, 97, 106, 105] => lookup_1433_144_19(acc),
            [97, 105, 111, 105] => lookup_1433_144_20(acc),
            [115, 97, 110, 100, 97] => lookup_1433_144_21(acc),
            [116, 97, 107, 97, 114, 97, 122, 117, 107, 97] => lookup_1433_144_22(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_1433_144_23(acc),
            [121, 97, 115, 104, 105, 114, 111] => lookup_1433_144_24(acc),
            [97, 107, 111] => lookup_1433_144_25(acc),
            [115, 104, 105, 110, 103, 117] => lookup_1433_144_26(acc),
            [102, 117, 107, 117, 115, 97, 107, 105] => lookup_1433_144_27(acc),
            [105, 110, 97, 103, 97, 119, 97] => lookup_1433_144_28(acc),
            [104, 105, 109, 101, 106, 105] => lookup_1433_144_29(acc),
            [115, 117, 109, 111, 116, 111] => lookup_1433_144_30(acc),
            [121, 111, 107, 97] => lookup_1433_144_31(acc),
            [116, 97, 109, 98, 97] => lookup_1433_144_32(acc),
            [109, 105, 107, 105] => lookup_1433_144_33(acc),
            [115, 97, 121, 111] => lookup_1433_144_34(acc),
            [107, 97, 115, 117, 103, 97] => lookup_1433_144_35(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_1433_144_36(acc),
            [116, 97, 107, 105, 110, 111] => lookup_1433_144_37(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_1433_144_38(acc),
            [97, 115, 104, 105, 121, 97] => lookup_1433_144_39(acc),
            [97, 107, 97, 115, 104, 105] => lookup_1433_144_40(acc),
            [107, 97, 115, 97, 105] => lookup_1433_144_41(acc),
            [115, 104, 105, 115, 111] => lookup_1433_144_42(acc),
            [116, 111, 121, 111, 111, 107, 97] => lookup_1433_144_43(acc),
            [97, 109, 97, 103, 97, 115, 97, 107, 105] => lookup_1433_144_44(acc),
            [104, 97, 114, 105, 109, 97] => lookup_1433_144_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_146<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 116, 111] => lookup_1433_146_0(acc),
            [117, 115, 117, 105] => lookup_1433_146_1(acc),
            [121, 97, 109, 101] => lookup_1433_146_2(acc),
            [117, 109, 105] => lookup_1433_146_3(acc),
            [117, 107, 105, 104, 97] => lookup_1433_146_4(acc),
            [105, 105, 122, 117, 107, 97] => lookup_1433_146_5(acc),
            [111, 107, 97, 119, 97] => lookup_1433_146_6(acc),
            [121, 97, 109, 97, 100, 97] => lookup_1433_146_7(acc),
            [100, 97, 122, 97, 105, 102, 117] => lookup_1433_146_8(acc),
            [115, 104, 105, 110, 121, 111, 115, 104, 105, 116, 111, 109, 105] => {
                lookup_1433_146_9(acc)
            }
            [107, 97, 119, 97, 114, 97] => lookup_1433_146_10(acc),
            [107, 117, 114, 97, 116, 101] => lookup_1433_146_11(acc),
            [107, 97, 104, 111] => lookup_1433_146_12(acc),
            [109, 105, 122, 117, 109, 97, 107, 105] => lookup_1433_146_13(acc),
            [109, 117, 110, 97, 107, 97, 116, 97] => lookup_1433_146_14(acc),
            [115, 104, 111, 110, 97, 105] => lookup_1433_146_15(acc),
            [99, 104, 117, 111] => lookup_1433_146_16(acc),
            [99, 104, 105, 107, 117, 104, 111] => lookup_1433_146_17(acc),
            [110, 105, 115, 104, 105] => lookup_1433_146_18(acc),
            [121, 117, 107, 117, 104, 97, 115, 104, 105] => lookup_1433_146_19(acc),
            [109, 105, 121, 97, 109, 97] => lookup_1433_146_20(acc),
            [99, 104, 105, 107, 117, 115, 104, 105, 110, 111] => lookup_1433_146_21(acc),
            [115, 104, 105, 110, 103, 117] => lookup_1433_146_22(acc),
            [121, 97, 110, 97, 103, 97, 119, 97] => lookup_1433_146_23(acc),
            [116, 97, 103, 97, 119, 97] => lookup_1433_146_24(acc),
            [116, 97, 107, 97, 116, 97] => lookup_1433_146_25(acc),
            [105, 110, 97, 116, 115, 117, 107, 105] => lookup_1433_146_26(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_1433_146_27(acc),
            [99, 104, 105, 107, 117, 103, 111] => lookup_1433_146_28(acc),
            [107, 117, 114, 111, 103, 105] => lookup_1433_146_29(acc),
            [110, 97, 107, 97, 109, 97] => lookup_1433_146_30(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_1433_146_31(acc),
            [107, 101, 105, 115, 101, 110] => lookup_1433_146_32(acc),
            [104, 105, 114, 111, 107, 97, 119, 97] => lookup_1433_146_33(acc),
            [99, 104, 105, 107, 117, 106, 111] => lookup_1433_146_34(acc),
            [115, 111, 101, 100, 97] => lookup_1433_146_35(acc),
            [104, 105, 115, 97, 121, 97, 109, 97] => lookup_1433_146_36(acc),
            [107, 97, 115, 117, 121, 97] => lookup_1433_146_37(acc),
            [111, 107, 97, 103, 97, 107, 105] => lookup_1433_146_38(acc),
            [115, 97, 105, 103, 97, 119, 97] => lookup_1433_146_39(acc),
            [115, 97, 115, 97, 103, 117, 114, 105] => lookup_1433_146_40(acc),
            [116, 111, 104, 111] => lookup_1433_146_41(acc),
            [104, 97, 107, 97, 116, 97] => lookup_1433_146_42(acc),
            [111, 110, 103, 97] => lookup_1433_146_43(acc),
            [98, 117, 122, 101, 110] => lookup_1433_146_44(acc),
            [116, 97, 99, 104, 105, 97, 114, 97, 105] => lookup_1433_146_45(acc),
            [116, 111, 121, 111, 116, 115, 117] => lookup_1433_146_46(acc),
            [109, 105, 121, 97, 119, 97, 107, 97] => lookup_1433_146_47(acc),
            [115, 117, 101] => lookup_1433_146_48(acc),
            [111, 103, 111, 114, 105] => lookup_1433_146_49(acc),
            [109, 105, 121, 97, 107, 111] => lookup_1433_146_50(acc),
            [116, 115, 117, 105, 107, 105] => lookup_1433_146_51(acc),
            [107, 117, 114, 117, 109, 101] => lookup_1433_146_52(acc),
            [102, 117, 107, 117, 99, 104, 105] => lookup_1433_146_53(acc),
            [109, 105, 110, 97, 109, 105] => lookup_1433_146_54(acc),
            [107, 97, 115, 117, 103, 97] => lookup_1433_146_55(acc),
            [107, 111, 103, 97] => lookup_1433_146_56(acc),
            [111, 109, 117, 116, 97] => lookup_1433_146_57(acc),
            [110, 111, 103, 97, 116, 97] => lookup_1433_146_58(acc),
            [97, 115, 104, 105, 121, 97] => lookup_1433_146_59(acc),
            [99, 104, 105, 107, 117, 122, 101, 110] => lookup_1433_146_60(acc),
            [111, 110, 111, 106, 111] => lookup_1433_146_61(acc),
            [111, 107, 105] => lookup_1433_146_62(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1433_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1433_151_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_151<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97, 116, 115, 117, 109, 97, 115, 101, 110, 100, 97, 105] => {
                lookup_1433_151_0(acc)
            }
            [105, 122, 117, 109, 105] => lookup_1433_151_1(acc),
            [107, 97, 119, 97, 110, 97, 98, 101] => lookup_1433_151_2(acc),
            [97, 109, 97, 109, 105] => lookup_1433_151_3(acc),
            [107, 97, 110, 111, 121, 97] => lookup_1433_151_4(acc),
            [110, 97, 107, 97, 116, 97, 110, 101] => lookup_1433_151_5(acc),
            [110, 105, 115, 104, 105, 110, 111, 111, 109, 111, 116, 101] => lookup_1433_151_6(acc),
            [109, 97, 107, 117, 114, 97, 122, 97, 107, 105] => lookup_1433_151_7(acc),
            [115, 111, 111] => lookup_1433_151_8(acc),
            [105, 115, 101, 110] => lookup_1433_151_9(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_1433_151_10(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_1433_151_11(acc),
            [104, 105, 111, 107, 105] => lookup_1433_151_12(acc),
            [97, 107, 117, 110, 101] => lookup_1433_151_13(acc),
            [109, 105, 110, 97, 109, 105, 116, 97, 110, 101] => lookup_1433_151_14(acc),
            [116, 97, 114, 117, 109, 105, 122, 117] => lookup_1433_151_15(acc),
            [105, 115, 97] => lookup_1433_151_16(acc),
            [121, 117, 115, 117, 105] => lookup_1433_151_17(acc),
            [107, 111, 117, 121, 97, 109, 97] => lookup_1433_151_18(acc),
            [107, 105, 110, 107, 111] => lookup_1433_151_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_156<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 103, 97, 115, 117] => lookup_1433_156_0(acc),
            [111, 122, 117] => lookup_1433_156_1(acc),
            [103, 121, 111, 107, 117, 116, 111] => lookup_1433_156_2(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_1433_156_3(acc),
            [107, 97, 109, 105, 97, 109, 97, 107, 117, 115, 97] => lookup_1433_156_4(acc),
            [97, 115, 111] => lookup_1433_156_5(acc),
            [109, 97, 115, 104, 105, 107, 105] => lookup_1433_156_6(acc),
            [115, 117, 109, 111, 116, 111] => lookup_1433_156_7(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_1433_156_8(acc),
            [97, 114, 97, 111] => lookup_1433_156_9(acc),
            [111, 103, 117, 110, 105] => lookup_1433_156_10(acc),
            [97, 109, 97, 107, 117, 115, 97] => lookup_1433_156_11(acc),
            [117, 116, 111] => lookup_1433_156_12(acc),
            [107, 105, 107, 117, 99, 104, 105] => lookup_1433_156_13(acc),
            [109, 105, 102, 117, 110, 101] => lookup_1433_156_14(acc),
            [99, 104, 111, 121, 111] => lookup_1433_156_15(acc),
            [121, 97, 109, 97, 103, 97] => lookup_1433_156_16(acc),
            [121, 97, 109, 97, 116, 111] => lookup_1433_156_17(acc),
            [109, 105, 110, 97, 109, 97, 116, 97] => lookup_1433_156_18(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_1433_156_19(acc),
            [121, 97, 116, 115, 117, 115, 104, 105, 114, 111] => lookup_1433_156_20(acc),
            [109, 105, 110, 97, 109, 105, 111, 103, 117, 110, 105] => lookup_1433_156_21(acc),
            [117, 107, 105] => lookup_1433_156_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1433_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [230, 132, 155, 229, 170, 155] => lookup_1433_0(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_1433_1(labels, acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_1433_2(labels, acc),
            [233, 157, 153, 229, 178, 161] => lookup_1433_3(acc),
            [229, 177, 177, 229, 143, 163] => lookup_1433_4(acc),
            [97, 100] => lookup_1433_5(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_1433_6(labels, acc),
            [111, 115, 97, 107, 97] => lookup_1433_7(labels, acc),
            [103, 105, 102, 117] => lookup_1433_8(labels, acc),
            [120, 110, 45, 45, 100, 106, 114, 115, 55, 50, 100, 54, 117, 121] => lookup_1433_9(acc),
            [99, 104, 105, 98, 97] => lookup_1433_10(labels, acc),
            [120, 110, 45, 45, 99, 51, 115, 49, 52, 109] => lookup_1433_11(acc),
            [120, 110, 45, 45, 53, 114, 116, 112, 52, 57, 99] => lookup_1433_12(acc),
            [120, 110, 45, 45, 112, 115, 115, 117, 51, 51, 108] => lookup_1433_13(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_1433_14(labels, acc),
            [120, 110, 45, 45, 52, 105, 116, 55, 57, 55, 107] => lookup_1433_15(acc),
            [229, 177, 177, 230, 162, 168] => lookup_1433_16(acc),
            [120, 110, 45, 45, 107, 108, 116, 121, 53, 120] => lookup_1433_17(acc),
            [231, 166, 143, 229, 179, 182] => lookup_1433_18(acc),
            [107, 97, 110, 97, 103, 97, 119, 97] => lookup_1433_19(labels, acc),
            [110, 101] => lookup_1433_20(labels, acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_1433_21(labels, acc),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_1433_22(info, labels, acc),
            [110, 97, 114, 97] => lookup_1433_23(labels, acc),
            [229, 186, 131, 229, 179, 182] => lookup_1433_24(acc),
            [229, 174, 174, 229, 159, 142] => lookup_1433_25(acc),
            [120, 110, 45, 45, 52, 105, 116, 49, 54, 56, 100] => lookup_1433_26(acc),
            [103, 114] => lookup_1433_27(acc),
            [228, 184, 137, 233, 135, 141] => lookup_1433_28(acc),
            [120, 110, 45, 45, 51, 50, 118, 112, 51, 48, 104] => lookup_1433_29(acc),
            [233, 166, 153, 229, 183, 157] => lookup_1433_30(acc),
            [231, 134, 138, 230, 156, 172] => lookup_1433_31(acc),
            [120, 110, 45, 45, 101, 102, 118, 110, 57, 115] => lookup_1433_32(acc),
            [120, 110, 45, 45, 56, 112, 118, 114, 52, 117] => lookup_1433_33(acc),
            [120, 110, 45, 45, 53, 106, 115, 48, 52, 53, 100] => lookup_1433_34(acc),
            [229, 174, 174, 229, 180, 142] => lookup_1433_35(acc),
            [233, 179, 165, 229, 143, 150] => lookup_1433_36(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_1433_37(labels, acc),
            [116, 111, 121, 97, 109, 97] => lookup_1433_38(labels, acc),
            [101, 100] => lookup_1433_39(acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_1433_40(labels, acc),
            [230, 160, 131, 230, 156, 168] => lookup_1433_41(acc),
            [120, 110, 45, 45, 101, 104, 113, 122, 53, 54, 110] => lookup_1433_42(acc),
            [108, 103] => lookup_1433_43(acc),
            [109, 105, 121, 97, 103, 105] => lookup_1433_44(labels, acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 48, 51, 110] => lookup_1433_45(acc),
            [120, 110, 45, 45, 110, 116, 115, 113, 49, 55, 103] => lookup_1433_46(acc),
            [120, 110, 45, 45, 117, 105, 115, 122, 51, 103] => lookup_1433_47(acc),
            [229, 175, 140, 229, 177, 177] => lookup_1433_48(acc),
            [120, 110, 45, 45, 101, 108, 113, 113, 49, 54, 104] => lookup_1433_49(acc),
            [230, 157, 177, 228, 186, 172] => lookup_1433_50(acc),
            [233, 157, 146, 230, 163, 174] => lookup_1433_51(acc),
            [229, 159, 188, 231, 142, 137] => lookup_1433_52(acc),
            [231, 167, 139, 231, 148, 176] => lookup_1433_53(acc),
            [120, 110, 45, 45, 114, 110, 121, 51, 49, 104] => lookup_1433_54(acc),
            [120, 110, 45, 45, 50, 109, 52, 97, 49, 53, 101] => lookup_1433_55(acc),
            [107, 121, 111, 116, 111] => lookup_1433_56(labels, acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_1433_57(info, labels, acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_1433_58(labels, acc),
            [229, 141, 131, 232, 145, 137] => lookup_1433_59(acc),
            [229, 140, 151, 230, 181, 183, 233, 129, 147] => lookup_1433_60(acc),
            [233, 149, 183, 229, 180, 142] => lookup_1433_61(acc),
            [110, 97, 103, 111, 121, 97] => lookup_1433_62(info, labels, acc),
            [102, 117, 107, 117, 105] => lookup_1433_63(labels, acc),
            [97, 105, 99, 104, 105] => lookup_1433_64(labels, acc),
            [110, 97, 103, 97, 110, 111] => lookup_1433_65(labels, acc),
            [120, 110, 45, 45, 107, 108, 116, 55, 56, 55, 100] => lookup_1433_66(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_1433_67(labels, acc),
            [120, 110, 45, 45, 100, 106, 116, 121, 52, 107] => lookup_1433_68(acc),
            [231, 166, 143, 228, 186, 149] => lookup_1433_69(acc),
            [104, 111, 107, 107, 97, 105, 100, 111] => lookup_1433_70(labels, acc),
            [229, 164, 167, 233, 152, 170] => lookup_1433_71(acc),
            [107, 111, 98, 101] => lookup_1433_72(info, labels, acc),
            [111, 105, 116, 97] => lookup_1433_73(labels, acc),
            [120, 110, 45, 45, 54, 98, 116, 119, 53, 97] => lookup_1433_74(acc),
            [120, 110, 45, 45, 118, 103, 117, 52, 48, 50, 99] => lookup_1433_75(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_1433_76(labels, acc),
            [228, 189, 144, 232, 179, 128] => lookup_1433_77(acc),
            [107, 111, 99, 104, 105] => lookup_1433_78(labels, acc),
            [115, 97, 103, 97] => lookup_1433_79(labels, acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_1433_80(labels, acc),
            [120, 110, 45, 45, 107, 55, 121, 110, 57, 53, 101] => lookup_1433_81(acc),
            [120, 110, 45, 45, 110, 116, 115, 111, 48, 105, 113, 120, 51, 97] => {
                lookup_1433_82(acc)
            }
            [120, 110, 45, 45, 54, 111, 114, 120, 50, 114] => lookup_1433_83(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_1433_84(labels, acc),
            [120, 110, 45, 45, 116, 111, 114, 49, 51, 49, 111] => lookup_1433_85(acc),
            [115, 97, 112, 112, 111, 114, 111] => lookup_1433_86(info, labels, acc),
            [115, 101, 110, 100, 97, 105] => lookup_1433_87(info, labels, acc),
            [229, 190, 179, 229, 179, 182] => lookup_1433_88(acc),
            [230, 178, 150, 231, 184, 132] => lookup_1433_89(acc),
            [229, 179, 182, 230, 160, 185] => lookup_1433_90(acc),
            [103, 117, 110, 109, 97] => lookup_1433_91(labels, acc),
            [232, 140, 168, 229, 159, 142] => lookup_1433_92(acc),
            [228, 186, 172, 233, 131, 189] => lookup_1433_93(acc),
            [229, 178, 144, 233, 152, 156] => lookup_1433_94(acc),
            [120, 110, 45, 45, 56, 108, 116, 114, 54, 50, 107] => lookup_1433_95(acc),
            [233, 149, 183, 233, 135, 142] => lookup_1433_96(acc),
            [97, 107, 105, 116, 97] => lookup_1433_97(labels, acc),
            [121, 97, 109, 97, 103, 117, 99, 104, 105] => lookup_1433_98(labels, acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 55, 49, 100] => lookup_1433_99(acc),
            [233, 185, 191, 229, 133, 144, 229, 179, 182] => lookup_1433_100(acc),
            [107, 105, 116, 97, 107, 121, 117, 115, 104, 117] => lookup_1433_101(info, labels, acc),
            [120, 110, 45, 45, 102, 54, 113, 120, 53, 51, 97] => lookup_1433_102(acc),
            [115, 104, 105, 103, 97] => lookup_1433_103(labels, acc),
            [120, 110, 45, 45, 114, 104, 116, 54, 49, 101] => lookup_1433_104(acc),
            [103, 111] => lookup_1433_105(acc),
            [229, 178, 169, 230, 137, 139] => lookup_1433_106(acc),
            [231, 165, 158, 229, 165, 136, 229, 183, 157] => lookup_1433_107(acc),
            [231, 190, 164, 233, 166, 172] => lookup_1433_108(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_1433_109(labels, acc),
            [229, 164, 167, 229, 136, 134] => lookup_1433_110(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_1433_111(labels, acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_1433_112(labels, acc),
            [230, 150, 176, 230, 189, 159] => lookup_1433_113(acc),
            [120, 110, 45, 45, 113, 113, 113, 116, 49, 49, 109] => lookup_1433_114(acc),
            [120, 110, 45, 45, 53, 114, 116, 113, 51, 52, 107] => lookup_1433_115(acc),
            [229, 165, 136, 232, 137, 175] => lookup_1433_116(acc),
            [120, 110, 45, 45, 100, 53, 113, 118, 55, 122, 56, 55, 54, 99] => lookup_1433_117(acc),
            [120, 110, 45, 45, 114, 104, 116, 50, 55, 122] => lookup_1433_118(acc),
            [120, 110, 45, 45, 52, 112, 118, 120, 115] => lookup_1433_119(acc),
            [229, 177, 177, 229, 189, 162] => lookup_1433_120(acc),
            [116, 111, 107, 121, 111] => lookup_1433_121(labels, acc),
            [120, 110, 45, 45, 109, 107, 114, 117, 52, 53, 105] => lookup_1433_122(acc),
            [120, 110, 45, 45, 48, 116, 114, 113, 55, 112, 55, 110, 110] => lookup_1433_123(acc),
            [120, 110, 45, 45, 107, 108, 116, 120, 57, 97] => lookup_1433_124(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_1433_125(labels, acc),
            [101, 104, 105, 109, 101] => lookup_1433_126(labels, acc),
            [109, 105, 101] => lookup_1433_127(labels, acc),
            [120, 110, 45, 45, 49, 99, 116, 119, 111] => lookup_1433_128(acc),
            [99, 111] => lookup_1433_129(acc),
            [107, 97, 103, 97, 119, 97] => lookup_1433_130(labels, acc),
            [120, 110, 45, 45, 107, 108, 116, 112, 55, 100] => lookup_1433_131(acc),
            [105, 119, 97, 116, 101] => lookup_1433_132(labels, acc),
            [120, 110, 45, 45, 122, 98, 120, 48, 50, 53, 100] => lookup_1433_133(acc),
            [230, 187, 139, 232, 179, 128] => lookup_1433_134(acc),
            [104, 105, 114, 111, 115, 104, 105, 109, 97] => lookup_1433_135(labels, acc),
            [229, 133, 181, 229, 186, 171] => lookup_1433_136(acc),
            [120, 110, 45, 45, 117, 117, 119, 117, 53, 56, 97] => lookup_1433_137(acc),
            [97, 111, 109, 111, 114, 105] => lookup_1433_138(labels, acc),
            [97, 99] => lookup_1433_139(acc),
            [120, 110, 45, 45, 117, 105, 115, 116, 50, 50, 104] => lookup_1433_140(acc),
            [111, 114] => lookup_1433_141(acc),
            [233, 171, 152, 231, 159, 165] => lookup_1433_142(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_1433_143(labels, acc),
            [104, 121, 111, 103, 111] => lookup_1433_144(labels, acc),
            [230, 132, 155, 231, 159, 165] => lookup_1433_145(acc),
            [102, 117, 107, 117, 111, 107, 97] => lookup_1433_146(labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1433_147(acc),
            [120, 110, 45, 45, 114, 104, 116, 51, 100] => lookup_1433_148(acc),
            [229, 178, 161, 229, 177, 177] => lookup_1433_149(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_1433_150(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_1433_151(labels, acc),
            [120, 110, 45, 45, 110, 105, 116, 50, 50, 53, 107] => lookup_1433_152(acc),
            [231, 166, 143, 229, 178, 161] => lookup_1433_153(acc),
            [231, 159, 179, 229, 183, 157] => lookup_1433_154(acc),
            [120, 110, 45, 45, 107, 98, 114, 113, 55, 111] => lookup_1433_155(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_1433_156(labels, acc),
            [120, 110, 45, 45, 55, 116, 48, 97, 50, 54, 52, 99] => lookup_1433_157(acc),
            [229, 146, 140, 230, 173, 140, 229, 177, 177] => lookup_1433_158(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1434_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 115, 115] => lookup_1434_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1435() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1436_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436_5_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1436_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108] => lookup_1436_5_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1436_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118] => lookup_1436_5_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1436_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1436<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_1436_0(acc),
            [111, 114, 103] => lookup_1436_1(acc),
            [103, 111, 98] => lookup_1436_2(acc),
            [99, 111, 109] => lookup_1436_3(acc),
            [101, 100, 117] => lookup_1436_4(acc),
            [110, 101, 116] => lookup_1436_5(labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1436_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1437() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1439() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1442() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1443() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1444() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1445() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1450() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1453() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1456_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1456_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1456_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1456_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1456_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1456_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1456<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1456_0(acc),
            [119, 101, 98] => lookup_1456_1(acc),
            [111, 114] => lookup_1456_2(acc),
            [112, 111, 110, 112, 101, 115] => lookup_1456_3(acc),
            [103, 111] => lookup_1456_4(acc),
            [100, 101, 115, 97] => lookup_1456_5(acc),
            [109, 121] => lookup_1456_6(acc),
            [99, 111] => lookup_1456_7(labels, acc),
            [98, 105, 122] => lookup_1456_8(acc),
            [102, 111, 114, 116, 101] => lookup_1456_9(acc),
            [109, 105, 108] => lookup_1456_10(acc),
            [98, 108, 111, 103, 101, 114] => lookup_1456_11(acc),
            [119, 98, 108, 111, 103] => lookup_1456_12(acc),
            [115, 99, 104] => lookup_1456_13(acc),
            [110, 101, 116] => lookup_1456_14(acc),
            [102, 108, 97, 112] => lookup_1456_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1457_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1457<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1457_0(acc),
            [99, 111] => lookup_1457_1(acc),
            [110, 101, 116] => lookup_1457_2(acc),
            [111, 102] => lookup_1457_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1458_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1458_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1458_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1458<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 97, 115, 116] => lookup_1458_0(acc),
            [117, 98, 101, 114] => lookup_1458_1(acc),
            [120, 115, 52, 97, 108, 108] => lookup_1458_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1459() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_1462_0(acc),
            [101, 100, 117] => lookup_1462_1(acc),
            [109, 101, 100] => lookup_1462_2(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1462_3(acc),
            [99, 111] => lookup_1462_4(acc),
            [99, 111, 109] => lookup_1462_5(acc),
            [111, 114, 103] => lookup_1462_6(acc),
            [110, 101, 116] => lookup_1462_7(acc),
            [103, 111, 118] => lookup_1462_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1463_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1463<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_1463_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1464() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1466() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1470() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1475() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1476() -> Info {
    Info {
        len: 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1483() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1485_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1485_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1485<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_1485_0(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1485_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1486_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1486_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1486_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1486_0(acc),
            [112, 101, 114] => lookup_1486_1(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1486_2(acc),
            [111, 114, 103] => lookup_1486_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1486_4(acc),
            [99, 111, 109] => lookup_1486_5(acc),
            [110, 101, 116] => lookup_1486_6(acc),
            [103, 111, 118] => lookup_1486_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1487() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 112, 114, 101, 118, 101, 110, 116, 105, 111, 110] => {
                lookup_1489_0(acc)
            }
            [97, 105, 114, 45, 115, 117, 114, 118, 101, 105, 108, 108, 97, 110, 99, 101] => {
                lookup_1489_1(acc)
            }
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110] => lookup_1489_2(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_1489_3(acc),
            [119, 111, 114, 107, 105, 110, 103, 103, 114, 111, 117, 112] => lookup_1489_4(acc),
            [99, 111, 117, 110, 99, 105, 108] => lookup_1489_5(acc),
            [97, 105, 114, 116, 114, 97, 102, 102, 105, 99] => lookup_1489_6(acc),
            [97, 101, 114, 111, 100, 114, 111, 109, 101] => lookup_1489_7(acc),
            [99, 104, 97, 114, 116, 101, 114] => lookup_1489_8(acc),
            [101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116] => lookup_1489_9(acc),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_1489_10(acc),
            [109, 105, 99, 114, 111, 108, 105, 103, 104, 116] => lookup_1489_11(acc),
            [114, 101, 112, 98, 111, 100, 121] => lookup_1489_12(acc),
            [97, 103, 101, 110, 116, 115] => lookup_1489_13(acc),
            [112, 97, 115, 115, 101, 110, 103, 101, 114, 45, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => {
                lookup_1489_14(acc)
            }
            [99, 97, 97] => lookup_1489_15(acc),
            [101, 100, 117, 99, 97, 116, 111, 114] => lookup_1489_16(acc),
            [97, 117, 116, 104, 111, 114] => lookup_1489_17(acc),
            [99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110] => lookup_1489_18(acc),
            [108, 101, 97, 115, 105, 110, 103] => lookup_1489_19(acc),
            [109, 97, 105, 110, 116, 101, 110, 97, 110, 99, 101] => lookup_1489_20(acc),
            [99, 97, 114, 103, 111] => lookup_1489_21(acc),
            [103, 111, 118, 101, 114, 110, 109, 101, 110, 116] => lookup_1489_22(acc),
            [99, 114, 101, 119] => lookup_1489_23(acc),
            [98, 97, 108, 108, 111, 111, 110, 105, 110, 103] => lookup_1489_24(acc),
            [114, 111, 116, 111, 114, 99, 114, 97, 102, 116] => lookup_1489_25(acc),
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110] => {
                lookup_1489_26(acc)
            }
            [115, 97, 102, 101, 116, 121] => lookup_1489_27(acc),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_1489_28(acc),
            [98, 114, 111, 107, 101, 114] => lookup_1489_29(acc),
            [114, 101, 99, 114, 101, 97, 116, 105, 111, 110] => lookup_1489_30(acc),
            [112, 97, 114, 97, 99, 104, 117, 116, 105, 110, 103] => lookup_1489_31(acc),
            [97, 109, 117, 115, 101, 109, 101, 110, 116] => lookup_1489_32(acc),
            [108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_1489_33(acc),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_1489_34(acc),
            [102, 101, 100, 101, 114, 97, 116, 105, 111, 110] => lookup_1489_35(acc),
            [101, 120, 112, 114, 101, 115, 115] => lookup_1489_36(acc),
            [115, 104, 111, 119] => lookup_1489_37(acc),
            [115, 107, 121, 100, 105, 118, 105, 110, 103] => lookup_1489_38(acc),
            [109, 101, 100, 105, 97] => lookup_1489_39(acc),
            [99, 111, 110, 115, 117, 108, 116, 97, 110, 116] => lookup_1489_40(acc),
            [102, 108, 105, 103, 104, 116] => lookup_1489_41(acc),
            [116, 114, 97, 100, 105, 110, 103] => lookup_1489_42(acc),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_1489_43(acc),
            [103, 114, 111, 117, 110, 100, 104, 97, 110, 100, 108, 105, 110, 103] => {
                lookup_1489_44(acc)
            }
            [117, 110, 105, 111, 110] => lookup_1489_45(acc),
            [115, 99, 105, 101, 110, 116, 105, 115, 116] => lookup_1489_46(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_1489_47(acc),
            [109, 111, 100, 101, 108, 108, 105, 110, 103] => lookup_1489_48(acc),
            [97, 105, 114, 99, 114, 97, 102, 116] => lookup_1489_49(acc),
            [115, 116, 117, 100, 101, 110, 116] => lookup_1489_50(acc),
            [100, 101, 115, 105, 103, 110] => lookup_1489_51(acc),
            [100, 103, 99, 97] => lookup_1489_52(acc),
            [97, 101, 114, 111, 99, 108, 117, 98] => lookup_1489_53(acc),
            [99, 105, 118, 105, 108, 97, 118, 105, 97, 116, 105, 111, 110] => lookup_1489_54(acc),
            [97, 101, 114, 111, 98, 97, 116, 105, 99] => lookup_1489_55(acc),
            [99, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112] => lookup_1489_56(acc),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_1489_57(acc),
            [112, 105, 108, 111, 116] => lookup_1489_58(acc),
            [112, 114, 101, 115, 115] => lookup_1489_59(acc),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_1489_60(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 116] => lookup_1489_61(acc),
            [101, 110, 103, 105, 110, 101] => lookup_1489_62(acc),
            [104, 111, 109, 101, 98, 117, 105, 108, 116] => lookup_1489_63(acc),
            [104, 97, 110, 103, 103, 108, 105, 100, 105, 110, 103] => lookup_1489_64(acc),
            [97, 105, 114, 112, 111, 114, 116] => lookup_1489_65(acc),
            [103, 108, 105, 100, 105, 110, 103] => lookup_1489_66(acc),
            [110, 97, 118, 105, 103, 97, 116, 105, 111, 110] => lookup_1489_67(acc),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_1489_68(acc),
            [116, 114, 97, 100, 101, 114] => lookup_1489_69(acc),
            [114, 101, 115] => lookup_1489_70(acc),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_1489_71(acc),
            [112, 97, 114, 97, 103, 108, 105, 100, 105, 110, 103] => lookup_1489_72(acc),
            [109, 97, 103, 97, 122, 105, 110, 101] => lookup_1489_73(acc),
            [99, 108, 117, 98] => lookup_1489_74(acc),
            [99, 111, 110, 102, 101, 114, 101, 110, 99, 101] => lookup_1489_75(acc),
            [97, 105, 114, 108, 105, 110, 101] => lookup_1489_76(acc),
            [99, 111, 110, 116, 114, 111, 108] => lookup_1489_77(acc),
            [116, 114, 97, 105, 110, 101, 114] => lookup_1489_78(acc),
            [119, 111, 114, 107, 115] => lookup_1489_79(acc),
            [97, 105, 114, 45, 116, 114, 97, 102, 102, 105, 99, 45, 99, 111, 110, 116, 114, 111, 108] => {
                lookup_1489_80(acc)
            }
            [101, 109, 101, 114, 103, 101, 110, 99, 121] => lookup_1489_81(acc),
            [106, 111, 117, 114, 110, 97, 108] => lookup_1489_82(acc),
            [103, 114, 111, 117, 112] => lookup_1489_83(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_1489_84(acc),
            [102, 117, 101, 108] => lookup_1489_85(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1490_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1490_0(acc),
            [101, 100, 117] => lookup_1490_1(acc),
            [99, 111, 109] => lookup_1490_2(acc),
            [111, 114] => lookup_1490_3(acc),
            [111, 114, 103] => lookup_1490_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1491() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1492() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1493() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1495_0(acc),
            [109, 101, 100] => lookup_1495_1(acc),
            [112, 117, 98] => lookup_1495_2(acc),
            [111, 114, 103] => lookup_1495_3(acc),
            [99, 111, 109] => lookup_1495_4(acc),
            [115, 99, 104] => lookup_1495_5(acc),
            [110, 101, 116] => lookup_1495_6(acc),
            [103, 111, 118] => lookup_1495_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1496() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1497() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1499() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1500_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1500_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1500_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1500_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1500_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1500_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1500_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1500<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116] => lookup_1500_0(acc),
            [99, 111, 100, 101] => lookup_1500_1(info, labels, acc),
            [114, 101, 112, 108] => lookup_1500_2(acc),
            [104, 115] => lookup_1500_3(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1500_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1501_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1501_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 109, 97, 105, 108, 101, 114] => lookup_1501_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1501_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1501_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1501_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1501_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1501_0(acc),
            [229, 149, 134, 230, 165, 173] => lookup_1501_1(acc),
            [105, 100, 118] => lookup_1501_2(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1501_3(acc),
            [99, 111, 109] => lookup_1501_4(labels, acc),
            [103, 97, 109, 101] => lookup_1501_5(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1501_6(acc),
            [103, 111, 118] => lookup_1501_7(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1501_8(acc),
            [109, 105, 108] => lookup_1501_9(acc),
            [99, 108, 117, 98] => lookup_1501_10(acc),
            [110, 121, 109] => lookup_1501_11(acc),
            [117, 114, 108] => lookup_1501_12(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 111, 54, 52, 97] => lookup_1501_13(acc),
            [111, 114, 103] => lookup_1501_14(acc),
            [231, 182, 178, 232, 183, 175] => lookup_1501_15(acc),
            [120, 110, 45, 45, 99, 122, 114, 119, 50, 56, 98] => lookup_1501_16(acc),
            [101, 98, 105, 122] => lookup_1501_17(acc),
            [110, 101, 116] => lookup_1501_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1502() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1503_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1503_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1503_0(acc),
            [109, 121, 112, 101, 116, 115] => lookup_1503_1(acc),
            [101, 100, 117] => lookup_1503_2(acc),
            [111, 114, 103] => lookup_1503_3(acc),
            [99, 111, 109] => lookup_1503_4(acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_1503_5(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1503_6(acc),
            [97, 100, 118, 105, 115, 111, 114] => lookup_1503_7(info, labels, acc),
            [110, 101, 116] => lookup_1503_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1504() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1505_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1505_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1505_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1505_0(acc),
            [101, 100, 117] => lookup_1505_1(acc),
            [99, 111, 109] => lookup_1505_2(labels, acc),
            [110, 101, 116] => lookup_1505_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1506() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1508_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1508_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1508_0(acc),
            [103, 111, 98] => lookup_1508_1(acc),
            [110, 111, 109] => lookup_1508_2(acc),
            [101, 100, 117] => lookup_1508_3(acc),
            [110, 121, 109] => lookup_1508_4(acc),
            [111, 114, 103] => lookup_1508_5(acc),
            [99, 111, 109] => lookup_1508_6(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1508_7(acc),
            [110, 101, 116] => lookup_1508_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1509() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1511() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1514() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1515_0(acc),
            [101, 100, 117] => lookup_1515_1(acc),
            [99, 111, 109] => lookup_1515_2(acc),
            [103, 111, 118] => lookup_1515_3(acc),
            [110, 101, 116] => lookup_1515_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1516() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1519() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1521() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1522() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1523_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1523_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1523_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1523_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1523_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [98, 122, 122] => lookup_1523_0_1(info, labels, acc),
            wild => lookup_1523_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1523<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 112, 112, 115] => lookup_1523_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1524() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1525<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 51, 51, 55] => lookup_1525_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1526() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1527() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1528_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 117, 98] => lookup_1528_0(acc),
            [109, 105, 108] => lookup_1528_1(acc),
            [101, 100, 117] => lookup_1528_2(acc),
            [99, 111, 109] => lookup_1528_3(labels, acc),
            [111, 114, 103] => lookup_1528_4(acc),
            [110, 101, 116] => lookup_1528_5(acc),
            [110, 111, 109] => lookup_1528_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1529() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1530() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1532() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1534() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1535() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1537() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1538() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1540() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1541() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1543_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1543<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1543_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1544() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1546() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 117, 118] => lookup_1547_0(acc),
            [110, 111, 109] => lookup_1547_1(acc),
            [101, 100, 117] => lookup_1547_2(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_1547_3(acc),
            [99, 111, 111, 112] => lookup_1547_4(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_1547_5(acc),
            [97, 115, 115] => lookup_1547_6(acc),
            [99, 111, 109] => lookup_1547_7(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110, 115] => lookup_1547_8(acc),
            [103, 111, 118] => lookup_1547_9(acc),
            [109, 105, 108] => lookup_1547_10(acc),
            [112, 114, 100] => lookup_1547_11(acc),
            [116, 109] => lookup_1547_12(acc),
            [111, 114, 103] => lookup_1547_13(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_1547_14(acc),
            [97, 115, 115, 111] => lookup_1547_15(acc),
            [112, 114, 101, 115, 115, 101] => lookup_1547_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1548() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1549() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 117, 97, 109] => lookup_1550_0(acc),
            [101, 100, 117] => lookup_1550_1(acc),
            [105, 110, 102, 111] => lookup_1550_2(acc),
            [111, 114, 103] => lookup_1550_3(acc),
            [99, 111, 109] => lookup_1550_4(acc),
            [119, 101, 98] => lookup_1550_5(acc),
            [110, 101, 116] => lookup_1550_6(acc),
            [103, 111, 118] => lookup_1550_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1551_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1551_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1551_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1551_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1551<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1551_0(acc),
            [106, 101, 108, 101] => lookup_1551_1(acc),
            [112, 111, 110, 121] => lookup_1551_2(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1551_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1552() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1553() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1554_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1554<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 110, 105, 103, 104, 116, 112, 111, 105, 110, 116] => lookup_1554_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1555_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1555_0(acc),
            [111, 114, 103] => lookup_1555_1(acc),
            [99, 111, 109] => lookup_1555_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1556() -> Info {
    Info {
        len: 33usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1557() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1560() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1561() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1562() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1563() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1564() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1565() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1567() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1569() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1570() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1571_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1572() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1573() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1575() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1576() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1578() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1579_0(acc),
            [112, 114, 111] => lookup_1579_1(acc),
            [104, 101, 97, 108, 116, 104] => lookup_1579_2(acc),
            [101, 100, 117] => lookup_1579_3(acc),
            [105, 110, 116] => lookup_1579_4(acc),
            [105, 110, 102, 111] => lookup_1579_5(acc),
            [110, 97, 109, 101] => lookup_1579_6(acc),
            [111, 114, 103] => lookup_1579_7(acc),
            [99, 111, 109] => lookup_1579_8(acc),
            [98, 105, 122] => lookup_1579_9(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1579_10(acc),
            [110, 101, 116] => lookup_1579_11(acc),
            [103, 111, 118] => lookup_1579_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1580() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1581() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1583() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1584() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1585() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1586() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1587() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1588() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1589() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1591() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1592() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 109] => lookup_1593_0(acc),
            [97, 115, 115, 111] => lookup_1593_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1594() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1595() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1596_0(acc),
            [101, 100, 117] => lookup_1596_1(acc),
            [99, 111, 109] => lookup_1596_2(acc),
            [110, 101, 116] => lookup_1596_3(acc),
            [103, 111, 118] => lookup_1596_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1597() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1598() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1599() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1600() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1602_0(acc),
            [109, 105, 108] => lookup_1602_1(acc),
            [101, 100, 117] => lookup_1602_2(acc),
            [103, 111, 98] => lookup_1602_3(acc),
            [105, 110] => lookup_1602_4(acc),
            [105, 110, 102, 111] => lookup_1602_5(acc),
            [105, 110, 116] => lookup_1602_6(acc),
            [110, 111, 109] => lookup_1602_7(acc),
            [99, 111] => lookup_1602_8(acc),
            [99, 111, 109] => lookup_1602_9(acc),
            [98, 105, 122] => lookup_1602_10(acc),
            [111, 114, 103] => lookup_1602_11(acc),
            [110, 101, 116] => lookup_1602_12(acc),
            [119, 101, 98] => lookup_1602_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1603() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1604() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1605() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1606() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1607() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1608() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1610() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116] => lookup_1612_3_0(acc),
            [98, 99] => lookup_1612_3_1(acc),
            [117, 115] => lookup_1612_3_2(acc),
            [101, 117] => lookup_1612_3_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1612_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1612_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1612_0(acc),
            [110, 111, 119] => lookup_1612_1(acc),
            [109, 105, 108] => lookup_1612_2(acc),
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_1612_3(info, labels, acc),
            [118, 120, 108] => lookup_1612_4(acc),
            [111, 114, 103] => lookup_1612_5(acc),
            [99, 111, 109] => lookup_1612_6(acc),
            [98, 105, 112] => lookup_1612_7(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1612_8(acc),
            [104, 97, 115, 104, 98, 97, 110, 103] => lookup_1612_9(acc),
            [103, 111, 118] => lookup_1612_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1613() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1614() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1616() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1618() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1619() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1621() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1622() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1624_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1624_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1624_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1624<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_1624_0(info, labels, acc),
            [107, 104, 112, 108, 97, 121] => lookup_1624_1(acc),
            [104, 111, 115, 116, 105, 110, 103, 45, 99, 108, 117, 115, 116, 101, 114] => {
                lookup_1624_2(acc)
            }
            [99, 111] => lookup_1624_3(acc),
            [118, 105, 114, 116, 117, 101, 101, 108, 100, 111, 109, 101, 105, 110] => {
                lookup_1624_4(acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1624_5(acc),
            [97, 109, 115, 119] => lookup_1624_6(acc),
            [99, 105, 115, 116, 114, 111, 110] => lookup_1624_7(acc),
            [100, 101, 109, 111, 110] => lookup_1624_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1625() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1626() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1627() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1628_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1628_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1628_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1628_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1628_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 117, 109] => lookup_1628_0(acc),
            [105, 110, 116] => lookup_1628_1(acc),
            [101, 100, 117] => lookup_1628_2(acc),
            [102, 105, 114, 109] => lookup_1628_3(acc),
            [110, 111, 109] => lookup_1628_4(acc),
            [111, 116, 97, 112] => lookup_1628_5(info, labels, acc),
            [97, 114, 116, 115] => lookup_1628_6(acc),
            [99, 114, 100] => lookup_1628_7(acc),
            [114, 101, 99] => lookup_1628_8(acc),
            [99, 111, 109] => lookup_1628_9(labels, acc),
            [108, 112, 97, 103, 101, 115] => lookup_1628_10(acc),
            [109, 121, 112, 105] => lookup_1628_11(acc),
            [103, 111, 118] => lookup_1628_12(acc),
            [110, 52, 116] => lookup_1628_13(acc),
            [109, 105, 108] => lookup_1628_14(acc),
            [105, 110, 102, 111] => lookup_1628_15(acc),
            [99, 97, 114, 114, 100] => lookup_1628_16(acc),
            [108, 101, 97, 100, 112, 97, 103, 101, 115] => lookup_1628_17(acc),
            [111, 114, 103] => lookup_1628_18(acc),
            [114, 101, 112, 108] => lookup_1628_19(acc),
            [119, 101, 98] => lookup_1628_20(acc),
            [110, 101, 116] => lookup_1628_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1629() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1630() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1631() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1632() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1633() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1634() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1635_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1635_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1635_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1635_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1635_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [231, 187, 132, 231, 187, 135] => lookup_1635_0(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1635_1(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_1635_2(acc),
            [231, 174, 135, 228, 186, 186] => lookup_1635_3(acc),
            [105, 100, 118] => lookup_1635_4(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1635_5(acc),
            [108, 116, 100] => lookup_1635_6(acc),
            [105, 110, 99] => lookup_1635_7(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 118, 120] => lookup_1635_8(acc),
            [103, 111, 118] => lookup_1635_9(acc),
            [230, 149, 142, 232, 130, 178] => lookup_1635_10(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1635_11(acc),
            [231, 189, 145, 231, 181, 161] => lookup_1635_12(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1635_13(acc),
            [110, 121, 109] => lookup_1635_14(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1635_15(acc),
            [111, 114, 103] => lookup_1635_16(acc),
            [120, 110, 45, 45, 109, 107, 48, 97, 120, 105] => lookup_1635_17(acc),
            [229, 133, 172, 229, 143, 184] => lookup_1635_18(acc),
            [229, 128, 139, 228, 186, 186] => lookup_1635_19(acc),
            [110, 101, 116] => lookup_1635_20(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 121, 52, 97] => lookup_1635_21(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1635_22(acc),
            [101, 100, 117] => lookup_1635_23(acc),
            [231, 181, 132, 231, 187, 135] => lookup_1635_24(acc),
            [231, 182, 178, 231, 187, 156] => lookup_1635_25(acc),
            [99, 111, 109] => lookup_1635_26(acc),
            [120, 110, 45, 45, 103, 109, 113, 48, 53, 48, 105] => lookup_1635_27(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1635_28(acc),
            [231, 187, 132, 231, 185, 148] => lookup_1635_29(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 113, 51, 98] => lookup_1635_30(acc),
            [231, 189, 145, 231, 187, 156] => lookup_1635_31(acc),
            [115, 101, 99, 97, 97, 115] => lookup_1635_32(acc),
            [120, 110, 45, 45, 99, 105, 113, 112, 110] => lookup_1635_33(acc),
            [120, 110, 45, 45, 108, 99, 118, 114, 51, 50, 100] => lookup_1635_34(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_1635_35(acc),
            [230, 148, 191, 229, 186, 156] => lookup_1635_36(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1635_37(acc),
            [228, 184, 170, 228, 186, 186] => lookup_1635_38(acc),
            [120, 110, 45, 45, 116, 110, 48, 97, 103] => lookup_1635_39(acc),
            [230, 149, 153, 232, 130, 178] => lookup_1635_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1636_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_1636_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 101] => lookup_1636_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [103] => lookup_1636_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1636_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_28_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1636_28_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 115] => lookup_1636_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_1636_32_0(acc),
            [99, 108, 111, 117, 100, 45, 102, 114, 49] => lookup_1636_32_1(acc),
            [99, 108, 111, 117, 100, 45, 100, 101] => lookup_1636_32_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_1636_33_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_35_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_35_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1636_35_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 115] => lookup_1636_35_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_38_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_38<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1636_38_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_39_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_39<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1636_39_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_42_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_42<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1636_42_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 105, 99, 101, 115] => lookup_1636_45_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_48<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107, 48] => lookup_1636_48_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_52_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_52_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1636_52_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_52_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_52_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1636_52_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_52_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_52_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1636_52_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_52_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_52_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1636_52_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_52<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 115, 116, 105, 110, 103] => lookup_1636_52_0(info, labels, acc),
            [100, 105, 115, 114, 101, 99] => lookup_1636_52_1(info, labels, acc),
            [112, 114, 111, 100] => lookup_1636_52_2(info, labels, acc),
            [100, 101, 118] => lookup_1636_52_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_55<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_1636_55_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_59_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_59_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1636_59_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_59<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1636_59_0(acc),
            [98, 97, 99, 107, 121, 97, 114, 100, 115] => lookup_1636_59_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1636_60_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1636_60<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1636_60_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1636<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 110, 45, 114, 105, 111] => lookup_1636_0(info, labels, acc),
            [115, 104, 119] => lookup_1636_1(acc),
            [98, 111, 120, 102, 117, 115, 101] => lookup_1636_2(acc),
            [103, 105, 116, 108, 97, 98] => lookup_1636_3(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1636_4(acc),
            [118, 97, 112, 111, 114, 99, 108, 111, 117, 100] => lookup_1636_5(acc),
            [103, 104, 111, 115, 116] => lookup_1636_6(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1636_7(acc),
            [97, 112, 105, 103, 101, 101] => lookup_1636_8(acc),
            [108, 111, 108, 105, 112, 111, 112] => lookup_1636_9(acc),
            [98, 45, 100, 97, 116, 97] => lookup_1636_10(acc),
            [110, 105, 100] => lookup_1636_11(acc),
            [100, 121, 110, 53, 51] => lookup_1636_12(acc),
            [101, 110, 111, 110, 105, 99] => lookup_1636_13(labels, acc),
            [98, 97, 115, 105, 99, 115, 101, 114, 118, 101, 114] => lookup_1636_14(acc),
            [104, 97, 115, 117, 114, 97, 45, 97, 112, 112] => lookup_1636_15(acc),
            [110, 111, 100, 101, 97, 114, 116] => lookup_1636_16(info, labels, acc),
            [115, 104, 105, 102, 116, 101, 100, 105, 116] => lookup_1636_17(acc),
            [117, 116, 119, 101, 110, 116, 101] => lookup_1636_18(acc),
            [118, 98, 114, 112, 108, 115, 98, 120] => lookup_1636_19(info, labels, acc),
            [99, 111, 109] => lookup_1636_20(acc),
            [109, 111, 45, 115, 105, 101, 109, 101, 110, 115] => lookup_1636_21(acc),
            [113, 111, 116, 111] => lookup_1636_22(acc),
            [119, 101, 98, 116, 104, 105, 110, 103, 115] => lookup_1636_23(acc),
            [102, 104, 45, 109, 117, 101, 110, 115, 116, 101, 114] => lookup_1636_24(acc),
            [112, 97, 110, 116, 104, 101, 111, 110, 115, 105, 116, 101] => lookup_1636_25(acc),
            [100, 101, 100, 121, 110] => lookup_1636_26(acc),
            [50, 48, 51, 56] => lookup_1636_27(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_1636_28(info, labels, acc),
            [100, 114, 117, 100] => lookup_1636_29(acc),
            [111, 112, 117, 115, 105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => {
                lookup_1636_30(info, labels, acc)
            }
            [98, 97, 114, 115, 121] => lookup_1636_31(acc),
            [117, 110, 105, 115, 112, 97, 99, 101] => lookup_1636_32(info, labels, acc),
            [108, 97, 105, 114] => lookup_1636_33(info, labels, acc),
            [98, 97, 99, 107, 112, 108, 97, 110, 101, 97, 112, 112] => lookup_1636_34(acc),
            [113, 99, 120] => lookup_1636_35(labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1636_36(acc),
            [115, 112, 97, 99, 101, 107, 105, 116] => lookup_1636_37(acc),
            [115, 53, 121] => lookup_1636_38(info, labels, acc),
            [115, 116, 111, 108, 111, 115] => lookup_1636_39(info, labels, acc),
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_1636_40(acc),
            [115, 97, 110, 100, 99, 97, 116, 115] => lookup_1636_41(acc),
            [97, 122, 117, 114, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114] => {
                lookup_1636_42(info, labels, acc)
            }
            [110, 111, 100, 117, 109] => lookup_1636_43(acc),
            [98, 114, 111, 119, 115, 101, 114, 115, 97, 102, 101, 116, 121, 109, 97, 114, 107] => {
                lookup_1636_44(acc)
            }
            [114, 101, 115, 105, 110, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_1636_45(info, labels, acc)
            }
            [106, 101, 108, 101] => lookup_1636_46(acc),
            [104, 111, 115, 116, 121, 104, 111, 115, 116, 105, 110, 103] => lookup_1636_47(acc),
            [98, 105, 103, 118] => lookup_1636_48(info, labels, acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_1636_49(acc),
            [112, 114, 111, 116, 111, 110, 101, 116] => lookup_1636_50(acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115] => lookup_1636_51(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116] => lookup_1636_52(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 115, 101, 114, 118, 101, 114] => lookup_1636_53(acc),
            [114, 101, 115, 105, 110, 100, 101, 118, 105, 99, 101] => lookup_1636_54(acc),
            [100, 97, 112, 112, 110, 111, 100, 101] => lookup_1636_55(info, labels, acc),
            [104, 122, 99] => lookup_1636_56(acc),
            [103, 105, 116, 104, 117, 98] => lookup_1636_57(acc),
            [110, 103, 114, 111, 107] => lookup_1636_58(acc),
            [98, 97, 110, 122, 97, 105, 99, 108, 111, 117, 100] => {
                lookup_1636_59(info, labels, acc)
            }
            [111, 110, 45, 107, 51, 115] => lookup_1636_60(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1637_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1637_0(acc),
            [99, 111, 109] => lookup_1637_1(acc),
            [101, 100, 117] => lookup_1637_2(acc),
            [110, 101, 116] => lookup_1637_3(acc),
            [103, 111, 118] => lookup_1637_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1638() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1640_0(acc),
            [99, 111] => lookup_1640_1(acc),
            [99, 111, 109] => lookup_1640_2(acc),
            [111, 114, 103] => lookup_1640_3(acc),
            [110, 101, 116] => lookup_1640_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641() -> Info {
    Info {
        len: 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1642() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1645_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1645_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1645_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1645_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1645_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 101, 110] => lookup_1645_0(acc),
            [101, 100, 117] => lookup_1645_1(acc),
            [110, 97, 109, 101] => lookup_1645_2(acc),
            [98, 101, 108] => lookup_1645_3(acc),
            [116, 115, 107] => lookup_1645_4(acc),
            [107, 49, 50] => lookup_1645_5(acc),
            [99, 111, 109] => lookup_1645_6(labels, acc),
            [98, 105, 122] => lookup_1645_7(acc),
            [112, 111, 108] => lookup_1645_8(acc),
            [103, 111, 118] => lookup_1645_9(acc),
            [107, 101, 112] => lookup_1645_10(acc),
            [110, 99] => lookup_1645_11(labels, acc),
            [109, 105, 108] => lookup_1645_12(acc),
            [98, 98, 115] => lookup_1645_13(acc),
            [105, 110, 102, 111] => lookup_1645_14(acc),
            [97, 118] => lookup_1645_15(acc),
            [116, 101, 108] => lookup_1645_16(acc),
            [100, 114] => lookup_1645_17(acc),
            [111, 114, 103] => lookup_1645_18(acc),
            [119, 101, 98] => lookup_1645_19(acc),
            [110, 101, 116] => lookup_1645_20(acc),
            [116, 118] => lookup_1645_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1646() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1648() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1649() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1650() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1652() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1656() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1658_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1658_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1658_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1658_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1658_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1658_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1658_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 101] => lookup_1658_0(acc),
            [98, 97, 114, 115, 121] => lookup_1658_1(acc),
            [109, 98] => lookup_1658_2(acc),
            [110, 115] => lookup_1658_3(acc),
            [113, 99] => lookup_1658_4(acc),
            [97, 98] => lookup_1658_5(acc),
            [110, 116] => lookup_1658_6(acc),
            [99, 111] => lookup_1658_7(acc),
            [121, 107] => lookup_1658_8(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1658_9(acc),
            [97, 119, 100, 101, 118] => lookup_1658_10(info, labels, acc),
            [111, 110] => lookup_1658_11(acc),
            [103, 99] => lookup_1658_12(acc),
            [110, 98] => lookup_1658_13(acc),
            [110, 111, 45, 105, 112] => lookup_1658_14(acc),
            [98, 99] => lookup_1658_15(acc),
            [110, 117] => lookup_1658_16(acc),
            [110, 102] => lookup_1658_17(acc),
            [110, 108] => lookup_1658_18(acc),
            [115, 107] => lookup_1658_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1659() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1660() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1661() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1662() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1663_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1663_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1663<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1663_0(acc),
            [101, 100, 117] => lookup_1663_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1664() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1665() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1666_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1666_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1666_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 112, 115] => lookup_1666_18_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1666_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [104, 98] => lookup_1666_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1666_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_38_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_38_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1666_38_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1666_38_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_38_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1666_38_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1666_38_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_38_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1666_38_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1666_38_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_38_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1666_38_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1666_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 112, 101, 99, 116, 114, 117, 109] => lookup_1666_38_0(info, labels, acc),
            [118, 112, 115] => lookup_1666_38_1(info, labels, acc),
            [108, 97, 110, 100, 105, 110, 103] => lookup_1666_38_2(info, labels, acc),
            [104, 111, 115, 116, 105, 110, 103] => lookup_1666_38_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1666_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 97, 45, 114, 117] => lookup_1666_0(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1666_1(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1666_2(acc),
            [105, 110, 116] => lookup_1666_3(acc),
            [109, 121, 116, 105, 115] => lookup_1666_4(acc),
            [112, 121, 97, 116, 105, 103, 111, 114, 115, 107] => lookup_1666_5(acc),
            [99, 98, 103] => lookup_1666_6(acc),
            [109, 97, 114, 105, 110, 101] => lookup_1666_7(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1666_8(acc),
            [110, 111, 118] => lookup_1666_9(acc),
            [103, 111, 118] => lookup_1666_10(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1666_11(acc),
            [114, 101, 103, 114, 117, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_1666_12(info, labels, acc)
            }
            [98, 105, 114] => lookup_1666_13(acc),
            [109, 115, 107] => lookup_1666_14(acc),
            [109, 99, 112, 114, 101] => lookup_1666_15(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1666_16(acc),
            [111, 114, 103] => lookup_1666_17(acc),
            [109, 99, 100, 105, 114] => lookup_1666_18(labels, acc),
            [110, 101, 116] => lookup_1666_19(acc),
            [108, 107, 51] => lookup_1666_20(acc),
            [97, 99] => lookup_1666_21(acc),
            [122, 115, 101, 119] => lookup_1666_22(acc),
            [101, 100, 117] => lookup_1666_23(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1666_24(acc),
            [99, 111, 109] => lookup_1666_25(acc),
            [101, 117, 114, 111, 100, 105, 114] => lookup_1666_26(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1666_27(acc),
            [112, 112] => lookup_1666_28(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1666_29(acc),
            [99, 108, 100, 109, 97, 105, 108] => lookup_1666_30(info, labels, acc),
            [109, 105, 108] => lookup_1666_31(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1666_32(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1666_33(acc),
            [114, 97, 115] => lookup_1666_34(acc),
            [115, 112, 98] => lookup_1666_35(acc),
            [110, 97, 52, 117] => lookup_1666_36(acc),
            [116, 101, 115, 116] => lookup_1666_37(acc),
            [109, 121, 106, 105, 110, 111] => lookup_1666_38(labels, acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1666_39(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1666_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1667() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1668() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1669() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1670() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1671() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1672() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
